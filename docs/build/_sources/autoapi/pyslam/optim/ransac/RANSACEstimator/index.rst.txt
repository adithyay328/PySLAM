:py:mod:`pyslam.optim.ransac.RANSACEstimator`
=============================================

.. py:module:: pyslam.optim.ransac.RANSACEstimator


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pyslam.optim.ransac.RANSACEstimator.RANSACEstimator




Attributes
~~~~~~~~~~

.. autoapisummary::

   pyslam.optim.ransac.RANSACEstimator.D


.. py:data:: D

   

.. py:class:: RANSACEstimator(numWorkers: int)

   A class responsible for estimating
   a RANSACModel from a RANSACDataset using
   a specified number of random iterations.
   Internally, all the constructor does is create
   a thread-pool for running estimation in parralel.

   :param numWorkers: The number of workers to instantiate
     in the internal ProcessPoolExecutor

   .. py:method:: __getModelAndInliers(fullDataset: pyslam.optim.ransac.RANSACDataset[D], subset: pyslam.optim.ransac.RANSACDataset[D], modelConstructor: Callable[[], pyslam.optim.ransac.RANSACModel[D]]) -> Tuple[pyslam.optim.ransac.RANSACModel[D], numpy.ndarray]
      :staticmethod:

      A helper function that returns a fitted RANSACModel and its predicted inliers in one function.

      :param fullDataset: The full dataset we were given.
      :param subset: A sub-set of the dataset to fit the model to.
      :param modelConstructor: A function tha takes no paramaters
        and returns an instance of the RANSACModel type we are trying to fit.
        Allows client code to use partial functions to pass in paramaters
        required by the constructor of the RANASCModel; these could be
        configuration paramaters, etc.

      :return: Returns a tuple of (estimated model, numpy array of inlier indices)


   .. py:method:: fit(data: pyslam.optim.ransac.RANSACDataset[D], modelConstructor: Callable[[], pyslam.optim.ransac.RANSACModel[D]], iterations: int, dataPointsPerIteration: int, refit: bool) -> pyslam.optim.ransac.RANSACModel[D]
      :async:

      Fits a RANSACModel to a given dataset. Runs
      each iteration in parralel, and optionally re-fits the model on
      all of the inliers determined by the best initial model.

      :param data: The RANSACDataset to fit to.
      :param modelConstructor: A function tha takes no paramaters
        and returns an instance of the RANSACModel type we are trying to fit.
        Allows client code to use partial functions to pass in paramaters
        required by the constructor of the RANASCModel; these could be
        configuration paramaters, etc.
      :param iterations: The number of RANSAC iterations to run.
      :param dataPointsPerIteration: The number of datapoints to sample for each
        model fitting iteration.
      :param refit: Whether or not to refit the best determined model on its
        inliers.

      :return: Retuns the best determined model.



