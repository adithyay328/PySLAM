:py:mod:`pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractionScheme`
===========================================================================================

.. py:module:: pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractionScheme


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractionScheme.DescriptorExtractionScheme




.. py:class:: DescriptorExtractionScheme

   Bases: :py:obj:`abc.ABC`

   An abstract base class that represents
   a procedure that can extract descriptors
   from an image, given a set of features
   to extract on.

   While this seemingly implies that this scheme
   need to be separate to the keypoint/feature
   coordinate selection algorithm, no such
   requirement really exists; in the case
   of end-to-end feature and descriptor
   extractors, just do both internally,
   returning the features then the descriptors,
   one after the other.

   .. py:method:: getDescriptors(inImg: pyslam.image_processing.Image.Image, inKeypoints: List[pyslam.image_processing.feature_descriptors.Keypoint.Keypoint]) -> List[pyslam.image_processing.feature_descriptors.Descriptor.Descriptor]
      :abstractmethod:

      An abstract method that subclasses must implement; takes in an
      image and a list of Keypoints, and returns a list of Descriptors;
      the assumption is that the nth Descriptor is for the nth given
      Keypoint.

      :param inImg: The image to compute Descriptors for.
      :param inKeypoints: The list of Keypoints to compute
          descriptors for.

      :return: Returns a list of Descriptors. We expect it to have
          the same size as inKeypoints, with the Nth descriptor
          describing the Nth keypoint.



