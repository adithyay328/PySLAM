Search.setIndex({"docnames": ["autoapi/index", "autoapi/pyslam/capture/index", "autoapi/pyslam/common_capture/UncalibratedMonocularCamera/index", "autoapi/pyslam/common_capture/index", "autoapi/pyslam/demos/index", "autoapi/pyslam/demos/monocular_capture/index", "autoapi/pyslam/demos/monocular_features/index", "autoapi/pyslam/epipolar_models/Error/index", "autoapi/pyslam/epipolar_models/HomographyErrors/index", "autoapi/pyslam/epipolar_models/HomographyMatrix/index", "autoapi/pyslam/epipolar_models/index", "autoapi/pyslam/image_processing/cv_pillow/index", "autoapi/pyslam/image_processing/feature_descriptors/Descriptor/index", "autoapi/pyslam/image_processing/feature_descriptors/ImageFeatures/index", "autoapi/pyslam/image_processing/feature_descriptors/ImagePairFeatureMatches/index", "autoapi/pyslam/image_processing/feature_descriptors/Keypoint/index", "autoapi/pyslam/image_processing/feature_descriptors/descriptors/ORB/index", "autoapi/pyslam/image_processing/feature_descriptors/descriptors/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/DescriptorExtractor/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/KeypointExtractor/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/end2end/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/end2end/orb_detect_and_compute/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/index", "autoapi/pyslam/image_processing/feature_descriptors/index", "autoapi/pyslam/image_processing/index", "autoapi/pyslam/index", "autoapi/pyslam/odometry/index", "autoapi/pyslam/optim/index", "autoapi/pyslam/optim/procedures/HomogenousMatrixLeastSquares/index", "autoapi/pyslam/optim/procedures/index", "autoapi/pyslam/optim/ransac/RANSACDataset/index", "autoapi/pyslam/optim/ransac/RANSACEstimator/index", "autoapi/pyslam/optim/ransac/RANSACModel/index", "autoapi/pyslam/optim/ransac/index", "autoapi/pyslam/pubsub/index", "autoapi/pyslam/systems/index", "autoapi/pyslam/uid/index", "autoapi/pyslam/visualize/DrawFeatures/index", "autoapi/pyslam/visualize/PyGameFrameWindow/index", "autoapi/pyslam/visualize/index", "index"], "filenames": ["autoapi/index.rst", "autoapi/pyslam/capture/index.rst", "autoapi/pyslam/common_capture/UncalibratedMonocularCamera/index.rst", "autoapi/pyslam/common_capture/index.rst", "autoapi/pyslam/demos/index.rst", "autoapi/pyslam/demos/monocular_capture/index.rst", "autoapi/pyslam/demos/monocular_features/index.rst", "autoapi/pyslam/epipolar_models/Error/index.rst", "autoapi/pyslam/epipolar_models/HomographyErrors/index.rst", "autoapi/pyslam/epipolar_models/HomographyMatrix/index.rst", "autoapi/pyslam/epipolar_models/index.rst", "autoapi/pyslam/image_processing/cv_pillow/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/Descriptor/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/ImageFeatures/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/ImagePairFeatureMatches/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/Keypoint/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/descriptors/ORB/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/descriptors/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/DescriptorExtractor/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/KeypointExtractor/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/end2end/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/end2end/orb_detect_and_compute/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/index.rst", "autoapi/pyslam/image_processing/index.rst", "autoapi/pyslam/index.rst", "autoapi/pyslam/odometry/index.rst", "autoapi/pyslam/optim/index.rst", "autoapi/pyslam/optim/procedures/HomogenousMatrixLeastSquares/index.rst", "autoapi/pyslam/optim/procedures/index.rst", "autoapi/pyslam/optim/ransac/RANSACDataset/index.rst", "autoapi/pyslam/optim/ransac/RANSACEstimator/index.rst", "autoapi/pyslam/optim/ransac/RANSACModel/index.rst", "autoapi/pyslam/optim/ransac/index.rst", "autoapi/pyslam/pubsub/index.rst", "autoapi/pyslam/systems/index.rst", "autoapi/pyslam/uid/index.rst", "autoapi/pyslam/visualize/DrawFeatures/index.rst", "autoapi/pyslam/visualize/PyGameFrameWindow/index.rst", "autoapi/pyslam/visualize/index.rst", "index.rst"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.capture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.common_capture.UncalibratedMonocularCamera</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.common_capture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.demos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.demos.monocular_capture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.demos.monocular_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.epipolar_models.Error</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.epipolar_models.HomographyErrors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.epipolar_models.HomographyMatrix</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.epipolar_models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.cv_pillow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.Descriptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.ImageFeatures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.Keypoint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.descriptors.ORB</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.descriptors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors.end2end</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.odometry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.procedures.HomogenousMatrixLeastSquares</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.procedures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.ransac.RANSACDataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.ransac.RANSACEstimator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.ransac.RANSACModel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.ransac</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.pubsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.systems</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.uid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.visualize.DrawFeatures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.visualize.PyGameFrameWindow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.visualize</span></code>", "Welcome to PySLAM\u2019s documentation!"], "terms": {"index": [14, 30, 33, 40], "modul": [17, 22, 24, 33, 39, 40], "search": 40, "page": [0, 40], "The": [1, 2, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 30, 31, 32, 33, 34, 37, 38, 39], "core": 1, "my": [], "exampl": [1, 2, 26, 30, 33, 34], "project": [], "class": 22, "exampleclass": [], "name": 2, "an": [1, 2, 4, 7, 8, 11, 12, 13, 15, 16, 18, 19, 21, 26, 30, 31, 32, 33, 34, 37, 38], "docstr": [], "definit": [], "about_self": [], "return": [1, 2, 9, 11, 13, 15, 18, 19, 21, 26, 30, 31, 32, 33, 34, 37], "inform": [], "about": [], "instanc": [26, 31, 33, 34], "creat": [0, 31, 33], "from": [1, 2, 5, 6, 9, 13, 14, 17, 18, 19, 22, 24, 31, 33, 34, 38], "about_m": [], "your_nam": [], "most": [1, 2], "import": [], "thing": 12, "person": [], "param": 9, "A": [1, 2, 7, 8, 9, 12, 14, 15, 16, 26, 30, 31, 33, 34, 36, 38], "string": [], "thi": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 30, 32, 33, 34, 39], "contain": [0, 1, 3, 4, 5, 6, 12, 13, 14, 16, 23, 30, 32, 33, 39], "auto": 0, "gener": [0, 1, 7, 13, 18, 23, 30, 32, 33, 34], "document": 0, "1": [0, 2, 11, 33], "pyslam": 0, "captur": [0, 2, 3, 5, 6, 25, 34, 38], "capturegroup": [], "capturemanag": [], "rawsensor": [], "sensorwrapp": [], "image_process": [0, 2, 9, 25, 37], "stereo": [], "stereodescriptormatch": [], "imag": [2, 9, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 34, 37, 38], "imagefeatur": [0, 9, 14, 23, 24, 25, 37], "normalizedimagefeatur": [], "odometri": [0, 9, 25], "visual_odometri": [], "homographymatrix": [0, 10, 25], "motionhypothesissourc": [], "optim": [0, 9, 25], "procedur": [0, 18, 19, 25, 27], "homogenousmatrixleastsquar": [0, 25, 27, 29], "ransac": [0, 9, 25, 27], "ransacdataset": [0, 9, 25, 27, 31, 32, 33], "ransacmodel": [0, 9, 25, 27, 31, 33], "sensor": [1, 2, 34], "monocularuncalibratedcameracaptur": [], "uncalibratedfilecamerarawsensor": [], "system": [0, 25, 34], "main": [], "uid": [0, 1, 2, 25], "sphinx": 0, "autoapi": 0, "sensorwrapperuid": [], "none": [1, 2, 5, 6, 13, 14, 15, 21, 30, 32, 33, 34, 36, 38], "base": [1, 2, 7, 8, 9, 11, 12, 13, 16, 18, 19, 21, 22, 26, 30, 32, 33, 34], "abc": [1, 7, 8, 12, 18, 19, 26, 32, 33], "repres": [1, 2, 7, 8, 9, 14, 15, 16, 18, 19, 30, 32, 33, 36], "akin": [], "singl": 26, "measur": [1, 2, 3, 34], "other": [1, 12, 14, 16, 18], "kind": [1, 3, 7, 32, 33, 34], "i": [1, 2, 12, 13, 14, 15, 16, 18, 21, 26, 30, 31, 32, 33, 34], "abstract": [1, 12, 16, 18, 19, 26, 32, 33], "specif": 22, "type": [1, 12, 14, 17, 23, 26, 30, 31, 32, 33, 34], "being": [], "subclass": [1, 12, 18, 19, 34], "here": [], "can": [1, 2, 3, 7, 12, 13, 17, 18, 19, 22, 26, 32, 33, 34], "have": [9, 18, 21, 26, 32, 33], "extra": [], "properti": [1, 15, 36], "depth": [], "map": [], "listofcaptureuid": [], "group": [], "object": [1, 2, 14, 26, 30, 33, 34, 37], "togeth": 21, "just": [1, 18, 30, 33], "wrap": [1, 38], "around": [1, 38], "list": [13, 18, 19, 21, 30, 33], "stopev": [], "capturer": 1, "5": [30, 33], "respons": [13, 31, 33, 34], "manag": [1, 34], "all": [1, 2, 9, 12, 13, 21, 30, 31, 32, 33, 34, 37], "physic": 1, "camera": [1, 2, 5, 6, 9, 34], "attach": [], "e": [], "imagesensor": [], "ar": [1, 9, 12, 13, 15, 21, 22, 23, 30, 31, 32, 33, 34, 38], "regist": [], "also": [2, 34, 39], "central": [], "lookup": [], "we": [1, 2, 7, 9, 11, 12, 13, 15, 17, 18, 21, 23, 26, 30, 31, 32, 33, 34, 38], "extract": [6, 13, 17, 18, 19, 22, 24, 26], "matric": 26, "etc": [31, 33], "__captureloop": 38, "intern": [1, 2, 13, 14, 15, 18, 21, 31, 33, 34, 38], "loop": [1, 2, 38], "run": [1, 5, 6, 13, 14, 31, 33, 34, 38], "expect": [1, 2, 9, 18, 21, 30, 33, 38], "start": [1, 2, 34, 38], "new": [1, 30, 33, 34], "thread": [31, 33, 34, 38], "startcaptureloop": 1, "function": [1, 2, 9, 15, 21, 30, 31, 33], "exit": [], "when": [1, 2, 34], "stop": [1, 2, 38], "flag": [], "set": [1, 7, 13, 18, 30, 31, 33, 34], "separ": [18, 21, 33], "process": [1, 34], "wrapper": 1, "implement": [1, 7, 8, 9, 12, 16, 18, 19, 22, 33, 34], "raw": [], "deriv": [], "themselv": [], "activatesensor": [], "doe": [1, 31, 33, 34, 39], "ani": [1, 2, 26, 34, 39], "initi": [31, 33, 39], "tell": 33, "prepar": [1, 2], "call": [1, 2], "As": [32, 33], "might": [1, 2], "opencv": [1, 2, 14, 15, 21], "video": 38, "so": [12, 30, 33, 34], "happen": [], "fast": [], "teardownsensor": [], "opposit": [], "startcaptur": [], "cleanup": [1, 2], "need": [1, 2, 12, 14, 18, 32, 33, 39], "done": [2, 21], "record": 1, "go": [32, 33, 38], "standbi": [], "state": [1, 2], "In": [], "context": [], "could": [1, 13, 26, 31, 33], "mean": 15, "frame": [1, 2, 5, 6, 38], "put": [], "idl": [1, 2], "popul": [], "data": [9, 12, 16, 30, 31, 32, 33], "collect": 34, "str": [2, 36], "our": [3, 13, 30, 33], "deal": [], "get": [1, 2, 33, 34], "pipe": [], "inter": [1, 2, 33, 38], "commun": [], "relat": [1, 3, 7, 8, 9, 13, 14, 26, 39], "ha": [1, 15], "coupl": [], "high": [], "level": [], "support": [], "command": [], "should": [1, 2, 13, 15, 30, 33], "abl": [], "where": [33, 34], "time": [1, 2], "entir": 33, "decid": [], "differ": [12, 38], "allow": [1, 2, 26, 30, 31, 33, 34, 38], "more": 34, "accur": [], "take": [1, 2, 9, 13, 18, 19, 31, 32, 33], "seem": 34, "like": [23, 30, 33, 34], "pretti": 1, "fundament": 26, "do": [15, 18, 26, 34], "wai": [12, 13, 34], "2": [9, 11, 13, 14, 15, 26], "case": [18, 26], "one": [14, 18, 31, 33, 34], "isn": [], "t": [1, 13, 18, 30, 32, 33, 34], "shouldn": [], "inerfer": [], "instead": [], "grab": [], "copi": [1, 15], "recent": [1, 2], "To": [], "queue": 34, "post": [], "you": [2, 13], "want": [2, 30, 33, 34], "simpli": [1, 2, 21, 34], "wait": [1, 34], "aren": [], "current": 13, "pull": 1, "__startcaptur": [], "activ": [1, 2], "true": 34, "acquir": [], "lock": [], "configur": [31, 33], "readi": [], "__endcaptur": [], "fals": 34, "clear": [], "tear": [], "down": [], "execut": [], "extern": [], "its": [31, 32, 33, 34], "own": [], "multi": [], "getcaptur": [1, 2], "safe": [], "non": 34, "intrus": [], "latest": [1, 2], "It": 13, "problem": 33, "co": [], "oper": 34, "": [2, 12, 16, 21, 30, 33, 34], "make": [30, 33], "easi": [], "cvcolorconversioncod": [], "sourceimgmat": [], "cv2": [2, 11], "mat": [2, 11], "bwimgmat": [], "captureuid": [], "monocular": [2, 5, 6], "would": [1, 2, 26, 34], "while": [18, 33, 34], "than": [], "help": [], "homogen": [13, 15], "pipelin": 34, "ideal": [], "same": [11, 13, 18, 21], "against": [7, 13, 32, 33], "mono": [], "without": [15, 34], "too": [], "mani": [1, 33], "code": [1, 2, 31, 33, 34, 38], "tweak": [], "featuretyp": [], "enum": 11, "enumer": [], "defin": [11, 17, 22, 24, 26, 32, 33, 34], "orb": [0, 6, 17, 21, 23, 24], "inputimag": 13, "what": [2, 9, 32, 33, 34], "featur": [6, 9, 14, 18, 22, 23, 34, 37], "comput": [7, 8, 9, 12, 13, 14, 16, 18, 19, 21, 30, 33], "detect": [9, 34], "specifi": [30, 31, 32, 33], "store": [2, 13], "them": [1, 2, 6, 13, 21], "further": [], "__computeorbdescriptor": [], "descriptor": [0, 13, 14, 18, 21, 22, 23, 24, 25], "normal": 13, "keypoint": [0, 13, 18, 19, 21, 23, 24, 25, 37], "suitabl": [], "variat": [], "dlt": [], "eight": [], "point": [7, 13, 15], "algorithm": 18, "thei": [11, 33, 34], "zero": [30, 33], "averag": [], "distanc": [12, 16], "origin": [], "sqrt": [], "stereomatch": [], "simpl": [4, 15, 26, 34], "dataclass": [], "found": [14, 33], "match": [7, 9, 14], "between": [12, 14, 16, 26, 33], "img": [], "img2": [], "imgoneidx": 14, "int": [2, 9, 14, 21, 30, 31, 33], "imgtwoidx": 14, "stereodescriptorsmatch": [], "imgonefeatur": 9, "imgtwofeatur": 9, "determin": [2, 9, 14, 31, 32, 33], "which": [1, 13, 15, 22, 26, 30, 32, 33, 34], "indic": [1, 9, 14, 30, 31, 32, 33, 34], "first": [9, 13, 14, 30, 33, 34], "second": [1, 2, 9, 13, 14, 34], "us": [1, 2, 3, 9, 12, 13, 14, 16, 21, 24, 26, 30, 31, 32, 33, 34], "flann": 14, "low": [], "ratio": [], "test": 4, "computematch": 14, "sub": [26, 30, 31, 33, 34], "estim": [9, 26, 31, 32, 33], "motion": [], "visual": [0, 25, 26], "homographi": [8, 9, 26], "vio": 26, "imu": 26, "preintegr": 26, "gettransl": [], "translat": [], "vector": 15, "timestep": 26, "anoth": [12, 16, 30, 33], "scale": 15, "factor": [], "assum": [15, 30, 33], "known": 2, "parti": [], "agnost": [], "getrot": [], "3x3": 13, "rotat": [], "matrix": [2, 7, 8, 9, 13, 15, 26], "chang": [], "pose": 26, "sourc": [1, 3], "destin": [], "involv": [30, 33], "some": [1, 2, 7, 11, 23, 32, 33, 34], "convent": [30, 33], "how": [1, 33], "onli": [12, 34], "restrict": 34, "imgonenormalizedfeatur": [], "imgtwonormalizedfeatur": [], "inmat": [13, 28, 29], "numpi": [9, 11, 12, 13, 15, 16, 28, 29, 30, 31, 32, 33], "ndarrai": [9, 11, 12, 13, 15, 16, 28, 29, 30, 31, 32, 33], "dataset": [1, 7, 8, 9, 30, 31, 32, 33], "memori": [30, 33], "arrai": [9, 11, 12, 13, 15, 16, 30, 31, 32, 33], "pass": [2, 9, 30, 31, 33, 34], "assumpt": [18, 30, 33], "simplic": [30, 33], "__len__": [30, 33], "getrandomsubsampl": [30, 33], "numofpoint": [30, 33], "vanilla": [30, 33], "scheme": [18, 30, 33], "random": [30, 31, 33], "uniform": [30, 33], "sampl": [30, 31, 33], "self": [30, 33], "less": [30, 33], "datapoint": [1, 30, 31, 33], "alongsid": [], "model": [7, 9, 31, 32, 33, 34], "wish": [32, 33], "logic": [1, 2, 7, 8, 11, 14, 23, 33], "rid": 33, "lot": [24, 33], "boiler": 33, "plate": 33, "automat": 33, "parralel": [31, 33], "come": [33, 34], "after": [18, 32, 33], "observ": 33, "natur": 33, "iter": [31, 33, 34], "depend": 33, "much": 33, "possibl": [26, 33], "below": 33, "pseudocod": 33, "hopefulli": 33, "provid": [2, 13, 33], "insight": 33, "why": 33, "denot": 33, "empti": 33, "inlier": [9, 31, 32, 33], "u": [26, 30, 33, 34], "had": 33, "n": 33, "pick": 33, "whole": 33, "size": [18, 21, 33], "fit": [9, 31, 32, 33], "question": 33, "inlier_count": 33, "number": [1, 2, 15, 21, 30, 31, 32, 33, 34], "0": [11, 13, 33, 34], "For": [1, 2, 33, 34], "j": 33, "d": [31, 33], "error": [0, 8, 10, 25, 33], "jth": 33, "err": 33, "thresh": 33, "valu": 33, "discrimin": 33, "outlier": 33, "outlit": 33, "If": [2, 15, 33, 34], "increment": 33, "add": 33, "count": 33, "end": [18, 21, 33], "best": [31, 32, 33], "largest": 33, "option": [2, 31, 32, 33], "re": [11, 31, 32, 33], "datapoitn": 33, "uncalibratedmonocularfilecamerarawsensor": [], "camerafnam": [], "uncalibr": 2, "webcam": [], "laptop": [], "avail": 2, "file": [2, 5, 6, 39], "dev": 2, "video0": 2, "treat": 21, "calibr": [], "generateuid": 36, "api": [21, 40], "refer": [1, 23, 34, 40], "event": [], "sensorss": [], "perform": [1, 2], "paramet": [1, 2, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 30, 31, 32, 33, 34, 37, 38], "structur": [30, 33], "correspond": [9, 13, 14, 15, 21, 22, 26, 30, 33], "keep": [30, 32, 33], "track": [30, 32, 33], "especi": [30, 33], "onc": [26, 30, 33], "findinlierindic": [9, 32, 33], "given": [7, 8, 11, 13, 15, 18, 21, 30, 31, 32, 33, 34, 37], "root": [9, 30, 32, 33], "step": [21, 32, 33, 34], "qualiti": [32, 33], "highest": [32, 33], "well": [32, 33], "select": [18, 32, 33], "deem": [], "ransacestim": [0, 25, 27, 33], "getsubsampl": [30, 33], "whose": [9, 30, 33], "includ": [], "result": [11, 30, 33, 34], "numwork": [31, 33], "constructor": [9, 31, 33], "pool": [31, 33], "worker": [31, 33], "instanti": [31, 33], "processpoolexecutor": [31, 33], "static": [31, 33, 36], "__getmodelandinli": [31, 33], "fulldataset": [31, 33], "subset": [31, 33], "modelt": [], "tupl": [13, 31, 33], "helper": [11, 31, 33, 34], "predictd": [], "full": [31, 33, 34], "were": [31, 33], "ty": [], "async": [31, 33], "modeltyp": [], "datapointsperiter": [31, 33], "refit": [31, 33], "bool": [31, 33, 34], "each": [31, 33, 34], "whether": [31, 33, 34], "retun": [31, 33], "futur": [], "evalu": [], "predict": [31, 33], "capture_new": [], "everi": [], "framework": [1, 2, 3, 4], "work": [1, 11, 12, 23], "There": [], "stand": [], "move": [], "almost": [1, 2], "instantli": [1, 2], "concret": [], "boot": [], "alwai": 1, "begin": [], "immedi": [1, 2], "ransacmodelconfig": [], "config": 9, "ransac_cr": [], "ransamodel": [], "method": [12, 16, 18, 19], "must": [2, 12, 16, 18, 19, 34], "anyon": [], "who": [], "still": [], "give": [], "leewai": [], "your": [], "read": [2, 38], "reccomend": [], "pop": [1, 2], "off": [1, 2], "request": [30, 33], "remot": [], "makeact": [1, 2], "capturefrequ": [1, 2], "ask": [1, 2], "setup": [1, 2], "frequenc": [1, 2], "save": [1, 2, 21], "buffer": [1, 2], "complet": [1, 2, 34], "capture_old": [], "uniqu": [1, 36], "identifi": [1, 36], "open": [], "remark": [], "learn": [], "leaveact": [1, 2], "out": [1, 2, 3], "turn": [1, 2], "timestamp": [1, 2], "datetim": [1, 2], "sensoruid": [], "wa": 1, "taken": 1, "timezon": 1, "utc": 1, "handl": [], "synchron": [], "requir": [18, 31, 33], "enabl": [], "effect": [], "both": [14, 18, 34], "insid": [], "guarante": 21, "sensit": [], "sure": [], "yourself": [], "boilerpl": [], "those": [], "downstream": 34, "through": [], "sensor_wait_tim": [], "asynchron": [], "asynciter": [], "yield": [1, 2], "underli": 1, "await": [], "rate": 1, "captureloop": [], "asyncio": [], "task": 34, "aliv": [], "cancel": [], "easili": [34, 38], "send": [], "enclos": [], "unit": 1, "per": [1, 2], "color": [2, 11], "convers": [2, 15], "input": [11, 13], "output": 2, "correct": [2, 26], "black": [], "white": [], "cv": 2, "color_bgr2grai": [], "obvious": [], "vari": 12, "sourcemat": [], "came": 1, "directli": [], "vision": [], "routin": [], "bw": [], "ignor": [], "encod": [], "measurementuid": [], "util": [3, 13, 22, 24, 34, 39], "pattern": 34, "show": [], "up": [], "commonli": [], "slam": [1, 34], "sens": [], "suppos": [], "pair": 14, "hypothes": [], "keyfram": [], "graph": [], "note": [], "IN": [], "3": [1, 15], "reason": [], "abov": [], "seri": 34, "publish": [1, 34, 38], "subscrib": 34, "design": 34, "upon": [], "notifi": [], "handler": [], "basic": 14, "construct": 34, "quit": 15, "act": 34, "callabl": [31, 33], "messag": 34, "sent": [], "anyth": [], "over": 34, "listen": [1, 34, 38], "until": 1, "finish": [], "interfac": [1, 34], "long": [], "spawn": [], "pubsub": [0, 1, 25, 38], "getmeasur": [1, 2], "__internalcaptureloop": 1, "float": [1, 2, 12, 16, 34], "propog": 1, "appropri": 1, "amount": 1, "next": 1, "build": [13, 34], "pub": 34, "common": [3, 13, 34], "sinc": [9, 21, 34], "usual": 34, "subsequ": 34, "previou": 34, "cleanli": 34, "realli": [18, 34], "chose": 34, "messagequeu": [34, 38], "receiv": 34, "block": [1, 34], "timeout": 34, "indefini": 34, "limit": 34, "max": 34, "befor": 34, "noth": [2, 34], "otherwis": 34, "maintain": 34, "weak": 34, "refernc": 34, "soon": 34, "lose": 34, "last": 34, "strong": 34, "garbag": 34, "haven": 34, "yet": 34, "been": 34, "posetransformsourc": [9, 26], "transform": 26, "gettransform": 26, "pose3d": 26, "variou": 17, "lidar": [], "cloud": [], "rel": 26, "relev": [], "sai": [], "concern": [], "robot": [], "posit": [], "orient": [], "w": [], "r": [], "coordin": [13, 15, 18], "interest": 23, "3d": 15, "csae": [], "2d": [13, 15], "By": [23, 30, 33], "item": [30, 33], "slice": [30, 33], "4": [30, 33], "5th": [30, 33], "element": [13, 30, 33], "paramat": [9, 13, 30, 31, 33], "idx": [30, 33], "These": [30, 33], "modelconstructor": [31, 33], "tha": [31, 33], "try": [21, 31, 33], "client": [1, 31, 33, 34, 38], "partial": [31, 33], "ranascmodel": [31, 33], "monocular_uncalibrated_camera": [], "monocularuncalibratedcamerameasur": 2, "monocularuncalibratedfilecamera": 2, "associ": [], "built": [], "custom": [], "fname": 2, "opencvcolorcod": 2, "cvtcolor": 2, "measurementsourc": [1, 2], "demo": [0, 25], "monocular_captur": [0, 4, 25], "ro": 1, "topic": 1, "pre": 1, "whatev": 1, "referenc": 1, "apart": [1, 9], "lightweight": 1, "special": 1, "intend": 1, "rest": 1, "alreadi": [2, 9], "submodul": [], "arrang": 4, "part": [4, 34], "sourceuid": [1, 2], "global_lookup": 1, "weakref": 1, "weakvaluedictionari": 1, "pygameupdat": [], "msgqueue": 38, "pygam": [5, 6, 38], "window": 38, "blit": [], "onto": 37, "made": [], "updat": [], "__init__": [34, 39], "expectd": 34, "proxi": 34, "multiprocess": 34, "pickl": 34, "neg": 34, "indefinit": 34, "accross": [14, 34], "feature_descriptor": [0, 9, 24, 25, 37], "extractor": [0, 13, 23, 24, 25], "descriptorextractionschem": [], "descriptorarr": [12, 16], "beyond": 12, "identif": 12, "calcul": 12, "child": 12, "computedist": [12, 16], "coord": 15, "heterogen": [13, 15], "fro": [11, 15], "either": 15, "shape": 15, "getter": 15, "convert": [2, 11, 15], "makeheterogen": 15, "represent": 15, "storag": [2, 15], "makehomogen": 15, "asheterogen": 15, "dimens": 15, "ashomogen": 15, "seemingli": 18, "impli": 18, "exist": 18, "corner": 23, "region": 23, "form": 23, "patch": 23, "primit": 24, "keypointextractionschem": [], "ham": 16, "getdescriptor": [18, 21], "inimg": [11, 18, 19, 21], "inkeypoint": [18, 21], "nth": [18, 21], "describ": [18, 21], "getkeypoint": [19, 21], "descriptorextractor": [0, 13, 21, 22, 23, 24], "keypointextractor": [0, 13, 21, 22, 23, 24], "cv_pillow": [0, 2, 24, 25], "pygameframewindow": [0, 25, 39], "orb_detect_and_comput": [0, 20, 22, 23], "numpoint": 21, "detectandcomput": 21, "find": [9, 21], "No": 21, "actual": 21, "howev": 21, "__comput": 21, "background": 1, "stopcaptureloop": 1, "pil": [2, 11, 13, 18, 19, 21, 37, 38], "pillow": [2, 11, 37], "pillowtargetcolor": 2, "pillowcolorformat": [2, 11], "afterward": 2, "format": [2, 11, 13], "default": 2, "target": 2, "l": [2, 11], "grayscal": [2, 11], "rgb": [2, 11], "arraytopillowimag": 11, "inarr": 11, "colorformat": 11, "under": 11, "hood": 11, "desir": 11, "pillowtoarrai": 11, "respect": 13, "previous": 13, "individu": 38, "startlistenloop": 38, "stoplistenloop": 38, "bookkeep": 39, "compon": 39, "end2end": [0, 22, 23, 24], "monocular_featur": [0, 4, 25], "drawfeatur": [0, 25, 39], "draw": 37, "drawn": 37, "imagepairfeaturematch": [0, 9, 23, 24, 25], "normalizekeypointmatrix": 13, "jax": 13, "appli": 13, "x": 13, "y": 13, "jnp": 13, "kepoint": 13, "did": 13, "invert": 13, "un": 13, "buildnormalizedkeypoint": 13, "normalizad": 13, "One": [14, 34], "two": 14, "imagepairmatch": 14, "imagefeatureson": 14, "imagefeaturestwo": 14, "across": 14, "cost": 9, "epipolar_model": [0, 25], "homographyerror": [0, 10, 25], "epipolar": 7, "common_captur": [0, 25], "uncalibratedmonocularcamera": [0, 3, 25], "box": 3, "machin": 5, "displai": [5, 6], "mainli": 26, "four": 26, "solut": 26, "piec": 34, "standard": 34, "reactor": 34, "respond": 34, "incom": 34, "someth": 34, "intermedi": 34, "portion": 34, "v": 34, "Then": 34}, "objects": {"": [[25, 0, 0, "-", "pyslam"]], "pyslam": [[1, 0, 0, "-", "capture"], [3, 0, 0, "-", "common_capture"], [4, 0, 0, "-", "demos"], [10, 0, 0, "-", "epipolar_models"], [24, 0, 0, "-", "image_processing"], [26, 0, 0, "-", "odometry"], [27, 0, 0, "-", "optim"], [34, 0, 0, "-", "pubsub"], [35, 0, 0, "-", "systems"], [36, 0, 0, "-", "uid"], [39, 0, 0, "-", "visualize"]], "pyslam.capture": [[1, 1, 1, "", "GLOBAL_LOOKUP"], [1, 2, 1, "", "Measurement"], [1, 2, 1, "", "MeasurementSource"], [1, 2, 1, "", "Sensor"], [1, 1, 1, "", "T"]], "pyslam.capture.Measurement": [[1, 3, 1, "", "sourceUID"], [1, 3, 1, "", "timestamp"], [1, 3, 1, "", "uid"]], "pyslam.capture.Sensor": [[1, 4, 1, "", "__internalCaptureLoop"], [1, 4, 1, "", "getMeasurement"], [1, 4, 1, "", "leaveActive"], [1, 4, 1, "", "makeActive"], [1, 4, 1, "", "startCaptureLoop"], [1, 4, 1, "", "stopCaptureLoop"]], "pyslam.common_capture": [[2, 0, 0, "-", "UncalibratedMonocularCamera"]], "pyslam.common_capture.UncalibratedMonocularCamera": [[2, 2, 1, "", "MonocularUncalibratedCameraMeasurement"], [2, 2, 1, "", "MonocularUncalibratedFileCamera"]], "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera": [[2, 4, 1, "", "getMeasurement"], [2, 4, 1, "", "leaveActive"], [2, 4, 1, "", "makeActive"]], "pyslam.demos": [[5, 0, 0, "-", "monocular_capture"], [6, 0, 0, "-", "monocular_features"]], "pyslam.demos.monocular_capture": [[5, 5, 1, "", "run"]], "pyslam.demos.monocular_features": [[6, 5, 1, "", "run"]], "pyslam.epipolar_models": [[7, 0, 0, "-", "Error"], [8, 0, 0, "-", "HomographyErrors"], [9, 0, 0, "-", "HomographyMatrix"]], "pyslam.epipolar_models.Error": [[7, 2, 1, "", "Error"]], "pyslam.epipolar_models.HomographyErrors": [[8, 2, 1, "", "HomographyError"]], "pyslam.epipolar_models.HomographyMatrix": [[9, 2, 1, "", "HomographyMatrix"]], "pyslam.epipolar_models.HomographyMatrix.HomographyMatrix": [[9, 4, 1, "", "findInlierIndices"], [9, 4, 1, "", "fit"]], "pyslam.image_processing": [[11, 0, 0, "-", "cv_pillow"], [23, 0, 0, "-", "feature_descriptors"]], "pyslam.image_processing.cv_pillow": [[11, 2, 1, "", "PillowColorFormat"], [11, 5, 1, "", "arrayToPillowImage"], [11, 5, 1, "", "pillowToArray"]], "pyslam.image_processing.cv_pillow.PillowColorFormat": [[11, 6, 1, "", "L"], [11, 6, 1, "", "RGB"]], "pyslam.image_processing.feature_descriptors": [[12, 0, 0, "-", "Descriptor"], [13, 0, 0, "-", "ImageFeatures"], [14, 0, 0, "-", "ImagePairFeatureMatches"], [15, 0, 0, "-", "Keypoint"], [17, 0, 0, "-", "descriptors"], [22, 0, 0, "-", "extractors"]], "pyslam.image_processing.feature_descriptors.Descriptor": [[12, 2, 1, "", "Descriptor"]], "pyslam.image_processing.feature_descriptors.Descriptor.Descriptor": [[12, 4, 1, "", "computeDistance"]], "pyslam.image_processing.feature_descriptors.ImageFeatures": [[13, 2, 1, "", "ImageFeatures"], [13, 1, 1, "", "T"], [13, 5, 1, "", "normalizeKeypointMatrix"]], "pyslam.image_processing.feature_descriptors.ImageFeatures.ImageFeatures": [[13, 4, 1, "", "buildNormalizedKeypoints"]], "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches": [[14, 2, 1, "", "ImagePairMatches"], [14, 2, 1, "", "Match"]], "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches.ImagePairMatches": [[14, 4, 1, "", "computeMatches"]], "pyslam.image_processing.feature_descriptors.Keypoint": [[15, 2, 1, "", "Keypoint"]], "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint": [[15, 4, 1, "", "asHeterogenous"], [15, 4, 1, "", "asHomogenous"], [15, 3, 1, "", "coords"], [15, 4, 1, "", "makeHeterogenous"], [15, 4, 1, "", "makeHomogenous"]], "pyslam.image_processing.feature_descriptors.descriptors": [[16, 0, 0, "-", "ORB"]], "pyslam.image_processing.feature_descriptors.descriptors.ORB": [[16, 2, 1, "", "ORB"]], "pyslam.image_processing.feature_descriptors.descriptors.ORB.ORB": [[16, 4, 1, "", "computeDistance"]], "pyslam.image_processing.feature_descriptors.extractors": [[18, 0, 0, "-", "DescriptorExtractor"], [19, 0, 0, "-", "KeypointExtractor"], [20, 0, 0, "-", "end2end"]], "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor": [[18, 2, 1, "", "DescriptorExtractor"], [18, 1, 1, "", "T"]], "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor.DescriptorExtractor": [[18, 4, 1, "", "getDescriptors"]], "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor": [[19, 2, 1, "", "KeypointExtractor"]], "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor.KeypointExtractor": [[19, 4, 1, "", "getKeypoints"]], "pyslam.image_processing.feature_descriptors.extractors.end2end": [[21, 0, 0, "-", "orb_detect_and_compute"]], "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute": [[21, 2, 1, "", "ORB_Detect_And_Compute"]], "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute": [[21, 4, 1, "", "__compute"], [21, 4, 1, "", "getDescriptors"], [21, 4, 1, "", "getKeypoints"]], "pyslam.odometry": [[26, 2, 1, "", "PoseTransformSource"]], "pyslam.odometry.PoseTransformSource": [[26, 4, 1, "", "getTransform"]], "pyslam.optim": [[29, 0, 0, "-", "procedures"], [33, 0, 0, "-", "ransac"]], "pyslam.optim.procedures": [[28, 0, 0, "-", "HomogenousMatrixLeastSquares"], [29, 5, 1, "", "homogenousMatrixLeastSquares"]], "pyslam.optim.procedures.HomogenousMatrixLeastSquares": [[28, 5, 1, "", "homogenousMatrixLeastSquares"]], "pyslam.optim.ransac": [[33, 2, 1, "", "RANSACDataset"], [30, 0, 0, "-", "RANSACDataset"], [33, 2, 1, "", "RANSACEstimator"], [31, 0, 0, "-", "RANSACEstimator"], [33, 2, 1, "", "RANSACModel"], [32, 0, 0, "-", "RANSACModel"]], "pyslam.optim.ransac.RANSACDataset": [[30, 2, 1, "", "RANSACDataset"], [30, 1, 1, "", "T"], [33, 4, 1, "", "__len__"], [33, 4, 1, "", "getRandomSubsample"], [33, 4, 1, "", "getSubsample"]], "pyslam.optim.ransac.RANSACDataset.RANSACDataset": [[30, 4, 1, "", "__len__"], [30, 4, 1, "", "getRandomSubsample"], [30, 4, 1, "", "getSubsample"]], "pyslam.optim.ransac.RANSACEstimator": [[31, 1, 1, "", "D"], [31, 2, 1, "", "RANSACEstimator"], [33, 4, 1, "", "__getModelAndInliers"], [33, 4, 1, "", "fit"]], "pyslam.optim.ransac.RANSACEstimator.RANSACEstimator": [[31, 4, 1, "", "__getModelAndInliers"], [31, 4, 1, "", "fit"]], "pyslam.optim.ransac.RANSACModel": [[32, 2, 1, "", "RANSACModel"], [32, 1, 1, "", "T"], [33, 4, 1, "", "findInlierIndices"], [33, 4, 1, "", "fit"]], "pyslam.optim.ransac.RANSACModel.RANSACModel": [[32, 4, 1, "", "findInlierIndices"], [32, 4, 1, "", "fit"]], "pyslam.pubsub": [[34, 2, 1, "", "MessageQueue"], [34, 2, 1, "", "Publisher"], [34, 1, 1, "", "T"]], "pyslam.pubsub.MessageQueue": [[34, 4, 1, "", "listen"], [34, 4, 1, "", "publish"]], "pyslam.pubsub.Publisher": [[34, 4, 1, "", "publish"], [34, 4, 1, "", "subscribe"]], "pyslam.uid": [[36, 2, 1, "", "UID"]], "pyslam.uid.UID": [[36, 4, 1, "", "generateUID"], [36, 3, 1, "", "uid"]], "pyslam.visualize": [[37, 0, 0, "-", "DrawFeatures"], [38, 0, 0, "-", "PyGameFrameWindow"]], "pyslam.visualize.DrawFeatures": [[37, 5, 1, "", "drawFeatures"]], "pyslam.visualize.PyGameFrameWindow": [[38, 2, 1, "", "PyGameFrameWindow"]], "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow": [[38, 4, 1, "", "__captureLoop"], [38, 4, 1, "", "startListenLoop"], [38, 4, 1, "", "stopListenLoop"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 40, "pyslam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "": 40, "document": 40, "indic": 40, "tabl": 40, "ur": [], "mom": [], "main": [], "py": [], "api": 0, "refer": 0, "captur": 1, "modul": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 30, 31, 32, 34, 36, 37, 38], "content": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40], "class": [1, 2, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 30, 31, 32, 33, 34, 36, 38], "capturegroup": [], "capturemanag": [], "rawsensor": [], "sensorwrapp": [], "submodul": [3, 4, 10, 17, 20, 22, 23, 24, 25, 29, 33, 39], "packag": [29, 33], "image_process": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "imag": [], "imagefeatur": 13, "normalizedimagefeatur": [], "subpackag": [22, 23, 24, 25, 27], "stereo": [], "stereodescriptormatch": [], "function": [5, 6, 11, 13, 28, 29, 37], "odometri": 26, "motionhypothesissourc": [], "visual_odometri": [], "homographymatrix": 9, "optim": [27, 28, 29, 30, 31, 32, 33], "procedur": [28, 29], "homogenousmatrixleastsquar": 28, "ransac": [30, 31, 32, 33], "ransacdataset": 30, "attribut": [1, 13, 18, 30, 31, 32, 34], "ransacmodel": 32, "sensor": [], "monocularuncalibratedcameracaptur": [], "uncalibratedfilecamerarawsensor": [], "system": 35, "uid": 36, "ransacestim": 31, "capture_new": [], "capture_old": [], "measur": [], "observ": [], "publish": [], "pubsub": 34, "messagequeu": [], "posetransformsourc": [], "common": [], "monocular_uncalibrated_camera": [], "monocularuncalibratedcamerameasur": [], "monocularuncalibratedfilecamera": [], "measurementsourc": [], "demo": [4, 5, 6], "monocular_captur": 5, "feature_descriptor": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "descriptor": [12, 16, 17], "keypoint": 15, "extractor": [18, 19, 20, 21, 22], "descriptorextractionschem": [], "orb": 16, "keypointextractionschem": [], "orb_detect_and_comput": 21, "cv_pillow": 11, "descriptorextractor": 18, "keypointextractor": 19, "visual": [37, 38, 39], "pygameframewindow": 38, "end2end": [20, 21], "monocular_featur": 6, "drawfeatur": 37, "imagepairfeaturematch": 14, "epipolar_model": [7, 8, 9, 10], "error": 7, "homographyerror": 8, "common_captur": [2, 3], "uncalibratedmonocularcamera": 2}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to PySLAM\u2019s documentation!": [[40, "welcome-to-pyslam-s-documentation"]], "Contents:": [[40, null]], "Indices and tables": [[40, "indices-and-tables"]], "API Reference": [[0, "api-reference"]], "pyslam.capture": [[1, "module-pyslam.capture"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [18, "module-contents"], [19, "module-contents"], [21, "module-contents"], [26, "module-contents"], [28, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [34, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"]], "Classes": [[1, "classes"], [2, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [18, "classes"], [19, "classes"], [21, "classes"], [26, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [36, "classes"], [38, "classes"]], "Attributes": [[1, "attributes"], [13, "attributes"], [18, "attributes"], [30, "attributes"], [31, "attributes"], [32, "attributes"], [34, "attributes"]], "pyslam.common_capture.UncalibratedMonocularCamera": [[2, "module-pyslam.common_capture.UncalibratedMonocularCamera"]], "pyslam.common_capture": [[3, "module-pyslam.common_capture"]], "Submodules": [[3, "submodules"], [4, "submodules"], [10, "submodules"], [17, "submodules"], [20, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [29, "submodules"], [33, "submodules"], [39, "submodules"]], "pyslam.demos": [[4, "module-pyslam.demos"]], "pyslam.demos.monocular_capture": [[5, "module-pyslam.demos.monocular_capture"]], "Functions": [[5, "functions"], [6, "functions"], [11, "functions"], [13, "functions"], [28, "functions"], [29, "functions"], [37, "functions"]], "pyslam.demos.monocular_features": [[6, "module-pyslam.demos.monocular_features"]], "pyslam.epipolar_models.Error": [[7, "module-pyslam.epipolar_models.Error"]], "pyslam.epipolar_models.HomographyErrors": [[8, "module-pyslam.epipolar_models.HomographyErrors"]], "pyslam.epipolar_models.HomographyMatrix": [[9, "module-pyslam.epipolar_models.HomographyMatrix"]], "pyslam.epipolar_models": [[10, "module-pyslam.epipolar_models"]], "pyslam.image_processing.cv_pillow": [[11, "module-pyslam.image_processing.cv_pillow"]], "pyslam.image_processing.feature_descriptors.Descriptor": [[12, "module-pyslam.image_processing.feature_descriptors.Descriptor"]], "pyslam.image_processing.feature_descriptors.ImageFeatures": [[13, "module-pyslam.image_processing.feature_descriptors.ImageFeatures"]], "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches": [[14, "module-pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches"]], "pyslam.image_processing.feature_descriptors.Keypoint": [[15, "module-pyslam.image_processing.feature_descriptors.Keypoint"]], "pyslam.image_processing.feature_descriptors.descriptors.ORB": [[16, "module-pyslam.image_processing.feature_descriptors.descriptors.ORB"]], "pyslam.image_processing.feature_descriptors.descriptors": [[17, "module-pyslam.image_processing.feature_descriptors.descriptors"]], "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor": [[18, "module-pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor"]], "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor": [[19, "module-pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor"]], "pyslam.image_processing.feature_descriptors.extractors.end2end": [[20, "module-pyslam.image_processing.feature_descriptors.extractors.end2end"]], "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute": [[21, "module-pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute"]], "pyslam.image_processing.feature_descriptors.extractors": [[22, "module-pyslam.image_processing.feature_descriptors.extractors"]], "Subpackages": [[22, "subpackages"], [23, "subpackages"], [24, "subpackages"], [25, "subpackages"], [27, "subpackages"]], "pyslam.image_processing.feature_descriptors": [[23, "module-pyslam.image_processing.feature_descriptors"]], "pyslam.image_processing": [[24, "module-pyslam.image_processing"]], "pyslam": [[25, "module-pyslam"]], "pyslam.odometry": [[26, "module-pyslam.odometry"]], "pyslam.optim": [[27, "module-pyslam.optim"]], "pyslam.optim.procedures.HomogenousMatrixLeastSquares": [[28, "module-pyslam.optim.procedures.HomogenousMatrixLeastSquares"]], "pyslam.optim.procedures": [[29, "module-pyslam.optim.procedures"]], "Package Contents": [[29, "package-contents"], [33, "package-contents"]], "pyslam.optim.ransac.RANSACDataset": [[30, "module-pyslam.optim.ransac.RANSACDataset"]], "pyslam.optim.ransac.RANSACEstimator": [[31, "module-pyslam.optim.ransac.RANSACEstimator"]], "pyslam.optim.ransac.RANSACModel": [[32, "module-pyslam.optim.ransac.RANSACModel"]], "pyslam.optim.ransac": [[33, "module-pyslam.optim.ransac"]], "pyslam.pubsub": [[34, "module-pyslam.pubsub"]], "pyslam.systems": [[35, "module-pyslam.systems"]], "pyslam.uid": [[36, "module-pyslam.uid"]], "pyslam.visualize.DrawFeatures": [[37, "module-pyslam.visualize.DrawFeatures"]], "pyslam.visualize.PyGameFrameWindow": [[38, "module-pyslam.visualize.PyGameFrameWindow"]], "pyslam.visualize": [[39, "module-pyslam.visualize"]]}, "indexentries": {"global_lookup (in module pyslam.capture)": [[1, "pyslam.capture.GLOBAL_LOOKUP"]], "measurement (class in pyslam.capture)": [[1, "pyslam.capture.Measurement"]], "measurementsource (class in pyslam.capture)": [[1, "pyslam.capture.MeasurementSource"]], "sensor (class in pyslam.capture)": [[1, "pyslam.capture.Sensor"]], "t (in module pyslam.capture)": [[1, "pyslam.capture.T"]], "__internalcaptureloop() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.__internalCaptureLoop"]], "getmeasurement() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.getMeasurement"]], "leaveactive() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.leaveActive"]], "makeactive() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.makeActive"]], "module": [[1, "module-pyslam.capture"], [2, "module-pyslam.common_capture.UncalibratedMonocularCamera"], [3, "module-pyslam.common_capture"], [4, "module-pyslam.demos"], [5, "module-pyslam.demos.monocular_capture"], [6, "module-pyslam.demos.monocular_features"], [7, "module-pyslam.epipolar_models.Error"], [8, "module-pyslam.epipolar_models.HomographyErrors"], [9, "module-pyslam.epipolar_models.HomographyMatrix"], [10, "module-pyslam.epipolar_models"], [11, "module-pyslam.image_processing.cv_pillow"], [12, "module-pyslam.image_processing.feature_descriptors.Descriptor"], [13, "module-pyslam.image_processing.feature_descriptors.ImageFeatures"], [14, "module-pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches"], [15, "module-pyslam.image_processing.feature_descriptors.Keypoint"], [16, "module-pyslam.image_processing.feature_descriptors.descriptors.ORB"], [17, "module-pyslam.image_processing.feature_descriptors.descriptors"], [18, "module-pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor"], [19, "module-pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor"], [20, "module-pyslam.image_processing.feature_descriptors.extractors.end2end"], [21, "module-pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute"], [22, "module-pyslam.image_processing.feature_descriptors.extractors"], [23, "module-pyslam.image_processing.feature_descriptors"], [24, "module-pyslam.image_processing"], [25, "module-pyslam"], [26, "module-pyslam.odometry"], [27, "module-pyslam.optim"], [28, "module-pyslam.optim.procedures.HomogenousMatrixLeastSquares"], [29, "module-pyslam.optim.procedures"], [30, "module-pyslam.optim.ransac.RANSACDataset"], [31, "module-pyslam.optim.ransac.RANSACEstimator"], [32, "module-pyslam.optim.ransac.RANSACModel"], [33, "module-pyslam.optim.ransac"], [34, "module-pyslam.pubsub"], [35, "module-pyslam.systems"], [36, "module-pyslam.uid"], [37, "module-pyslam.visualize.DrawFeatures"], [38, "module-pyslam.visualize.PyGameFrameWindow"], [39, "module-pyslam.visualize"]], "pyslam.capture": [[1, "module-pyslam.capture"]], "sourceuid (pyslam.capture.measurement property)": [[1, "pyslam.capture.Measurement.sourceUID"]], "startcaptureloop() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.startCaptureLoop"]], "stopcaptureloop() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.stopCaptureLoop"]], "timestamp (pyslam.capture.measurement property)": [[1, "pyslam.capture.Measurement.timestamp"]], "uid (pyslam.capture.measurement property)": [[1, "pyslam.capture.Measurement.uid"]], "monocularuncalibratedcamerameasurement (class in pyslam.common_capture.uncalibratedmonocularcamera)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedCameraMeasurement"]], "monocularuncalibratedfilecamera (class in pyslam.common_capture.uncalibratedmonocularcamera)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera"]], "getmeasurement() (pyslam.common_capture.uncalibratedmonocularcamera.monocularuncalibratedfilecamera method)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera.getMeasurement"]], "leaveactive() (pyslam.common_capture.uncalibratedmonocularcamera.monocularuncalibratedfilecamera method)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera.leaveActive"]], "makeactive() (pyslam.common_capture.uncalibratedmonocularcamera.monocularuncalibratedfilecamera method)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera.makeActive"]], "pyslam.common_capture.uncalibratedmonocularcamera": [[2, "module-pyslam.common_capture.UncalibratedMonocularCamera"]], "pyslam.common_capture": [[3, "module-pyslam.common_capture"]], "pyslam.demos": [[4, "module-pyslam.demos"]], "pyslam.demos.monocular_capture": [[5, "module-pyslam.demos.monocular_capture"]], "run() (in module pyslam.demos.monocular_capture)": [[5, "pyslam.demos.monocular_capture.run"]], "pyslam.demos.monocular_features": [[6, "module-pyslam.demos.monocular_features"]], "run() (in module pyslam.demos.monocular_features)": [[6, "pyslam.demos.monocular_features.run"]], "error (class in pyslam.epipolar_models.error)": [[7, "pyslam.epipolar_models.Error.Error"]], "pyslam.epipolar_models.error": [[7, "module-pyslam.epipolar_models.Error"]], "homographyerror (class in pyslam.epipolar_models.homographyerrors)": [[8, "pyslam.epipolar_models.HomographyErrors.HomographyError"]], "pyslam.epipolar_models.homographyerrors": [[8, "module-pyslam.epipolar_models.HomographyErrors"]], "homographymatrix (class in pyslam.epipolar_models.homographymatrix)": [[9, "pyslam.epipolar_models.HomographyMatrix.HomographyMatrix"]], "findinlierindices() (pyslam.epipolar_models.homographymatrix.homographymatrix method)": [[9, "pyslam.epipolar_models.HomographyMatrix.HomographyMatrix.findInlierIndices"]], "fit() (pyslam.epipolar_models.homographymatrix.homographymatrix method)": [[9, "pyslam.epipolar_models.HomographyMatrix.HomographyMatrix.fit"]], "pyslam.epipolar_models.homographymatrix": [[9, "module-pyslam.epipolar_models.HomographyMatrix"]], "pyslam.epipolar_models": [[10, "module-pyslam.epipolar_models"]], "l (pyslam.image_processing.cv_pillow.pillowcolorformat attribute)": [[11, "pyslam.image_processing.cv_pillow.PillowColorFormat.L"]], "pillowcolorformat (class in pyslam.image_processing.cv_pillow)": [[11, "pyslam.image_processing.cv_pillow.PillowColorFormat"]], "rgb (pyslam.image_processing.cv_pillow.pillowcolorformat attribute)": [[11, "pyslam.image_processing.cv_pillow.PillowColorFormat.RGB"]], "arraytopillowimage() (in module pyslam.image_processing.cv_pillow)": [[11, "pyslam.image_processing.cv_pillow.arrayToPillowImage"]], "pillowtoarray() (in module pyslam.image_processing.cv_pillow)": [[11, "pyslam.image_processing.cv_pillow.pillowToArray"]], "pyslam.image_processing.cv_pillow": [[11, "module-pyslam.image_processing.cv_pillow"]], "descriptor (class in pyslam.image_processing.feature_descriptors.descriptor)": [[12, "pyslam.image_processing.feature_descriptors.Descriptor.Descriptor"]], "computedistance() (pyslam.image_processing.feature_descriptors.descriptor.descriptor method)": [[12, "pyslam.image_processing.feature_descriptors.Descriptor.Descriptor.computeDistance"]], "pyslam.image_processing.feature_descriptors.descriptor": [[12, "module-pyslam.image_processing.feature_descriptors.Descriptor"]], "imagefeatures (class in pyslam.image_processing.feature_descriptors.imagefeatures)": [[13, "pyslam.image_processing.feature_descriptors.ImageFeatures.ImageFeatures"]], "t (in module pyslam.image_processing.feature_descriptors.imagefeatures)": [[13, "pyslam.image_processing.feature_descriptors.ImageFeatures.T"]], "buildnormalizedkeypoints() (pyslam.image_processing.feature_descriptors.imagefeatures.imagefeatures method)": [[13, "pyslam.image_processing.feature_descriptors.ImageFeatures.ImageFeatures.buildNormalizedKeypoints"]], "normalizekeypointmatrix() (in module pyslam.image_processing.feature_descriptors.imagefeatures)": [[13, "pyslam.image_processing.feature_descriptors.ImageFeatures.normalizeKeypointMatrix"]], "pyslam.image_processing.feature_descriptors.imagefeatures": [[13, "module-pyslam.image_processing.feature_descriptors.ImageFeatures"]], "imagepairmatches (class in pyslam.image_processing.feature_descriptors.imagepairfeaturematches)": [[14, "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches.ImagePairMatches"]], "match (class in pyslam.image_processing.feature_descriptors.imagepairfeaturematches)": [[14, "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches.Match"]], "computematches() (pyslam.image_processing.feature_descriptors.imagepairfeaturematches.imagepairmatches method)": [[14, "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches.ImagePairMatches.computeMatches"]], "pyslam.image_processing.feature_descriptors.imagepairfeaturematches": [[14, "module-pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches"]], "keypoint (class in pyslam.image_processing.feature_descriptors.keypoint)": [[15, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint"]], "asheterogenous() (pyslam.image_processing.feature_descriptors.keypoint.keypoint method)": [[15, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.asHeterogenous"]], "ashomogenous() (pyslam.image_processing.feature_descriptors.keypoint.keypoint method)": [[15, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.asHomogenous"]], "coords (pyslam.image_processing.feature_descriptors.keypoint.keypoint property)": [[15, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.coords"]], "makeheterogenous() (pyslam.image_processing.feature_descriptors.keypoint.keypoint method)": [[15, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.makeHeterogenous"]], "makehomogenous() (pyslam.image_processing.feature_descriptors.keypoint.keypoint method)": [[15, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.makeHomogenous"]], "pyslam.image_processing.feature_descriptors.keypoint": [[15, "module-pyslam.image_processing.feature_descriptors.Keypoint"]], "orb (class in pyslam.image_processing.feature_descriptors.descriptors.orb)": [[16, "pyslam.image_processing.feature_descriptors.descriptors.ORB.ORB"]], "computedistance() (pyslam.image_processing.feature_descriptors.descriptors.orb.orb method)": [[16, "pyslam.image_processing.feature_descriptors.descriptors.ORB.ORB.computeDistance"]], "pyslam.image_processing.feature_descriptors.descriptors.orb": [[16, "module-pyslam.image_processing.feature_descriptors.descriptors.ORB"]], "pyslam.image_processing.feature_descriptors.descriptors": [[17, "module-pyslam.image_processing.feature_descriptors.descriptors"]], "descriptorextractor (class in pyslam.image_processing.feature_descriptors.extractors.descriptorextractor)": [[18, "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor.DescriptorExtractor"]], "t (in module pyslam.image_processing.feature_descriptors.extractors.descriptorextractor)": [[18, "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor.T"]], "getdescriptors() (pyslam.image_processing.feature_descriptors.extractors.descriptorextractor.descriptorextractor method)": [[18, "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor.DescriptorExtractor.getDescriptors"]], "pyslam.image_processing.feature_descriptors.extractors.descriptorextractor": [[18, "module-pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor"]], "keypointextractor (class in pyslam.image_processing.feature_descriptors.extractors.keypointextractor)": [[19, "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor.KeypointExtractor"]], "getkeypoints() (pyslam.image_processing.feature_descriptors.extractors.keypointextractor.keypointextractor method)": [[19, "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor.KeypointExtractor.getKeypoints"]], "pyslam.image_processing.feature_descriptors.extractors.keypointextractor": [[19, "module-pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor"]], "pyslam.image_processing.feature_descriptors.extractors.end2end": [[20, "module-pyslam.image_processing.feature_descriptors.extractors.end2end"]], "orb_detect_and_compute (class in pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute)": [[21, "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute"]], "__compute() (pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.orb_detect_and_compute method)": [[21, "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute.__compute"]], "getdescriptors() (pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.orb_detect_and_compute method)": [[21, "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute.getDescriptors"]], "getkeypoints() (pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.orb_detect_and_compute method)": [[21, "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute.getKeypoints"]], "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute": [[21, "module-pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute"]], "pyslam.image_processing.feature_descriptors.extractors": [[22, "module-pyslam.image_processing.feature_descriptors.extractors"]], "pyslam.image_processing.feature_descriptors": [[23, "module-pyslam.image_processing.feature_descriptors"]], "pyslam.image_processing": [[24, "module-pyslam.image_processing"]], "pyslam": [[25, "module-pyslam"]], "posetransformsource (class in pyslam.odometry)": [[26, "pyslam.odometry.PoseTransformSource"]], "gettransform() (pyslam.odometry.posetransformsource method)": [[26, "pyslam.odometry.PoseTransformSource.getTransform"]], "pyslam.odometry": [[26, "module-pyslam.odometry"]], "pyslam.optim": [[27, "module-pyslam.optim"]], "homogenousmatrixleastsquares() (in module pyslam.optim.procedures.homogenousmatrixleastsquares)": [[28, "pyslam.optim.procedures.HomogenousMatrixLeastSquares.homogenousMatrixLeastSquares"]], "pyslam.optim.procedures.homogenousmatrixleastsquares": [[28, "module-pyslam.optim.procedures.HomogenousMatrixLeastSquares"]], "homogenousmatrixleastsquares() (in module pyslam.optim.procedures)": [[29, "pyslam.optim.procedures.homogenousMatrixLeastSquares"]], "pyslam.optim.procedures": [[29, "module-pyslam.optim.procedures"]], "ransacdataset (class in pyslam.optim.ransac.ransacdataset)": [[30, "pyslam.optim.ransac.RANSACDataset.RANSACDataset"]], "t (in module pyslam.optim.ransac.ransacdataset)": [[30, "pyslam.optim.ransac.RANSACDataset.T"]], "__len__() (pyslam.optim.ransac.ransacdataset.ransacdataset method)": [[30, "pyslam.optim.ransac.RANSACDataset.RANSACDataset.__len__"]], "getrandomsubsample() (pyslam.optim.ransac.ransacdataset.ransacdataset method)": [[30, "pyslam.optim.ransac.RANSACDataset.RANSACDataset.getRandomSubsample"]], "getsubsample() (pyslam.optim.ransac.ransacdataset.ransacdataset method)": [[30, "pyslam.optim.ransac.RANSACDataset.RANSACDataset.getSubsample"]], "pyslam.optim.ransac.ransacdataset": [[30, "module-pyslam.optim.ransac.RANSACDataset"]], "d (in module pyslam.optim.ransac.ransacestimator)": [[31, "pyslam.optim.ransac.RANSACEstimator.D"]], "ransacestimator (class in pyslam.optim.ransac.ransacestimator)": [[31, "pyslam.optim.ransac.RANSACEstimator.RANSACEstimator"]], "__getmodelandinliers() (pyslam.optim.ransac.ransacestimator.ransacestimator static method)": [[31, "pyslam.optim.ransac.RANSACEstimator.RANSACEstimator.__getModelAndInliers"]], "fit() (pyslam.optim.ransac.ransacestimator.ransacestimator method)": [[31, "pyslam.optim.ransac.RANSACEstimator.RANSACEstimator.fit"]], "pyslam.optim.ransac.ransacestimator": [[31, "module-pyslam.optim.ransac.RANSACEstimator"]], "ransacmodel (class in pyslam.optim.ransac.ransacmodel)": [[32, "pyslam.optim.ransac.RANSACModel.RANSACModel"]], "t (in module pyslam.optim.ransac.ransacmodel)": [[32, "pyslam.optim.ransac.RANSACModel.T"]], "findinlierindices() (pyslam.optim.ransac.ransacmodel.ransacmodel method)": [[32, "pyslam.optim.ransac.RANSACModel.RANSACModel.findInlierIndices"]], "fit() (pyslam.optim.ransac.ransacmodel.ransacmodel method)": [[32, "pyslam.optim.ransac.RANSACModel.RANSACModel.fit"]], "pyslam.optim.ransac.ransacmodel": [[32, "module-pyslam.optim.ransac.RANSACModel"]], "ransacdataset (class in pyslam.optim.ransac)": [[33, "pyslam.optim.ransac.RANSACDataset"]], "ransacestimator (class in pyslam.optim.ransac)": [[33, "pyslam.optim.ransac.RANSACEstimator"]], "ransacmodel (class in pyslam.optim.ransac)": [[33, "pyslam.optim.ransac.RANSACModel"]], "__getmodelandinliers() (pyslam.optim.ransac.ransacestimator static method)": [[33, "pyslam.optim.ransac.RANSACEstimator.__getModelAndInliers"]], "__len__() (pyslam.optim.ransac.ransacdataset method)": [[33, "pyslam.optim.ransac.RANSACDataset.__len__"]], "findinlierindices() (pyslam.optim.ransac.ransacmodel method)": [[33, "pyslam.optim.ransac.RANSACModel.findInlierIndices"]], "fit() (pyslam.optim.ransac.ransacestimator method)": [[33, "pyslam.optim.ransac.RANSACEstimator.fit"]], "fit() (pyslam.optim.ransac.ransacmodel method)": [[33, "pyslam.optim.ransac.RANSACModel.fit"]], "getrandomsubsample() (pyslam.optim.ransac.ransacdataset method)": [[33, "pyslam.optim.ransac.RANSACDataset.getRandomSubsample"]], "getsubsample() (pyslam.optim.ransac.ransacdataset method)": [[33, "pyslam.optim.ransac.RANSACDataset.getSubsample"]], "pyslam.optim.ransac": [[33, "module-pyslam.optim.ransac"]], "messagequeue (class in pyslam.pubsub)": [[34, "pyslam.pubsub.MessageQueue"]], "publisher (class in pyslam.pubsub)": [[34, "pyslam.pubsub.Publisher"]], "t (in module pyslam.pubsub)": [[34, "pyslam.pubsub.T"]], "listen() (pyslam.pubsub.messagequeue method)": [[34, "pyslam.pubsub.MessageQueue.listen"]], "publish() (pyslam.pubsub.messagequeue method)": [[34, "pyslam.pubsub.MessageQueue.publish"]], "publish() (pyslam.pubsub.publisher method)": [[34, "pyslam.pubsub.Publisher.publish"]], "pyslam.pubsub": [[34, "module-pyslam.pubsub"]], "subscribe() (pyslam.pubsub.publisher method)": [[34, "pyslam.pubsub.Publisher.subscribe"]], "pyslam.systems": [[35, "module-pyslam.systems"]], "uid (class in pyslam.uid)": [[36, "pyslam.uid.UID"]], "generateuid() (pyslam.uid.uid static method)": [[36, "pyslam.uid.UID.generateUID"]], "pyslam.uid": [[36, "module-pyslam.uid"]], "uid (pyslam.uid.uid property)": [[36, "pyslam.uid.UID.uid"]], "drawfeatures() (in module pyslam.visualize.drawfeatures)": [[37, "pyslam.visualize.DrawFeatures.drawFeatures"]], "pyslam.visualize.drawfeatures": [[37, "module-pyslam.visualize.DrawFeatures"]], "pygameframewindow (class in pyslam.visualize.pygameframewindow)": [[38, "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow"]], "__captureloop() (pyslam.visualize.pygameframewindow.pygameframewindow method)": [[38, "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow.__captureLoop"]], "pyslam.visualize.pygameframewindow": [[38, "module-pyslam.visualize.PyGameFrameWindow"]], "startlistenloop() (pyslam.visualize.pygameframewindow.pygameframewindow method)": [[38, "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow.startListenLoop"]], "stoplistenloop() (pyslam.visualize.pygameframewindow.pygameframewindow method)": [[38, "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow.stopListenLoop"]], "pyslam.visualize": [[39, "module-pyslam.visualize"]]}})