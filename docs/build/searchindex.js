Search.setIndex({"docnames": ["autoapi/index", "autoapi/pyslam/capture/index", "autoapi/pyslam/common_capture/UncalibratedMonocularCamera/index", "autoapi/pyslam/common_capture/index", "autoapi/pyslam/demos/index", "autoapi/pyslam/demos/monocular_capture/index", "autoapi/pyslam/demos/monocular_features/index", "autoapi/pyslam/epipolar_models/EpipolarModelCore/index", "autoapi/pyslam/epipolar_models/Fundamental/index", "autoapi/pyslam/epipolar_models/HomographyErrors/index", "autoapi/pyslam/epipolar_models/Homograpy/index", "autoapi/pyslam/epipolar_models/index", "autoapi/pyslam/image_processing/cv_pillow/index", "autoapi/pyslam/image_processing/feature_descriptors/Descriptor/index", "autoapi/pyslam/image_processing/feature_descriptors/ImageFeatures/index", "autoapi/pyslam/image_processing/feature_descriptors/ImagePairFeatureMatches/index", "autoapi/pyslam/image_processing/feature_descriptors/Keypoint/index", "autoapi/pyslam/image_processing/feature_descriptors/descriptors/ORB/index", "autoapi/pyslam/image_processing/feature_descriptors/descriptors/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/DescriptorExtractor/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/KeypointExtractor/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/end2end/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/end2end/orb_detect_and_compute/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/index", "autoapi/pyslam/image_processing/feature_descriptors/index", "autoapi/pyslam/image_processing/index", "autoapi/pyslam/index", "autoapi/pyslam/odometry/index", "autoapi/pyslam/optim/index", "autoapi/pyslam/optim/procedures/HomogenousMatrixLeastSquares/index", "autoapi/pyslam/optim/procedures/index", "autoapi/pyslam/optim/ransac/RANSACDataset/index", "autoapi/pyslam/optim/ransac/RANSACEstimator/index", "autoapi/pyslam/optim/ransac/RANSACModel/index", "autoapi/pyslam/optim/ransac/index", "autoapi/pyslam/pubsub/index", "autoapi/pyslam/systems/index", "autoapi/pyslam/uid/index", "autoapi/pyslam/visualize/DrawFeatures/index", "autoapi/pyslam/visualize/DrawMatches/index", "autoapi/pyslam/visualize/DrawScene/index", "autoapi/pyslam/visualize/PyGameFrameWindow/index", "autoapi/pyslam/visualize/index", "index"], "filenames": ["autoapi/index.rst", "autoapi/pyslam/capture/index.rst", "autoapi/pyslam/common_capture/UncalibratedMonocularCamera/index.rst", "autoapi/pyslam/common_capture/index.rst", "autoapi/pyslam/demos/index.rst", "autoapi/pyslam/demos/monocular_capture/index.rst", "autoapi/pyslam/demos/monocular_features/index.rst", "autoapi/pyslam/epipolar_models/EpipolarModelCore/index.rst", "autoapi/pyslam/epipolar_models/Fundamental/index.rst", "autoapi/pyslam/epipolar_models/HomographyErrors/index.rst", "autoapi/pyslam/epipolar_models/Homograpy/index.rst", "autoapi/pyslam/epipolar_models/index.rst", "autoapi/pyslam/image_processing/cv_pillow/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/Descriptor/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/ImageFeatures/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/ImagePairFeatureMatches/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/Keypoint/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/descriptors/ORB/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/descriptors/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/DescriptorExtractor/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/KeypointExtractor/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/end2end/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/end2end/orb_detect_and_compute/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/index.rst", "autoapi/pyslam/image_processing/index.rst", "autoapi/pyslam/index.rst", "autoapi/pyslam/odometry/index.rst", "autoapi/pyslam/optim/index.rst", "autoapi/pyslam/optim/procedures/HomogenousMatrixLeastSquares/index.rst", "autoapi/pyslam/optim/procedures/index.rst", "autoapi/pyslam/optim/ransac/RANSACDataset/index.rst", "autoapi/pyslam/optim/ransac/RANSACEstimator/index.rst", "autoapi/pyslam/optim/ransac/RANSACModel/index.rst", "autoapi/pyslam/optim/ransac/index.rst", "autoapi/pyslam/pubsub/index.rst", "autoapi/pyslam/systems/index.rst", "autoapi/pyslam/uid/index.rst", "autoapi/pyslam/visualize/DrawFeatures/index.rst", "autoapi/pyslam/visualize/DrawMatches/index.rst", "autoapi/pyslam/visualize/DrawScene/index.rst", "autoapi/pyslam/visualize/PyGameFrameWindow/index.rst", "autoapi/pyslam/visualize/index.rst", "index.rst"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.capture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.common_capture.UncalibratedMonocularCamera</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.common_capture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.demos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.demos.monocular_capture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.demos.monocular_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.epipolar_models.EpipolarModelCore</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.epipolar_models.Fundamental</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.epipolar_models.HomographyErrors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.epipolar_models.Homograpy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.epipolar_models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.cv_pillow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.Descriptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.ImageFeatures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.Keypoint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.descriptors.ORB</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.descriptors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors.end2end</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.odometry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.procedures.HomogenousMatrixLeastSquares</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.procedures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.ransac.RANSACDataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.ransac.RANSACEstimator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.ransac.RANSACModel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.ransac</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.pubsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.systems</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.uid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.visualize.DrawFeatures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.visualize.DrawMatches</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.visualize.DrawScene</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.visualize.PyGameFrameWindow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.visualize</span></code>", "Welcome to PySLAM\u2019s documentation!"], "terms": {"index": [15, 31, 34, 43], "modul": [18, 23, 25, 34, 42, 43], "search": 43, "page": [0, 43], "The": [1, 2, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42], "core": [1, 7], "my": [], "exampl": [1, 2, 27, 31, 34, 35], "project": [7, 8, 11], "class": [7, 23], "exampleclass": [], "name": [2, 8, 11], "an": [1, 2, 4, 8, 9, 11, 12, 13, 14, 16, 17, 19, 20, 22, 27, 31, 32, 33, 34, 35, 38, 39, 41], "docstr": [], "definit": 8, "about_self": [], "return": [1, 2, 7, 8, 10, 11, 12, 14, 16, 19, 20, 22, 27, 31, 32, 33, 34, 35, 38, 39], "inform": [], "about": [], "instanc": [8, 11, 27, 32, 34, 35], "creat": [0, 32, 34], "from": [1, 2, 5, 6, 8, 10, 11, 14, 15, 18, 19, 20, 23, 25, 32, 34, 35, 39, 41], "about_m": [], "your_nam": [], "most": [1, 2, 40], "import": 8, "thing": [7, 13], "person": [], "param": [10, 11], "A": [1, 2, 7, 8, 9, 10, 11, 13, 15, 16, 17, 27, 31, 32, 34, 35, 37, 40, 41], "string": [], "thi": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 25, 27, 31, 33, 34, 35, 39, 40, 42], "contain": [0, 1, 3, 4, 5, 6, 8, 10, 11, 13, 14, 15, 17, 24, 31, 33, 34, 39, 40, 42], "auto": 0, "gener": [0, 1, 8, 11, 14, 19, 24, 31, 33, 34, 35], "document": 0, "1": [0, 2, 12, 34], "pyslam": 0, "captur": [0, 2, 3, 5, 6, 26, 35, 41], "capturegroup": [], "capturemanag": [], "rawsensor": [], "sensorwrapp": [], "image_process": [0, 2, 8, 10, 11, 26, 38, 39], "stereo": [], "stereodescriptormatch": [], "imag": [2, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 35, 38, 39, 41], "imagefeatur": [0, 8, 10, 11, 15, 24, 25, 26, 38, 39], "normalizedimagefeatur": [], "odometri": [0, 8, 10, 11, 26], "visual_odometri": [], "homographymatrix": [10, 11], "motionhypothesissourc": [], "optim": [0, 8, 10, 11, 26], "procedur": [0, 19, 20, 26, 28], "homogenousmatrixleastsquar": [0, 26, 28, 30], "ransac": [0, 8, 10, 11, 26, 28], "ransacdataset": [0, 8, 10, 11, 26, 28, 32, 33, 34], "ransacmodel": [0, 8, 10, 11, 26, 28, 32, 34], "sensor": [1, 2, 35], "monocularuncalibratedcameracaptur": [], "uncalibratedfilecamerarawsensor": [], "system": [0, 8, 26, 35], "main": [], "uid": [0, 1, 2, 26], "sphinx": 0, "autoapi": 0, "sensorwrapperuid": [], "none": [1, 2, 5, 6, 14, 15, 16, 22, 31, 33, 34, 35, 37, 41], "base": [1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 17, 19, 20, 22, 23, 27, 31, 33, 34, 35, 40], "abc": [1, 8, 9, 13, 19, 20, 27, 33, 34], "repres": [1, 2, 7, 8, 9, 10, 11, 15, 16, 17, 19, 20, 31, 33, 34, 37, 40], "akin": [], "singl": 27, "measur": [1, 2, 3, 35], "other": [1, 7, 13, 15, 17, 19], "kind": [1, 3, 33, 34, 35], "i": [1, 2, 8, 9, 11, 13, 14, 15, 16, 17, 19, 22, 27, 31, 32, 33, 34, 35, 40], "abstract": [1, 8, 10, 11, 13, 17, 19, 20, 27, 33, 34], "specif": [8, 11, 23], "type": [1, 8, 11, 13, 15, 18, 24, 27, 31, 32, 33, 34, 35], "being": [], "subclass": [1, 13, 19, 20, 35], "here": [], "can": [1, 2, 3, 8, 9, 10, 11, 13, 14, 18, 19, 20, 23, 27, 33, 34, 35], "have": [8, 10, 11, 19, 22, 27, 33, 34], "extra": [], "properti": [1, 16, 37], "depth": [], "map": [], "listofcaptureuid": [], "group": [], "object": [1, 2, 15, 27, 31, 34, 35, 38, 39], "togeth": [8, 22], "just": [1, 19, 31, 34], "wrap": [1, 41], "around": [1, 41], "list": [14, 19, 20, 22, 31, 34], "stopev": [], "capturer": 1, "5": [31, 34], "respons": [14, 32, 34, 35], "manag": [1, 35], "all": [1, 2, 8, 10, 11, 13, 14, 22, 31, 32, 33, 34, 35, 38, 40], "physic": 1, "camera": [1, 2, 5, 6, 7, 8, 10, 11, 35, 40], "attach": [], "e": [8, 11], "imagesensor": [], "ar": [1, 8, 10, 11, 13, 14, 16, 22, 23, 24, 31, 32, 33, 34, 35, 41], "regist": [], "also": [2, 35, 42], "central": [], "lookup": [], "we": [1, 2, 8, 10, 11, 12, 13, 14, 16, 18, 19, 22, 24, 27, 31, 32, 33, 34, 35, 39, 41], "extract": [6, 14, 18, 19, 20, 23, 25, 27], "matric": [8, 9, 11, 27], "etc": [32, 34], "__captureloop": 41, "intern": [1, 2, 8, 10, 11, 14, 15, 16, 19, 22, 32, 34, 35, 40, 41], "loop": [1, 2, 41], "run": [1, 5, 6, 14, 15, 32, 34, 35, 41], "expect": [1, 2, 8, 10, 11, 19, 22, 31, 34, 41], "start": [1, 2, 35, 41], "new": [1, 31, 34, 35], "thread": [32, 34, 35, 41], "startcaptureloop": 1, "function": [1, 2, 8, 10, 11, 16, 22, 31, 34, 40], "exit": [], "when": [1, 2, 35], "stop": [1, 2, 41], "flag": [], "set": [1, 14, 19, 31, 32, 34, 35], "separ": [19, 22, 34], "process": [1, 35], "wrapper": 1, "implement": [1, 7, 8, 9, 10, 11, 13, 17, 19, 20, 23, 34, 35, 39], "raw": [], "deriv": [], "themselv": [], "activatesensor": [], "doe": [1, 8, 11, 32, 34, 35, 42], "ani": [1, 2, 8, 11, 27, 35, 42], "initi": [32, 34, 42], "tell": 34, "prepar": [1, 2], "call": [1, 2, 40], "As": [33, 34], "might": [1, 2], "opencv": [1, 2, 15, 16, 22, 39], "video": 41, "so": [13, 31, 34, 35], "happen": [], "fast": [], "teardownsensor": [], "opposit": [], "startcaptur": [], "cleanup": [1, 2], "need": [1, 2, 10, 11, 13, 15, 19, 33, 34, 42], "done": [2, 22], "record": 1, "go": [33, 34, 41], "standbi": [], "state": [1, 2, 40], "In": [], "context": [], "could": [1, 14, 27, 32, 34], "mean": 16, "frame": [1, 2, 5, 6, 40, 41], "put": [], "idl": [1, 2], "popul": [], "data": [8, 10, 11, 13, 17, 31, 32, 33, 34], "collect": 35, "str": [2, 37], "our": [3, 8, 11, 14, 31, 34], "deal": [], "get": [1, 2, 8, 11, 34, 35], "pipe": [], "inter": [1, 2, 8, 34, 41], "commun": [], "relat": [1, 3, 8, 9, 10, 11, 14, 15, 27, 42], "ha": [1, 8, 16], "coupl": [], "high": [], "level": 8, "support": [], "command": [], "should": [1, 2, 8, 14, 16, 31, 34], "abl": [], "where": [8, 34, 35], "time": [1, 2], "entir": 34, "decid": [8, 11], "differ": [13, 41], "allow": [1, 2, 27, 31, 32, 34, 35, 40, 41], "more": [8, 10, 11, 35], "accur": [], "take": [1, 2, 7, 10, 11, 14, 19, 20, 32, 33, 34, 39, 40], "seem": 35, "like": [8, 24, 31, 34, 35], "pretti": 1, "fundament": [0, 11, 26, 27], "do": [16, 19, 27, 35], "wai": [13, 14, 35, 40], "2": [7, 8, 10, 11, 12, 14, 15, 16, 27, 39], "case": [19, 27], "one": [8, 11, 15, 19, 32, 35], "isn": [], "t": [1, 14, 19, 31, 33, 34, 35], "shouldn": [], "inerfer": [], "instead": [], "grab": [], "copi": [1, 16], "recent": [1, 2], "To": [], "queue": 35, "post": [], "you": [2, 8, 14], "want": [2, 8, 31, 34, 35], "simpli": [1, 2, 22, 35], "wait": [1, 35], "aren": [], "current": 14, "pull": 1, "__startcaptur": [], "activ": [1, 2], "true": 35, "acquir": [], "lock": [], "configur": [32, 34], "readi": [], "__endcaptur": [], "fals": 35, "clear": [], "tear": [], "down": [], "execut": [], "extern": [], "its": [32, 33, 34, 35], "own": [], "multi": [], "getcaptur": [1, 2], "safe": [], "non": 35, "intrus": [], "latest": [1, 2], "It": 14, "problem": 34, "co": [], "oper": 35, "": [2, 7, 8, 13, 17, 22, 31, 34, 35, 39, 40], "make": [8, 31, 34, 40], "easi": [], "cvcolorconversioncod": [], "sourceimgmat": [], "cv2": [2, 12], "mat": [2, 12], "bwimgmat": [], "captureuid": [], "monocular": [2, 5, 6], "would": [1, 2, 27, 35], "while": [19, 34, 35], "than": [], "help": [], "homogen": [14, 16], "pipelin": 35, "ideal": [], "same": [7, 8, 11, 12, 14, 19, 22], "against": [8, 10, 11, 14, 33, 34], "mono": [], "without": [16, 35], "too": [], "mani": [1, 34], "code": [1, 2, 32, 34, 35, 40, 41], "tweak": [], "featuretyp": [], "enum": 12, "enumer": [], "defin": [7, 8, 11, 12, 18, 23, 25, 27, 33, 34, 35], "orb": [0, 6, 8, 18, 22, 24, 25], "inputimag": 14, "what": [2, 8, 10, 11, 33, 34, 35, 40], "featur": [6, 8, 10, 11, 15, 19, 23, 24, 35, 38, 39], "comput": [8, 9, 10, 11, 13, 14, 15, 17, 19, 20, 22, 31, 34], "detect": [8, 10, 11, 35], "specifi": [31, 32, 33, 34], "store": [2, 8, 11, 14], "them": [1, 2, 6, 8, 14, 22, 39, 40], "further": [], "__computeorbdescriptor": [], "descriptor": [0, 14, 15, 19, 22, 23, 24, 25, 26, 39], "normal": [8, 11, 14], "keypoint": [0, 7, 14, 19, 20, 22, 24, 25, 26, 38], "suitabl": [], "variat": [], "dlt": [], "eight": [8, 11], "point": [7, 8, 10, 11, 14, 16, 40], "algorithm": [8, 11, 19], "thei": [8, 11, 12, 34, 35], "zero": [31, 34], "averag": [], "distanc": [13, 17], "origin": [], "sqrt": [], "stereomatch": [], "simpl": [4, 16, 27, 35], "dataclass": [], "found": [15, 34], "match": [8, 10, 11, 15, 39], "between": [8, 13, 15, 17, 27, 34, 39], "img": [], "img2": [], "imgoneidx": 15, "int": [2, 10, 11, 15, 22, 31, 32, 34, 40], "imgtwoidx": 15, "stereodescriptorsmatch": [], "imgonefeatur": [8, 10, 11, 39], "imgtwofeatur": [8, 10, 11, 39], "determin": [2, 8, 10, 11, 15, 32, 33, 34], "which": [1, 8, 9, 10, 11, 14, 16, 23, 27, 31, 33, 34, 35, 40], "indic": [1, 8, 10, 11, 15, 31, 32, 33, 34, 35, 40], "first": [7, 8, 10, 11, 14, 15, 31, 34, 35, 39], "second": [1, 2, 7, 8, 10, 11, 14, 15, 35], "us": [1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 17, 22, 25, 27, 31, 32, 33, 34, 35, 39, 40], "flann": 15, "low": [], "ratio": [], "test": 4, "computematch": 15, "sub": [27, 31, 32, 34, 35], "estim": [8, 10, 11, 27, 32, 33, 34], "motion": [8, 11], "visual": [0, 26, 27], "homographi": [8, 9, 10, 11, 27], "vio": 27, "imu": 27, "preintegr": 27, "gettransl": [], "translat": [], "vector": [7, 8, 11, 16], "timestep": 27, "anoth": [13, 17, 31, 34], "scale": 16, "factor": [8, 11], "assum": [7, 8, 11, 16, 31, 34], "known": 2, "parti": [], "agnost": [], "getrot": [], "3x3": [8, 11, 14], "rotat": [], "matrix": [2, 7, 8, 9, 10, 11, 14, 16, 27, 39], "chang": 8, "pose": [8, 11, 27], "sourc": [1, 3], "destin": [], "involv": [31, 34], "some": [1, 2, 8, 11, 12, 24, 33, 34, 35], "convent": [31, 34], "how": [1, 34], "onli": [13, 35], "restrict": 35, "imgonenormalizedfeatur": [], "imgtwonormalizedfeatur": [], "inmat": [14, 29, 30], "numpi": [7, 8, 10, 11, 12, 13, 14, 16, 17, 29, 30, 31, 32, 33, 34], "ndarrai": [7, 8, 10, 11, 12, 13, 14, 16, 17, 29, 30, 31, 32, 33, 34], "dataset": [1, 8, 9, 10, 11, 31, 32, 33, 34], "memori": [31, 34], "arrai": [7, 8, 10, 11, 12, 13, 14, 16, 17, 31, 32, 33, 34], "pass": [2, 8, 10, 11, 31, 32, 34, 35], "assumpt": [19, 31, 34], "simplic": [31, 34], "__len__": [31, 34], "getrandomsubsampl": [31, 34], "numofpoint": [31, 34], "vanilla": [31, 34], "scheme": [19, 31, 34], "random": [31, 32, 34], "uniform": [31, 34], "sampl": [31, 32, 34], "self": [31, 34], "less": [31, 34], "datapoint": [1, 31, 32, 34], "alongsid": [], "model": [7, 8, 10, 11, 32, 33, 34, 35], "wish": [33, 34], "logic": [1, 2, 7, 8, 9, 11, 12, 15, 24, 34, 40], "rid": 34, "lot": [25, 34], "boiler": 34, "plate": 34, "automat": [8, 34], "parralel": [32, 34], "come": [34, 35], "after": [19, 33, 34], "observ": 34, "natur": 34, "iter": [32, 34, 35], "depend": 34, "much": 34, "possibl": [27, 34], "below": 34, "pseudocod": 34, "hopefulli": 34, "provid": [2, 14, 34], "insight": 34, "why": 34, "denot": 34, "empti": 34, "inlier": [8, 10, 11, 32, 33, 34], "u": [27, 31, 34, 35], "had": 34, "n": 34, "pick": 34, "whole": 34, "size": [19, 22, 34], "fit": [8, 10, 11, 32, 33, 34], "question": 34, "inlier_count": 34, "number": [1, 2, 16, 22, 31, 32, 33, 34, 35], "0": [12, 14, 34, 35], "For": [1, 2, 34, 35], "j": 34, "d": [32, 34], "error": [7, 8, 9, 11, 34], "jth": 34, "err": 34, "thresh": 34, "valu": [8, 11, 34], "discrimin": 34, "outlier": 34, "outlit": 34, "If": [2, 8, 16, 34, 35], "increment": 34, "add": 34, "count": [8, 11, 34], "end": [19, 22, 34], "best": [32, 33, 34], "largest": 34, "option": [2, 32, 33, 34], "re": [8, 12, 32, 33, 34, 40], "datapoitn": 34, "uncalibratedmonocularfilecamerarawsensor": [], "camerafnam": [], "uncalibr": 2, "webcam": [], "laptop": [], "avail": [2, 8, 11], "file": [2, 5, 6, 42], "dev": 2, "video0": 2, "treat": 22, "calibr": [], "generateuid": 37, "api": [22, 40, 43], "refer": [1, 24, 35, 43], "event": [], "sensorss": [], "perform": [1, 2], "paramet": [1, 2, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 31, 32, 33, 34, 35, 38, 39, 40, 41], "structur": [31, 34], "correspond": [7, 8, 10, 11, 14, 15, 16, 22, 23, 27, 31, 34], "keep": [31, 33, 34], "track": [31, 33, 34], "especi": [31, 34], "onc": [27, 31, 34], "findinlierindic": [8, 10, 11, 33, 34], "given": [9, 12, 14, 16, 19, 22, 31, 32, 33, 34, 35, 38], "root": [8, 10, 11, 31, 33, 34], "step": [22, 33, 34, 35], "qualiti": [33, 34], "highest": [8, 11, 33, 34], "well": [33, 34], "select": [19, 33, 34], "deem": [], "ransacestim": [0, 26, 28, 34], "getsubsampl": [31, 34], "whose": [10, 11, 31, 34], "includ": [], "result": [8, 11, 12, 31, 34, 35], "numwork": [32, 34], "constructor": [10, 11, 32, 34], "pool": [32, 34], "worker": [32, 34], "instanti": [32, 34], "processpoolexecutor": [32, 34], "static": [8, 37], "__getmodelandinli": [], "fulldataset": 32, "subset": 32, "modelt": [], "tupl": [14, 32], "helper": [12, 32, 35], "predictd": [], "full": [32, 35, 40], "were": 32, "ty": [], "async": [32, 34], "modeltyp": [], "datapointsperiter": [32, 34], "refit": [32, 34], "bool": [8, 11, 32, 34, 35], "each": [8, 11, 32, 34, 35], "whether": [32, 34, 35], "retun": [32, 34], "futur": [], "evalu": [], "predict": [32, 39], "capture_new": [], "everi": 40, "framework": [1, 2, 3, 4], "work": [1, 12, 13, 24], "There": [], "stand": [], "move": [], "almost": [1, 2], "instantli": [1, 2], "concret": [], "boot": [], "alwai": 1, "begin": [], "immedi": [1, 2], "ransacmodelconfig": [], "config": [10, 11], "ransac_cr": [], "ransamodel": [], "method": [8, 11, 13, 17, 19, 20], "must": [2, 13, 17, 19, 20, 35], "anyon": [], "who": [], "still": [], "give": [], "leewai": [], "your": [], "read": [2, 41], "reccomend": [], "pop": [1, 2], "off": [1, 2], "request": [31, 34], "remot": [], "makeact": [1, 2], "capturefrequ": [1, 2], "ask": [1, 2], "setup": [1, 2], "frequenc": [1, 2], "save": [1, 2, 22], "buffer": [1, 2], "complet": [1, 2, 35], "capture_old": [], "uniqu": [1, 37], "identifi": [1, 37], "open": [], "remark": [], "learn": [], "leaveact": [1, 2], "out": [1, 2, 3, 8, 11], "turn": [1, 2], "timestamp": [1, 2], "datetim": [1, 2], "sensoruid": [], "wa": 1, "taken": 1, "timezon": 1, "utc": 1, "handl": [], "synchron": [], "requir": [8, 10, 11, 19, 32, 34], "enabl": [], "effect": [], "both": [8, 11, 15, 19, 35, 39], "insid": [], "guarante": 22, "sensit": [], "sure": [], "yourself": [], "boilerpl": [], "those": [], "downstream": 35, "through": [], "sensor_wait_tim": [], "asynchron": [], "asynciter": [], "yield": [1, 2, 8, 11], "underli": [1, 40], "await": [], "rate": 1, "captureloop": [], "asyncio": [], "task": 35, "aliv": [], "cancel": [], "easili": [35, 41], "send": [], "enclos": [], "unit": 1, "per": [1, 2], "color": [2, 12], "convers": [2, 16], "input": [12, 14], "output": 2, "correct": [2, 8, 11, 27], "black": [], "white": [], "cv": 2, "color_bgr2grai": [], "obvious": [], "vari": 13, "sourcemat": [], "came": [1, 8, 11], "directli": [8, 11], "vision": 8, "routin": [], "bw": [], "ignor": [], "encod": [], "measurementuid": [], "util": [3, 14, 23, 25, 35, 42], "pattern": 35, "show": [], "up": [8, 11], "commonli": [], "slam": [1, 35], "sens": [8, 40], "suppos": [], "pair": 15, "hypothes": [], "keyfram": [], "graph": [], "note": [], "IN": [], "3": [1, 7, 8, 16], "reason": [], "abov": [], "seri": 35, "publish": [1, 35, 41], "subscrib": 35, "design": [35, 40], "upon": [], "notifi": [], "handler": [], "basic": 15, "construct": 35, "quit": [8, 11, 16], "act": 35, "callabl": [32, 34], "messag": 35, "sent": [], "anyth": [], "over": 35, "listen": [1, 35, 41], "until": 1, "finish": [], "interfac": [1, 8, 11, 35], "long": [], "spawn": [], "pubsub": [0, 1, 26, 41], "getmeasur": [1, 2], "__internalcaptureloop": 1, "float": [1, 2, 8, 11, 13, 17, 35], "propog": 1, "appropri": 1, "amount": 1, "next": 1, "build": [14, 35], "pub": 35, "common": [3, 14, 35], "sinc": [8, 10, 11, 22, 35, 40], "usual": 35, "subsequ": 35, "previou": 35, "cleanli": 35, "realli": [19, 35], "chose": 35, "messagequeu": [35, 41], "receiv": 35, "block": [1, 35], "timeout": 35, "indefini": 35, "limit": 35, "max": 35, "befor": 35, "noth": [2, 35], "otherwis": 35, "maintain": 35, "weak": 35, "refernc": 35, "soon": 35, "lose": 35, "last": 35, "strong": 35, "garbag": 35, "haven": 35, "yet": 35, "been": 35, "posetransformsourc": [8, 10, 11, 27], "transform": [8, 10, 11, 27], "gettransform": [8, 11, 27], "pose3d": [8, 11, 27], "variou": 18, "lidar": [], "cloud": [], "rel": 27, "relev": [], "sai": [], "concern": [], "robot": [], "posit": 7, "orient": [], "w": [], "r": [], "coordin": [7, 14, 16, 19], "interest": 24, "3d": [7, 16], "csae": [], "2d": [7, 14, 16], "By": [24, 31, 34], "item": [31, 34], "slice": [31, 34], "4": [8, 10, 11, 31, 34], "5th": [31, 34], "element": [8, 11, 14, 31, 34], "paramat": [10, 11, 14, 31, 32, 34], "idx": [31, 34], "These": [31, 34], "modelconstructor": [32, 34], "tha": 32, "try": [22, 32, 34], "client": [1, 32, 34, 35, 40, 41], "partial": [32, 34], "ranascmodel": [32, 34], "monocular_uncalibrated_camera": [], "monocularuncalibratedcamerameasur": 2, "monocularuncalibratedfilecamera": 2, "associ": [8, 11], "built": [], "custom": [], "fname": 2, "opencvcolorcod": 2, "cvtcolor": 2, "measurementsourc": [1, 2], "demo": [0, 26], "monocular_captur": [0, 4, 26], "ro": 1, "topic": 1, "pre": 1, "whatev": 1, "referenc": 1, "apart": [1, 10, 11], "lightweight": 1, "special": 1, "intend": 1, "rest": 1, "alreadi": [2, 10, 11], "submodul": [], "arrang": 4, "part": [4, 35], "sourceuid": [1, 2], "global_lookup": 1, "weakref": 1, "weakvaluedictionari": 1, "pygameupdat": [], "msgqueue": 41, "pygam": [5, 6, 41], "window": [40, 41], "blit": 40, "onto": [7, 38, 39, 40], "made": [], "updat": 40, "__init__": [35, 42], "expectd": 35, "proxi": 35, "multiprocess": 35, "pickl": 35, "neg": 35, "indefinit": 35, "accross": [15, 35, 39], "feature_descriptor": [0, 8, 10, 11, 25, 26, 38, 39], "extractor": [0, 8, 11, 14, 24, 25, 26], "descriptorextractionschem": [], "descriptorarr": [13, 17], "beyond": 13, "identif": 13, "calcul": 13, "child": 13, "computedist": [13, 17], "coord": 16, "heterogen": [7, 14, 16], "fro": [12, 16], "either": 16, "shape": 16, "getter": 16, "convert": [2, 8, 11, 12, 16], "makeheterogen": 16, "represent": 16, "storag": [2, 16], "makehomogen": 16, "asheterogen": 16, "dimens": 16, "ashomogen": 16, "seemingli": 19, "impli": 19, "exist": 19, "corner": 24, "region": 24, "form": 24, "patch": 24, "primit": 25, "keypointextractionschem": [], "ham": 17, "getdescriptor": [19, 22], "inimg": [12, 19, 20, 22], "inkeypoint": [19, 22], "nth": [19, 22], "describ": [19, 22], "getkeypoint": [20, 22], "descriptorextractor": [0, 14, 22, 23, 24, 25], "keypointextractor": [0, 14, 22, 23, 24, 25], "cv_pillow": [0, 2, 25, 26], "pygameframewindow": [0, 26, 42], "orb_detect_and_comput": [0, 21, 23, 24], "numpoint": 22, "detectandcomput": 22, "find": [8, 10, 11, 22], "No": 22, "actual": [8, 11, 22], "howev": 22, "__comput": 22, "background": 1, "stopcaptureloop": 1, "pil": [2, 12, 14, 19, 20, 22, 38, 39, 41], "pillow": [2, 12, 38, 39], "pillowtargetcolor": 2, "pillowcolorformat": [2, 12], "afterward": 2, "format": [2, 12, 14], "default": 2, "target": 2, "l": [2, 12], "grayscal": [2, 12], "rgb": [2, 12], "arraytopillowimag": 12, "inarr": 12, "colorformat": 12, "under": 12, "hood": 12, "desir": 12, "pillowtoarrai": 12, "respect": 14, "previous": 14, "individu": 41, "startlistenloop": 41, "stoplistenloop": 41, "bookkeep": 42, "compon": 42, "end2end": [0, 23, 24, 25], "monocular_featur": [0, 4, 26], "drawfeatur": [0, 26, 42], "draw": [38, 39, 40], "drawn": [38, 39], "imagepairfeaturematch": [0, 8, 10, 11, 24, 25, 26, 39], "normalizekeypointmatrix": 14, "jax": [7, 8, 14, 29, 30], "appli": [8, 9, 14], "x": 14, "y": 14, "jnp": 14, "kepoint": 14, "did": 14, "invert": 14, "un": 14, "buildnormalizedkeypoint": 14, "normalizad": 14, "One": [15, 35], "two": 15, "imagepairmatch": [8, 15, 39], "imagefeatureson": 15, "imagefeaturestwo": 15, "across": 15, "cost": [10, 11], "epipolar_model": [0, 26], "homographyerror": [0, 11, 26], "epipolar": 7, "common_captur": [0, 26], "uncalibratedmonocularcamera": [0, 3, 26], "box": 3, "machin": 5, "displai": [5, 6, 40], "mainli": 27, "four": 27, "solut": [8, 11, 27], "piec": 35, "standard": [8, 35], "reactor": 35, "respond": 35, "incom": 35, "someth": 35, "intermedi": 35, "portion": 35, "v": 35, "Then": 35, "epipolarmodelcor": [0, 11, 26], "homograpi": [0, 11, 26], "drawmatch": [0, 26, 42], "drawscen": [0, 26, 42], "among": 7, "triangulatepoint": 7, "p1": 7, "p2": 7, "pointon": 7, "pointtwo": 7, "triangul": 7, "3x4": 7, "tall": 7, "column": [7, 8, 11], "essenti": [8, 11], "fundamentalerror": [8, 11], "computeerror": 8, "fundamentalmatrix": [8, 11], "propos": [8, 10, 11], "ith": 8, "total": 8, "sum": 8, "intrins": [8, 11], "inlierthresh": [8, 11], "With": [8, 11], "hypothesi": [8, 11], "albeit": [8, 11], "necessarili": [8, 11], "veri": [8, 11], "good": [8, 11], "broad": [8, 11], "atleast": [8, 10, 11], "geometr": [8, 11], "look": [8, 11], "lower": [8, 11], "compar": [8, 11], "threshold": [8, 11], "order": [8, 11], "satisfi": [8, 11], "approxim": [8, 11], "power": [8, 11], "believ": [8, 11], "getfirstepipol": [8, 11], "epipol": [8, 11], "3x1": [8, 11], "getsecondepipol": [8, 11], "fundamentalsymetrictransfererror": 8, "symetr": [8, 9], "transfer": [8, 9], "close": 8, "analog": 8, "slamv1": 8, "11": 8, "gold": 8, "f": 8, "zisserman": 8, "book": 8, "multipl": 8, "view": 8, "geometri": 8, "quantiti": 8, "homographysymetrictransfererror": 9, "direct": [10, 11], "linear": [10, 11], "alorithm": [10, 11], "solv": [10, 11], "least": [10, 11], "potenti": [10, 11], "epipolarmodel": 11, "getmodelandinli": 32, "modelinst": 32, "incoming_t": 35, "outgoing_t": 35, "openvc": 39, "drawstereomatch": 39, "imgon": 39, "imgtwo": 39, "pangolin": 40, "scene": 40, "pangolinscen": 40, "width": 40, "height": 40, "visualis": 40, "variabl": 40, "shown": 40, "screen": 40, "whenev": 40, "asset": 40, "basicali": 40, "pixel": 40}, "objects": {"": [[26, 0, 0, "-", "pyslam"]], "pyslam": [[1, 0, 0, "-", "capture"], [3, 0, 0, "-", "common_capture"], [4, 0, 0, "-", "demos"], [11, 0, 0, "-", "epipolar_models"], [25, 0, 0, "-", "image_processing"], [27, 0, 0, "-", "odometry"], [28, 0, 0, "-", "optim"], [35, 0, 0, "-", "pubsub"], [36, 0, 0, "-", "systems"], [37, 0, 0, "-", "uid"], [42, 0, 0, "-", "visualize"]], "pyslam.capture": [[1, 1, 1, "", "GLOBAL_LOOKUP"], [1, 2, 1, "", "Measurement"], [1, 2, 1, "", "MeasurementSource"], [1, 2, 1, "", "Sensor"], [1, 1, 1, "", "T"]], "pyslam.capture.Measurement": [[1, 3, 1, "", "sourceUID"], [1, 3, 1, "", "timestamp"], [1, 3, 1, "", "uid"]], "pyslam.capture.Sensor": [[1, 4, 1, "", "__internalCaptureLoop"], [1, 4, 1, "", "getMeasurement"], [1, 4, 1, "", "leaveActive"], [1, 4, 1, "", "makeActive"], [1, 4, 1, "", "startCaptureLoop"], [1, 4, 1, "", "stopCaptureLoop"]], "pyslam.common_capture": [[2, 0, 0, "-", "UncalibratedMonocularCamera"]], "pyslam.common_capture.UncalibratedMonocularCamera": [[2, 2, 1, "", "MonocularUncalibratedCameraMeasurement"], [2, 2, 1, "", "MonocularUncalibratedFileCamera"]], "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera": [[2, 4, 1, "", "getMeasurement"], [2, 4, 1, "", "leaveActive"], [2, 4, 1, "", "makeActive"]], "pyslam.demos": [[5, 0, 0, "-", "monocular_capture"], [6, 0, 0, "-", "monocular_features"]], "pyslam.demos.monocular_capture": [[5, 5, 1, "", "run"]], "pyslam.demos.monocular_features": [[6, 5, 1, "", "run"]], "pyslam.epipolar_models": [[11, 1, 1, "", "EpipolarModel"], [7, 0, 0, "-", "EpipolarModelCore"], [8, 0, 0, "-", "Fundamental"], [11, 2, 1, "", "FundamentalMatrix"], [9, 0, 0, "-", "HomographyErrors"], [11, 2, 1, "", "HomographyMatrix"], [10, 0, 0, "-", "Homograpy"]], "pyslam.epipolar_models.EpipolarModelCore": [[7, 5, 1, "", "triangulatePoint"]], "pyslam.epipolar_models.Fundamental": [[8, 2, 1, "", "FundamentalError"], [8, 2, 1, "", "FundamentalMatrix"], [8, 2, 1, "", "FundamentalSymetricTransferError"]], "pyslam.epipolar_models.Fundamental.FundamentalError": [[8, 4, 1, "", "computeError"]], "pyslam.epipolar_models.Fundamental.FundamentalMatrix": [[8, 4, 1, "", "findInlierIndices"], [8, 4, 1, "", "fit"], [8, 4, 1, "", "getFirstEpipole"], [8, 4, 1, "", "getSecondEpipole"], [8, 4, 1, "", "getTransform"]], "pyslam.epipolar_models.Fundamental.FundamentalSymetricTransferError": [[8, 4, 1, "", "computeError"]], "pyslam.epipolar_models.FundamentalMatrix": [[11, 4, 1, "", "findInlierIndices"], [11, 4, 1, "", "fit"], [11, 4, 1, "", "getFirstEpipole"], [11, 4, 1, "", "getSecondEpipole"], [11, 4, 1, "", "getTransform"]], "pyslam.epipolar_models.HomographyErrors": [[9, 2, 1, "", "HomographyError"], [9, 2, 1, "", "HomographySymetricTransferError"]], "pyslam.epipolar_models.HomographyMatrix": [[11, 4, 1, "", "findInlierIndices"], [11, 4, 1, "", "fit"]], "pyslam.epipolar_models.Homograpy": [[10, 2, 1, "", "HomographyMatrix"]], "pyslam.epipolar_models.Homograpy.HomographyMatrix": [[10, 4, 1, "", "findInlierIndices"], [10, 4, 1, "", "fit"]], "pyslam.image_processing": [[12, 0, 0, "-", "cv_pillow"], [24, 0, 0, "-", "feature_descriptors"]], "pyslam.image_processing.cv_pillow": [[12, 2, 1, "", "PillowColorFormat"], [12, 5, 1, "", "arrayToPillowImage"], [12, 5, 1, "", "pillowToArray"]], "pyslam.image_processing.cv_pillow.PillowColorFormat": [[12, 6, 1, "", "L"], [12, 6, 1, "", "RGB"]], "pyslam.image_processing.feature_descriptors": [[13, 0, 0, "-", "Descriptor"], [14, 0, 0, "-", "ImageFeatures"], [15, 0, 0, "-", "ImagePairFeatureMatches"], [16, 0, 0, "-", "Keypoint"], [18, 0, 0, "-", "descriptors"], [23, 0, 0, "-", "extractors"]], "pyslam.image_processing.feature_descriptors.Descriptor": [[13, 2, 1, "", "Descriptor"]], "pyslam.image_processing.feature_descriptors.Descriptor.Descriptor": [[13, 4, 1, "", "computeDistance"]], "pyslam.image_processing.feature_descriptors.ImageFeatures": [[14, 2, 1, "", "ImageFeatures"], [14, 1, 1, "", "T"], [14, 5, 1, "", "normalizeKeypointMatrix"]], "pyslam.image_processing.feature_descriptors.ImageFeatures.ImageFeatures": [[14, 4, 1, "", "buildNormalizedKeypoints"]], "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches": [[15, 2, 1, "", "ImagePairMatches"], [15, 2, 1, "", "Match"]], "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches.ImagePairMatches": [[15, 4, 1, "", "computeMatches"]], "pyslam.image_processing.feature_descriptors.Keypoint": [[16, 2, 1, "", "Keypoint"]], "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint": [[16, 4, 1, "", "asHeterogenous"], [16, 4, 1, "", "asHomogenous"], [16, 3, 1, "", "coords"], [16, 4, 1, "", "makeHeterogenous"], [16, 4, 1, "", "makeHomogenous"]], "pyslam.image_processing.feature_descriptors.descriptors": [[17, 0, 0, "-", "ORB"]], "pyslam.image_processing.feature_descriptors.descriptors.ORB": [[17, 2, 1, "", "ORB"]], "pyslam.image_processing.feature_descriptors.descriptors.ORB.ORB": [[17, 4, 1, "", "computeDistance"]], "pyslam.image_processing.feature_descriptors.extractors": [[19, 0, 0, "-", "DescriptorExtractor"], [20, 0, 0, "-", "KeypointExtractor"], [21, 0, 0, "-", "end2end"]], "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor": [[19, 2, 1, "", "DescriptorExtractor"], [19, 1, 1, "", "T"]], "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor.DescriptorExtractor": [[19, 4, 1, "", "getDescriptors"]], "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor": [[20, 2, 1, "", "KeypointExtractor"]], "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor.KeypointExtractor": [[20, 4, 1, "", "getKeypoints"]], "pyslam.image_processing.feature_descriptors.extractors.end2end": [[22, 0, 0, "-", "orb_detect_and_compute"]], "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute": [[22, 2, 1, "", "ORB_Detect_And_Compute"]], "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute": [[22, 4, 1, "", "__compute"], [22, 4, 1, "", "getDescriptors"], [22, 4, 1, "", "getKeypoints"]], "pyslam.odometry": [[27, 2, 1, "", "PoseTransformSource"]], "pyslam.odometry.PoseTransformSource": [[27, 4, 1, "", "getTransform"]], "pyslam.optim": [[30, 0, 0, "-", "procedures"], [34, 0, 0, "-", "ransac"]], "pyslam.optim.procedures": [[29, 0, 0, "-", "HomogenousMatrixLeastSquares"], [30, 5, 1, "", "homogenousMatrixLeastSquares"]], "pyslam.optim.procedures.HomogenousMatrixLeastSquares": [[29, 5, 1, "", "homogenousMatrixLeastSquares"]], "pyslam.optim.ransac": [[34, 2, 1, "", "RANSACDataset"], [31, 0, 0, "-", "RANSACDataset"], [34, 2, 1, "", "RANSACEstimator"], [32, 0, 0, "-", "RANSACEstimator"], [34, 2, 1, "", "RANSACModel"], [33, 0, 0, "-", "RANSACModel"]], "pyslam.optim.ransac.RANSACDataset": [[31, 2, 1, "", "RANSACDataset"], [31, 1, 1, "", "T"], [34, 4, 1, "", "__len__"], [34, 4, 1, "", "getRandomSubsample"], [34, 4, 1, "", "getSubsample"]], "pyslam.optim.ransac.RANSACDataset.RANSACDataset": [[31, 4, 1, "", "__len__"], [31, 4, 1, "", "getRandomSubsample"], [31, 4, 1, "", "getSubsample"]], "pyslam.optim.ransac.RANSACEstimator": [[32, 1, 1, "", "D"], [32, 2, 1, "", "RANSACEstimator"], [34, 4, 1, "", "fit"], [32, 5, 1, "", "getModelAndInliers"]], "pyslam.optim.ransac.RANSACEstimator.RANSACEstimator": [[32, 4, 1, "", "fit"]], "pyslam.optim.ransac.RANSACModel": [[33, 2, 1, "", "RANSACModel"], [33, 1, 1, "", "T"], [34, 4, 1, "", "findInlierIndices"], [34, 4, 1, "", "fit"]], "pyslam.optim.ransac.RANSACModel.RANSACModel": [[33, 4, 1, "", "findInlierIndices"], [33, 4, 1, "", "fit"]], "pyslam.pubsub": [[35, 1, 1, "", "INCOMING_T"], [35, 2, 1, "", "MessageQueue"], [35, 1, 1, "", "OUTGOING_T"], [35, 2, 1, "", "Publisher"]], "pyslam.pubsub.MessageQueue": [[35, 4, 1, "", "listen"], [35, 4, 1, "", "publish"]], "pyslam.pubsub.Publisher": [[35, 4, 1, "", "publish"], [35, 4, 1, "", "subscribe"]], "pyslam.uid": [[37, 2, 1, "", "UID"]], "pyslam.uid.UID": [[37, 4, 1, "", "generateUID"], [37, 3, 1, "", "uid"]], "pyslam.visualize": [[38, 0, 0, "-", "DrawFeatures"], [39, 0, 0, "-", "DrawMatches"], [40, 0, 0, "-", "DrawScene"], [41, 0, 0, "-", "PyGameFrameWindow"]], "pyslam.visualize.DrawFeatures": [[38, 5, 1, "", "drawFeatures"]], "pyslam.visualize.DrawMatches": [[39, 5, 1, "", "drawStereoMatches"]], "pyslam.visualize.DrawScene": [[40, 2, 1, "", "PangolinScene"]], "pyslam.visualize.PyGameFrameWindow": [[41, 2, 1, "", "PyGameFrameWindow"]], "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow": [[41, 4, 1, "", "__captureLoop"], [41, 4, 1, "", "startListenLoop"], [41, 4, 1, "", "stopListenLoop"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 43, "pyslam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "": 43, "document": 43, "indic": 43, "tabl": 43, "ur": [], "mom": [], "main": [], "py": [], "api": 0, "refer": 0, "captur": 1, "modul": [1, 2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 27, 29, 31, 32, 33, 35, 37, 38, 39, 40, 41], "content": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43], "class": [1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 27, 31, 32, 33, 34, 35, 37, 40, 41], "capturegroup": [], "capturemanag": [], "rawsensor": [], "sensorwrapp": [], "submodul": [3, 4, 11, 18, 21, 23, 24, 25, 26, 30, 34, 42], "packag": [11, 30, 34], "image_process": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "imag": [], "imagefeatur": 14, "normalizedimagefeatur": [], "subpackag": [23, 24, 25, 26, 28], "stereo": [], "stereodescriptormatch": [], "function": [5, 6, 7, 12, 14, 29, 30, 32, 38, 39], "odometri": 27, "motionhypothesissourc": [], "visual_odometri": [], "homographymatrix": [], "optim": [28, 29, 30, 31, 32, 33, 34], "procedur": [29, 30], "homogenousmatrixleastsquar": 29, "ransac": [31, 32, 33, 34], "ransacdataset": 31, "attribut": [1, 11, 14, 19, 31, 32, 33, 35], "ransacmodel": 33, "sensor": [], "monocularuncalibratedcameracaptur": [], "uncalibratedfilecamerarawsensor": [], "system": 36, "uid": 37, "ransacestim": 32, "capture_new": [], "capture_old": [], "measur": [], "observ": [], "publish": [], "pubsub": 35, "messagequeu": [], "posetransformsourc": [], "common": [], "monocular_uncalibrated_camera": [], "monocularuncalibratedcamerameasur": [], "monocularuncalibratedfilecamera": [], "measurementsourc": [], "demo": [4, 5, 6], "monocular_captur": 5, "feature_descriptor": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "descriptor": [13, 17, 18], "keypoint": 16, "extractor": [19, 20, 21, 22, 23], "descriptorextractionschem": [], "orb": 17, "keypointextractionschem": [], "orb_detect_and_comput": 22, "cv_pillow": 12, "descriptorextractor": 19, "keypointextractor": 20, "visual": [38, 39, 40, 41, 42], "pygameframewindow": 41, "end2end": [21, 22], "monocular_featur": 6, "drawfeatur": 38, "imagepairfeaturematch": 15, "epipolar_model": [7, 8, 9, 10, 11], "error": [], "homographyerror": 9, "common_captur": [2, 3], "uncalibratedmonocularcamera": 2, "epipolarmodelcor": 7, "fundament": 8, "homograpi": 10, "drawmatch": 39, "drawscen": 40}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to PySLAM\u2019s documentation!": [[43, "welcome-to-pyslam-s-documentation"]], "Contents:": [[43, null]], "Indices and tables": [[43, "indices-and-tables"]], "API Reference": [[0, "api-reference"]], "pyslam.capture": [[1, "module-pyslam.capture"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [19, "module-contents"], [20, "module-contents"], [22, "module-contents"], [27, "module-contents"], [29, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"]], "Classes": [[1, "classes"], [2, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [19, "classes"], [20, "classes"], [22, "classes"], [27, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [37, "classes"], [40, "classes"], [41, "classes"]], "Attributes": [[1, "attributes"], [11, "attributes"], [14, "attributes"], [19, "attributes"], [31, "attributes"], [32, "attributes"], [33, "attributes"], [35, "attributes"]], "pyslam.common_capture.UncalibratedMonocularCamera": [[2, "module-pyslam.common_capture.UncalibratedMonocularCamera"]], "pyslam.common_capture": [[3, "module-pyslam.common_capture"]], "Submodules": [[3, "submodules"], [4, "submodules"], [11, "submodules"], [18, "submodules"], [21, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [30, "submodules"], [34, "submodules"], [42, "submodules"]], "pyslam.demos": [[4, "module-pyslam.demos"]], "pyslam.demos.monocular_capture": [[5, "module-pyslam.demos.monocular_capture"]], "Functions": [[5, "functions"], [6, "functions"], [7, "functions"], [12, "functions"], [14, "functions"], [29, "functions"], [30, "functions"], [32, "functions"], [38, "functions"], [39, "functions"]], "pyslam.demos.monocular_features": [[6, "module-pyslam.demos.monocular_features"]], "pyslam.epipolar_models.EpipolarModelCore": [[7, "module-pyslam.epipolar_models.EpipolarModelCore"]], "pyslam.epipolar_models.Fundamental": [[8, "module-pyslam.epipolar_models.Fundamental"]], "pyslam.epipolar_models.HomographyErrors": [[9, "module-pyslam.epipolar_models.HomographyErrors"]], "pyslam.epipolar_models.Homograpy": [[10, "module-pyslam.epipolar_models.Homograpy"]], "pyslam.epipolar_models": [[11, "module-pyslam.epipolar_models"]], "Package Contents": [[11, "package-contents"], [30, "package-contents"], [34, "package-contents"]], "pyslam.image_processing.cv_pillow": [[12, "module-pyslam.image_processing.cv_pillow"]], "pyslam.image_processing.feature_descriptors.Descriptor": [[13, "module-pyslam.image_processing.feature_descriptors.Descriptor"]], "pyslam.image_processing.feature_descriptors.ImageFeatures": [[14, "module-pyslam.image_processing.feature_descriptors.ImageFeatures"]], "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches": [[15, "module-pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches"]], "pyslam.image_processing.feature_descriptors.Keypoint": [[16, "module-pyslam.image_processing.feature_descriptors.Keypoint"]], "pyslam.image_processing.feature_descriptors.descriptors.ORB": [[17, "module-pyslam.image_processing.feature_descriptors.descriptors.ORB"]], "pyslam.image_processing.feature_descriptors.descriptors": [[18, "module-pyslam.image_processing.feature_descriptors.descriptors"]], "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor": [[19, "module-pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor"]], "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor": [[20, "module-pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor"]], "pyslam.image_processing.feature_descriptors.extractors.end2end": [[21, "module-pyslam.image_processing.feature_descriptors.extractors.end2end"]], "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute": [[22, "module-pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute"]], "pyslam.image_processing.feature_descriptors.extractors": [[23, "module-pyslam.image_processing.feature_descriptors.extractors"]], "Subpackages": [[23, "subpackages"], [24, "subpackages"], [25, "subpackages"], [26, "subpackages"], [28, "subpackages"]], "pyslam.image_processing.feature_descriptors": [[24, "module-pyslam.image_processing.feature_descriptors"]], "pyslam.image_processing": [[25, "module-pyslam.image_processing"]], "pyslam": [[26, "module-pyslam"]], "pyslam.odometry": [[27, "module-pyslam.odometry"]], "pyslam.optim": [[28, "module-pyslam.optim"]], "pyslam.optim.procedures.HomogenousMatrixLeastSquares": [[29, "module-pyslam.optim.procedures.HomogenousMatrixLeastSquares"]], "pyslam.optim.procedures": [[30, "module-pyslam.optim.procedures"]], "pyslam.optim.ransac.RANSACDataset": [[31, "module-pyslam.optim.ransac.RANSACDataset"]], "pyslam.optim.ransac.RANSACEstimator": [[32, "module-pyslam.optim.ransac.RANSACEstimator"]], "pyslam.optim.ransac.RANSACModel": [[33, "module-pyslam.optim.ransac.RANSACModel"]], "pyslam.optim.ransac": [[34, "module-pyslam.optim.ransac"]], "pyslam.pubsub": [[35, "module-pyslam.pubsub"]], "pyslam.systems": [[36, "module-pyslam.systems"]], "pyslam.uid": [[37, "module-pyslam.uid"]], "pyslam.visualize.DrawFeatures": [[38, "module-pyslam.visualize.DrawFeatures"]], "pyslam.visualize.DrawMatches": [[39, "module-pyslam.visualize.DrawMatches"]], "pyslam.visualize.DrawScene": [[40, "module-pyslam.visualize.DrawScene"]], "pyslam.visualize.PyGameFrameWindow": [[41, "module-pyslam.visualize.PyGameFrameWindow"]], "pyslam.visualize": [[42, "module-pyslam.visualize"]]}, "indexentries": {"global_lookup (in module pyslam.capture)": [[1, "pyslam.capture.GLOBAL_LOOKUP"]], "measurement (class in pyslam.capture)": [[1, "pyslam.capture.Measurement"]], "measurementsource (class in pyslam.capture)": [[1, "pyslam.capture.MeasurementSource"]], "sensor (class in pyslam.capture)": [[1, "pyslam.capture.Sensor"]], "t (in module pyslam.capture)": [[1, "pyslam.capture.T"]], "__internalcaptureloop() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.__internalCaptureLoop"]], "getmeasurement() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.getMeasurement"]], "leaveactive() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.leaveActive"]], "makeactive() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.makeActive"]], "module": [[1, "module-pyslam.capture"], [2, "module-pyslam.common_capture.UncalibratedMonocularCamera"], [3, "module-pyslam.common_capture"], [4, "module-pyslam.demos"], [5, "module-pyslam.demos.monocular_capture"], [6, "module-pyslam.demos.monocular_features"], [7, "module-pyslam.epipolar_models.EpipolarModelCore"], [8, "module-pyslam.epipolar_models.Fundamental"], [9, "module-pyslam.epipolar_models.HomographyErrors"], [10, "module-pyslam.epipolar_models.Homograpy"], [11, "module-pyslam.epipolar_models"], [12, "module-pyslam.image_processing.cv_pillow"], [13, "module-pyslam.image_processing.feature_descriptors.Descriptor"], [14, "module-pyslam.image_processing.feature_descriptors.ImageFeatures"], [15, "module-pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches"], [16, "module-pyslam.image_processing.feature_descriptors.Keypoint"], [17, "module-pyslam.image_processing.feature_descriptors.descriptors.ORB"], [18, "module-pyslam.image_processing.feature_descriptors.descriptors"], [19, "module-pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor"], [20, "module-pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor"], [21, "module-pyslam.image_processing.feature_descriptors.extractors.end2end"], [22, "module-pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute"], [23, "module-pyslam.image_processing.feature_descriptors.extractors"], [24, "module-pyslam.image_processing.feature_descriptors"], [25, "module-pyslam.image_processing"], [26, "module-pyslam"], [27, "module-pyslam.odometry"], [28, "module-pyslam.optim"], [29, "module-pyslam.optim.procedures.HomogenousMatrixLeastSquares"], [30, "module-pyslam.optim.procedures"], [31, "module-pyslam.optim.ransac.RANSACDataset"], [32, "module-pyslam.optim.ransac.RANSACEstimator"], [33, "module-pyslam.optim.ransac.RANSACModel"], [34, "module-pyslam.optim.ransac"], [35, "module-pyslam.pubsub"], [36, "module-pyslam.systems"], [37, "module-pyslam.uid"], [38, "module-pyslam.visualize.DrawFeatures"], [39, "module-pyslam.visualize.DrawMatches"], [40, "module-pyslam.visualize.DrawScene"], [41, "module-pyslam.visualize.PyGameFrameWindow"], [42, "module-pyslam.visualize"]], "pyslam.capture": [[1, "module-pyslam.capture"]], "sourceuid (pyslam.capture.measurement property)": [[1, "pyslam.capture.Measurement.sourceUID"]], "startcaptureloop() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.startCaptureLoop"]], "stopcaptureloop() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.stopCaptureLoop"]], "timestamp (pyslam.capture.measurement property)": [[1, "pyslam.capture.Measurement.timestamp"]], "uid (pyslam.capture.measurement property)": [[1, "pyslam.capture.Measurement.uid"]], "monocularuncalibratedcamerameasurement (class in pyslam.common_capture.uncalibratedmonocularcamera)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedCameraMeasurement"]], "monocularuncalibratedfilecamera (class in pyslam.common_capture.uncalibratedmonocularcamera)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera"]], "getmeasurement() (pyslam.common_capture.uncalibratedmonocularcamera.monocularuncalibratedfilecamera method)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera.getMeasurement"]], "leaveactive() (pyslam.common_capture.uncalibratedmonocularcamera.monocularuncalibratedfilecamera method)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera.leaveActive"]], "makeactive() (pyslam.common_capture.uncalibratedmonocularcamera.monocularuncalibratedfilecamera method)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera.makeActive"]], "pyslam.common_capture.uncalibratedmonocularcamera": [[2, "module-pyslam.common_capture.UncalibratedMonocularCamera"]], "pyslam.common_capture": [[3, "module-pyslam.common_capture"]], "pyslam.demos": [[4, "module-pyslam.demos"]], "pyslam.demos.monocular_capture": [[5, "module-pyslam.demos.monocular_capture"]], "run() (in module pyslam.demos.monocular_capture)": [[5, "pyslam.demos.monocular_capture.run"]], "pyslam.demos.monocular_features": [[6, "module-pyslam.demos.monocular_features"]], "run() (in module pyslam.demos.monocular_features)": [[6, "pyslam.demos.monocular_features.run"]], "pyslam.epipolar_models.epipolarmodelcore": [[7, "module-pyslam.epipolar_models.EpipolarModelCore"]], "triangulatepoint() (in module pyslam.epipolar_models.epipolarmodelcore)": [[7, "pyslam.epipolar_models.EpipolarModelCore.triangulatePoint"]], "fundamentalerror (class in pyslam.epipolar_models.fundamental)": [[8, "pyslam.epipolar_models.Fundamental.FundamentalError"]], "fundamentalmatrix (class in pyslam.epipolar_models.fundamental)": [[8, "pyslam.epipolar_models.Fundamental.FundamentalMatrix"]], "fundamentalsymetrictransfererror (class in pyslam.epipolar_models.fundamental)": [[8, "pyslam.epipolar_models.Fundamental.FundamentalSymetricTransferError"]], "computeerror() (pyslam.epipolar_models.fundamental.fundamentalerror static method)": [[8, "pyslam.epipolar_models.Fundamental.FundamentalError.computeError"]], "computeerror() (pyslam.epipolar_models.fundamental.fundamentalsymetrictransfererror static method)": [[8, "pyslam.epipolar_models.Fundamental.FundamentalSymetricTransferError.computeError"]], "findinlierindices() (pyslam.epipolar_models.fundamental.fundamentalmatrix method)": [[8, "pyslam.epipolar_models.Fundamental.FundamentalMatrix.findInlierIndices"]], "fit() (pyslam.epipolar_models.fundamental.fundamentalmatrix method)": [[8, "pyslam.epipolar_models.Fundamental.FundamentalMatrix.fit"]], "getfirstepipole() (pyslam.epipolar_models.fundamental.fundamentalmatrix method)": [[8, "pyslam.epipolar_models.Fundamental.FundamentalMatrix.getFirstEpipole"]], "getsecondepipole() (pyslam.epipolar_models.fundamental.fundamentalmatrix method)": [[8, "pyslam.epipolar_models.Fundamental.FundamentalMatrix.getSecondEpipole"]], "gettransform() (pyslam.epipolar_models.fundamental.fundamentalmatrix method)": [[8, "pyslam.epipolar_models.Fundamental.FundamentalMatrix.getTransform"]], "pyslam.epipolar_models.fundamental": [[8, "module-pyslam.epipolar_models.Fundamental"]], "homographyerror (class in pyslam.epipolar_models.homographyerrors)": [[9, "pyslam.epipolar_models.HomographyErrors.HomographyError"]], "homographysymetrictransfererror (class in pyslam.epipolar_models.homographyerrors)": [[9, "pyslam.epipolar_models.HomographyErrors.HomographySymetricTransferError"]], "pyslam.epipolar_models.homographyerrors": [[9, "module-pyslam.epipolar_models.HomographyErrors"]], "homographymatrix (class in pyslam.epipolar_models.homograpy)": [[10, "pyslam.epipolar_models.Homograpy.HomographyMatrix"]], "findinlierindices() (pyslam.epipolar_models.homograpy.homographymatrix method)": [[10, "pyslam.epipolar_models.Homograpy.HomographyMatrix.findInlierIndices"]], "fit() (pyslam.epipolar_models.homograpy.homographymatrix method)": [[10, "pyslam.epipolar_models.Homograpy.HomographyMatrix.fit"]], "pyslam.epipolar_models.homograpy": [[10, "module-pyslam.epipolar_models.Homograpy"]], "epipolarmodel (in module pyslam.epipolar_models)": [[11, "pyslam.epipolar_models.EpipolarModel"]], "fundamentalmatrix (class in pyslam.epipolar_models)": [[11, "pyslam.epipolar_models.FundamentalMatrix"]], "homographymatrix (class in pyslam.epipolar_models)": [[11, "pyslam.epipolar_models.HomographyMatrix"]], "findinlierindices() (pyslam.epipolar_models.fundamentalmatrix method)": [[11, "pyslam.epipolar_models.FundamentalMatrix.findInlierIndices"]], "findinlierindices() (pyslam.epipolar_models.homographymatrix method)": [[11, "pyslam.epipolar_models.HomographyMatrix.findInlierIndices"]], "fit() (pyslam.epipolar_models.fundamentalmatrix method)": [[11, "pyslam.epipolar_models.FundamentalMatrix.fit"]], "fit() (pyslam.epipolar_models.homographymatrix method)": [[11, "pyslam.epipolar_models.HomographyMatrix.fit"]], "getfirstepipole() (pyslam.epipolar_models.fundamentalmatrix method)": [[11, "pyslam.epipolar_models.FundamentalMatrix.getFirstEpipole"]], "getsecondepipole() (pyslam.epipolar_models.fundamentalmatrix method)": [[11, "pyslam.epipolar_models.FundamentalMatrix.getSecondEpipole"]], "gettransform() (pyslam.epipolar_models.fundamentalmatrix method)": [[11, "pyslam.epipolar_models.FundamentalMatrix.getTransform"]], "pyslam.epipolar_models": [[11, "module-pyslam.epipolar_models"]], "l (pyslam.image_processing.cv_pillow.pillowcolorformat attribute)": [[12, "pyslam.image_processing.cv_pillow.PillowColorFormat.L"]], "pillowcolorformat (class in pyslam.image_processing.cv_pillow)": [[12, "pyslam.image_processing.cv_pillow.PillowColorFormat"]], "rgb (pyslam.image_processing.cv_pillow.pillowcolorformat attribute)": [[12, "pyslam.image_processing.cv_pillow.PillowColorFormat.RGB"]], "arraytopillowimage() (in module pyslam.image_processing.cv_pillow)": [[12, "pyslam.image_processing.cv_pillow.arrayToPillowImage"]], "pillowtoarray() (in module pyslam.image_processing.cv_pillow)": [[12, "pyslam.image_processing.cv_pillow.pillowToArray"]], "pyslam.image_processing.cv_pillow": [[12, "module-pyslam.image_processing.cv_pillow"]], "descriptor (class in pyslam.image_processing.feature_descriptors.descriptor)": [[13, "pyslam.image_processing.feature_descriptors.Descriptor.Descriptor"]], "computedistance() (pyslam.image_processing.feature_descriptors.descriptor.descriptor method)": [[13, "pyslam.image_processing.feature_descriptors.Descriptor.Descriptor.computeDistance"]], "pyslam.image_processing.feature_descriptors.descriptor": [[13, "module-pyslam.image_processing.feature_descriptors.Descriptor"]], "imagefeatures (class in pyslam.image_processing.feature_descriptors.imagefeatures)": [[14, "pyslam.image_processing.feature_descriptors.ImageFeatures.ImageFeatures"]], "t (in module pyslam.image_processing.feature_descriptors.imagefeatures)": [[14, "pyslam.image_processing.feature_descriptors.ImageFeatures.T"]], "buildnormalizedkeypoints() (pyslam.image_processing.feature_descriptors.imagefeatures.imagefeatures method)": [[14, "pyslam.image_processing.feature_descriptors.ImageFeatures.ImageFeatures.buildNormalizedKeypoints"]], "normalizekeypointmatrix() (in module pyslam.image_processing.feature_descriptors.imagefeatures)": [[14, "pyslam.image_processing.feature_descriptors.ImageFeatures.normalizeKeypointMatrix"]], "pyslam.image_processing.feature_descriptors.imagefeatures": [[14, "module-pyslam.image_processing.feature_descriptors.ImageFeatures"]], "imagepairmatches (class in pyslam.image_processing.feature_descriptors.imagepairfeaturematches)": [[15, "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches.ImagePairMatches"]], "match (class in pyslam.image_processing.feature_descriptors.imagepairfeaturematches)": [[15, "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches.Match"]], "computematches() (pyslam.image_processing.feature_descriptors.imagepairfeaturematches.imagepairmatches method)": [[15, "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches.ImagePairMatches.computeMatches"]], "pyslam.image_processing.feature_descriptors.imagepairfeaturematches": [[15, "module-pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches"]], "keypoint (class in pyslam.image_processing.feature_descriptors.keypoint)": [[16, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint"]], "asheterogenous() (pyslam.image_processing.feature_descriptors.keypoint.keypoint method)": [[16, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.asHeterogenous"]], "ashomogenous() (pyslam.image_processing.feature_descriptors.keypoint.keypoint method)": [[16, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.asHomogenous"]], "coords (pyslam.image_processing.feature_descriptors.keypoint.keypoint property)": [[16, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.coords"]], "makeheterogenous() (pyslam.image_processing.feature_descriptors.keypoint.keypoint method)": [[16, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.makeHeterogenous"]], "makehomogenous() (pyslam.image_processing.feature_descriptors.keypoint.keypoint method)": [[16, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.makeHomogenous"]], "pyslam.image_processing.feature_descriptors.keypoint": [[16, "module-pyslam.image_processing.feature_descriptors.Keypoint"]], "orb (class in pyslam.image_processing.feature_descriptors.descriptors.orb)": [[17, "pyslam.image_processing.feature_descriptors.descriptors.ORB.ORB"]], "computedistance() (pyslam.image_processing.feature_descriptors.descriptors.orb.orb method)": [[17, "pyslam.image_processing.feature_descriptors.descriptors.ORB.ORB.computeDistance"]], "pyslam.image_processing.feature_descriptors.descriptors.orb": [[17, "module-pyslam.image_processing.feature_descriptors.descriptors.ORB"]], "pyslam.image_processing.feature_descriptors.descriptors": [[18, "module-pyslam.image_processing.feature_descriptors.descriptors"]], "descriptorextractor (class in pyslam.image_processing.feature_descriptors.extractors.descriptorextractor)": [[19, "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor.DescriptorExtractor"]], "t (in module pyslam.image_processing.feature_descriptors.extractors.descriptorextractor)": [[19, "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor.T"]], "getdescriptors() (pyslam.image_processing.feature_descriptors.extractors.descriptorextractor.descriptorextractor method)": [[19, "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor.DescriptorExtractor.getDescriptors"]], "pyslam.image_processing.feature_descriptors.extractors.descriptorextractor": [[19, "module-pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor"]], "keypointextractor (class in pyslam.image_processing.feature_descriptors.extractors.keypointextractor)": [[20, "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor.KeypointExtractor"]], "getkeypoints() (pyslam.image_processing.feature_descriptors.extractors.keypointextractor.keypointextractor method)": [[20, "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor.KeypointExtractor.getKeypoints"]], "pyslam.image_processing.feature_descriptors.extractors.keypointextractor": [[20, "module-pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor"]], "pyslam.image_processing.feature_descriptors.extractors.end2end": [[21, "module-pyslam.image_processing.feature_descriptors.extractors.end2end"]], "orb_detect_and_compute (class in pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute)": [[22, "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute"]], "__compute() (pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.orb_detect_and_compute method)": [[22, "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute.__compute"]], "getdescriptors() (pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.orb_detect_and_compute method)": [[22, "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute.getDescriptors"]], "getkeypoints() (pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.orb_detect_and_compute method)": [[22, "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute.getKeypoints"]], "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute": [[22, "module-pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute"]], "pyslam.image_processing.feature_descriptors.extractors": [[23, "module-pyslam.image_processing.feature_descriptors.extractors"]], "pyslam.image_processing.feature_descriptors": [[24, "module-pyslam.image_processing.feature_descriptors"]], "pyslam.image_processing": [[25, "module-pyslam.image_processing"]], "pyslam": [[26, "module-pyslam"]], "posetransformsource (class in pyslam.odometry)": [[27, "pyslam.odometry.PoseTransformSource"]], "gettransform() (pyslam.odometry.posetransformsource method)": [[27, "pyslam.odometry.PoseTransformSource.getTransform"]], "pyslam.odometry": [[27, "module-pyslam.odometry"]], "pyslam.optim": [[28, "module-pyslam.optim"]], "homogenousmatrixleastsquares() (in module pyslam.optim.procedures.homogenousmatrixleastsquares)": [[29, "pyslam.optim.procedures.HomogenousMatrixLeastSquares.homogenousMatrixLeastSquares"]], "pyslam.optim.procedures.homogenousmatrixleastsquares": [[29, "module-pyslam.optim.procedures.HomogenousMatrixLeastSquares"]], "homogenousmatrixleastsquares() (in module pyslam.optim.procedures)": [[30, "pyslam.optim.procedures.homogenousMatrixLeastSquares"]], "pyslam.optim.procedures": [[30, "module-pyslam.optim.procedures"]], "ransacdataset (class in pyslam.optim.ransac.ransacdataset)": [[31, "pyslam.optim.ransac.RANSACDataset.RANSACDataset"]], "t (in module pyslam.optim.ransac.ransacdataset)": [[31, "pyslam.optim.ransac.RANSACDataset.T"]], "__len__() (pyslam.optim.ransac.ransacdataset.ransacdataset method)": [[31, "pyslam.optim.ransac.RANSACDataset.RANSACDataset.__len__"]], "getrandomsubsample() (pyslam.optim.ransac.ransacdataset.ransacdataset method)": [[31, "pyslam.optim.ransac.RANSACDataset.RANSACDataset.getRandomSubsample"]], "getsubsample() (pyslam.optim.ransac.ransacdataset.ransacdataset method)": [[31, "pyslam.optim.ransac.RANSACDataset.RANSACDataset.getSubsample"]], "pyslam.optim.ransac.ransacdataset": [[31, "module-pyslam.optim.ransac.RANSACDataset"]], "d (in module pyslam.optim.ransac.ransacestimator)": [[32, "pyslam.optim.ransac.RANSACEstimator.D"]], "ransacestimator (class in pyslam.optim.ransac.ransacestimator)": [[32, "pyslam.optim.ransac.RANSACEstimator.RANSACEstimator"]], "fit() (pyslam.optim.ransac.ransacestimator.ransacestimator method)": [[32, "pyslam.optim.ransac.RANSACEstimator.RANSACEstimator.fit"]], "getmodelandinliers() (in module pyslam.optim.ransac.ransacestimator)": [[32, "pyslam.optim.ransac.RANSACEstimator.getModelAndInliers"]], "pyslam.optim.ransac.ransacestimator": [[32, "module-pyslam.optim.ransac.RANSACEstimator"]], "ransacmodel (class in pyslam.optim.ransac.ransacmodel)": [[33, "pyslam.optim.ransac.RANSACModel.RANSACModel"]], "t (in module pyslam.optim.ransac.ransacmodel)": [[33, "pyslam.optim.ransac.RANSACModel.T"]], "findinlierindices() (pyslam.optim.ransac.ransacmodel.ransacmodel method)": [[33, "pyslam.optim.ransac.RANSACModel.RANSACModel.findInlierIndices"]], "fit() (pyslam.optim.ransac.ransacmodel.ransacmodel method)": [[33, "pyslam.optim.ransac.RANSACModel.RANSACModel.fit"]], "pyslam.optim.ransac.ransacmodel": [[33, "module-pyslam.optim.ransac.RANSACModel"]], "ransacdataset (class in pyslam.optim.ransac)": [[34, "pyslam.optim.ransac.RANSACDataset"]], "ransacestimator (class in pyslam.optim.ransac)": [[34, "pyslam.optim.ransac.RANSACEstimator"]], "ransacmodel (class in pyslam.optim.ransac)": [[34, "pyslam.optim.ransac.RANSACModel"]], "__len__() (pyslam.optim.ransac.ransacdataset method)": [[34, "pyslam.optim.ransac.RANSACDataset.__len__"]], "findinlierindices() (pyslam.optim.ransac.ransacmodel method)": [[34, "pyslam.optim.ransac.RANSACModel.findInlierIndices"]], "fit() (pyslam.optim.ransac.ransacestimator method)": [[34, "pyslam.optim.ransac.RANSACEstimator.fit"]], "fit() (pyslam.optim.ransac.ransacmodel method)": [[34, "pyslam.optim.ransac.RANSACModel.fit"]], "getrandomsubsample() (pyslam.optim.ransac.ransacdataset method)": [[34, "pyslam.optim.ransac.RANSACDataset.getRandomSubsample"]], "getsubsample() (pyslam.optim.ransac.ransacdataset method)": [[34, "pyslam.optim.ransac.RANSACDataset.getSubsample"]], "pyslam.optim.ransac": [[34, "module-pyslam.optim.ransac"]], "incoming_t (in module pyslam.pubsub)": [[35, "pyslam.pubsub.INCOMING_T"]], "messagequeue (class in pyslam.pubsub)": [[35, "pyslam.pubsub.MessageQueue"]], "outgoing_t (in module pyslam.pubsub)": [[35, "pyslam.pubsub.OUTGOING_T"]], "publisher (class in pyslam.pubsub)": [[35, "pyslam.pubsub.Publisher"]], "listen() (pyslam.pubsub.messagequeue method)": [[35, "pyslam.pubsub.MessageQueue.listen"]], "publish() (pyslam.pubsub.messagequeue method)": [[35, "pyslam.pubsub.MessageQueue.publish"]], "publish() (pyslam.pubsub.publisher method)": [[35, "pyslam.pubsub.Publisher.publish"]], "pyslam.pubsub": [[35, "module-pyslam.pubsub"]], "subscribe() (pyslam.pubsub.publisher method)": [[35, "pyslam.pubsub.Publisher.subscribe"]], "pyslam.systems": [[36, "module-pyslam.systems"]], "uid (class in pyslam.uid)": [[37, "pyslam.uid.UID"]], "generateuid() (pyslam.uid.uid static method)": [[37, "pyslam.uid.UID.generateUID"]], "pyslam.uid": [[37, "module-pyslam.uid"]], "uid (pyslam.uid.uid property)": [[37, "pyslam.uid.UID.uid"]], "drawfeatures() (in module pyslam.visualize.drawfeatures)": [[38, "pyslam.visualize.DrawFeatures.drawFeatures"]], "pyslam.visualize.drawfeatures": [[38, "module-pyslam.visualize.DrawFeatures"]], "drawstereomatches() (in module pyslam.visualize.drawmatches)": [[39, "pyslam.visualize.DrawMatches.drawStereoMatches"]], "pyslam.visualize.drawmatches": [[39, "module-pyslam.visualize.DrawMatches"]], "pangolinscene (class in pyslam.visualize.drawscene)": [[40, "pyslam.visualize.DrawScene.PangolinScene"]], "pyslam.visualize.drawscene": [[40, "module-pyslam.visualize.DrawScene"]], "pygameframewindow (class in pyslam.visualize.pygameframewindow)": [[41, "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow"]], "__captureloop() (pyslam.visualize.pygameframewindow.pygameframewindow method)": [[41, "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow.__captureLoop"]], "pyslam.visualize.pygameframewindow": [[41, "module-pyslam.visualize.PyGameFrameWindow"]], "startlistenloop() (pyslam.visualize.pygameframewindow.pygameframewindow method)": [[41, "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow.startListenLoop"]], "stoplistenloop() (pyslam.visualize.pygameframewindow.pygameframewindow method)": [[41, "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow.stopListenLoop"]], "pyslam.visualize": [[42, "module-pyslam.visualize"]]}})