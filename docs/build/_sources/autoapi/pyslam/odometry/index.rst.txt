:py:mod:`pyslam.odometry`
=========================

.. py:module:: pyslam.odometry

.. autoapi-nested-parse::

   Odometry is defined as the use of data
   from various kinds of sensors, such as IMUs,
   cameras and LiDar point clouds, to estimate
   relative motion between 2 poses over time.
   As such, all logic relevant to odometry is
   stored in this module.

   When we say "Pose", we are concerned with the robot/
   sensor's position and orientation w.r.t some coordinate
   frame with a defined origin. We are usually interested
   in the 3D case, but this module also allows use in 2D
   SLAM problems.



Subpackages
-----------
.. toctree::
   :titlesonly:
   :maxdepth: 3

   visual_odometry/index.rst


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   PoseTransformSource/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   pyslam.odometry.PoseTransformSource




.. py:class:: PoseTransformSource

   Bases: :py:obj:`abc.ABC`

   This is an abstract base class that is sub-classed
   by any class that can return an estimation of pose
   transformation; with visual odometry these could be
   Fundamental and Homography matrices, and in the case
   of VIO this could be an instance of IMU preintegration

   .. py:method:: getTransform() -> pose3d.Transform
      :abstractmethod:

      Returns the pose transformation
      corresponding to this object.



