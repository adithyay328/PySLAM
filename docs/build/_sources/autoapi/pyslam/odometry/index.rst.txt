:py:mod:`pyslam.odometry`
=========================

.. py:module:: pyslam.odometry

.. autoapi-nested-parse::

   This module defines base types related to odometry.
   Mainly, it defines an abstract base class,
   PoseTransformSource, which is to be sub-classed by
   any type that allows us to extract relative poses
   between 2 timesteps.

   A simple example would be a Fundamental Matrix;
   once we have a fundamental matrix, we can do
   pose estimation, using the four possible solutions
   for the poses to extract a single, correct
   relative pose.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pyslam.odometry.PoseTransformSource




.. py:class:: PoseTransformSource

   Bases: :py:obj:`abc.ABC`

   This is an abstract base class that is sub-classed
   by any class that can return an estimation of pose
   transformation; with visual odometry these could be
   Fundamental and Homography matrices, and in the case
   of VIO this could be an instance of IMU preintegration

   .. py:method:: getTransform() -> pose3d.Transform
      :abstractmethod:

      Returns the pose transformation
      corresponding to this object.



