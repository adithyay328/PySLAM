Search.setIndex({"docnames": ["autoapi/index", "autoapi/pyslam/capture/index", "autoapi/pyslam/common_capture/UncalibratedMonocularCamera/index", "autoapi/pyslam/common_capture/index", "autoapi/pyslam/demos/index", "autoapi/pyslam/demos/monocular_capture/index", "autoapi/pyslam/demos/monocular_features/index", "autoapi/pyslam/image_processing/cv_pillow/index", "autoapi/pyslam/image_processing/feature_descriptors/Descriptor/index", "autoapi/pyslam/image_processing/feature_descriptors/ImageFeatures/index", "autoapi/pyslam/image_processing/feature_descriptors/ImagePairFeatureMatches/index", "autoapi/pyslam/image_processing/feature_descriptors/Keypoint/index", "autoapi/pyslam/image_processing/feature_descriptors/descriptors/ORB/index", "autoapi/pyslam/image_processing/feature_descriptors/descriptors/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/DescriptorExtractor/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/KeypointExtractor/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/end2end/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/end2end/orb_detect_and_compute/index", "autoapi/pyslam/image_processing/feature_descriptors/extractors/index", "autoapi/pyslam/image_processing/feature_descriptors/index", "autoapi/pyslam/image_processing/index", "autoapi/pyslam/index", "autoapi/pyslam/odometry/PoseTransformSource/index", "autoapi/pyslam/odometry/index", "autoapi/pyslam/odometry/visual_odometry/HomographyMatrix/index", "autoapi/pyslam/odometry/visual_odometry/index", "autoapi/pyslam/optim/index", "autoapi/pyslam/optim/procedures/HomogenousMatrixLeastSquares/index", "autoapi/pyslam/optim/procedures/index", "autoapi/pyslam/optim/ransac/RANSACDataset/index", "autoapi/pyslam/optim/ransac/RANSACEstimator/index", "autoapi/pyslam/optim/ransac/RANSACModel/index", "autoapi/pyslam/optim/ransac/index", "autoapi/pyslam/pubsub/index", "autoapi/pyslam/systems/index", "autoapi/pyslam/uid/index", "autoapi/pyslam/visualize/DrawFeatures/index", "autoapi/pyslam/visualize/DrawMatches/index", "autoapi/pyslam/visualize/PyGameFrameWindow/index", "autoapi/pyslam/visualize/index", "index"], "filenames": ["autoapi/index.rst", "autoapi/pyslam/capture/index.rst", "autoapi/pyslam/common_capture/UncalibratedMonocularCamera/index.rst", "autoapi/pyslam/common_capture/index.rst", "autoapi/pyslam/demos/index.rst", "autoapi/pyslam/demos/monocular_capture/index.rst", "autoapi/pyslam/demos/monocular_features/index.rst", "autoapi/pyslam/image_processing/cv_pillow/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/Descriptor/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/ImageFeatures/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/ImagePairFeatureMatches/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/Keypoint/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/descriptors/ORB/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/descriptors/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/DescriptorExtractor/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/KeypointExtractor/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/end2end/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/end2end/orb_detect_and_compute/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/extractors/index.rst", "autoapi/pyslam/image_processing/feature_descriptors/index.rst", "autoapi/pyslam/image_processing/index.rst", "autoapi/pyslam/index.rst", "autoapi/pyslam/odometry/PoseTransformSource/index.rst", "autoapi/pyslam/odometry/index.rst", "autoapi/pyslam/odometry/visual_odometry/HomographyMatrix/index.rst", "autoapi/pyslam/odometry/visual_odometry/index.rst", "autoapi/pyslam/optim/index.rst", "autoapi/pyslam/optim/procedures/HomogenousMatrixLeastSquares/index.rst", "autoapi/pyslam/optim/procedures/index.rst", "autoapi/pyslam/optim/ransac/RANSACDataset/index.rst", "autoapi/pyslam/optim/ransac/RANSACEstimator/index.rst", "autoapi/pyslam/optim/ransac/RANSACModel/index.rst", "autoapi/pyslam/optim/ransac/index.rst", "autoapi/pyslam/pubsub/index.rst", "autoapi/pyslam/systems/index.rst", "autoapi/pyslam/uid/index.rst", "autoapi/pyslam/visualize/DrawFeatures/index.rst", "autoapi/pyslam/visualize/DrawMatches/index.rst", "autoapi/pyslam/visualize/PyGameFrameWindow/index.rst", "autoapi/pyslam/visualize/index.rst", "index.md"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.capture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.common_capture.UncalibratedMonocularCamera</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.common_capture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.demos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.demos.monocular_capture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.demos.monocular_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.cv_pillow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.Descriptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.ImageFeatures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.Keypoint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.descriptors.ORB</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.descriptors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors.end2end</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing.feature_descriptors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.image_processing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.odometry.PoseTransformSource</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.odometry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.odometry.visual_odometry.HomographyMatrix</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.odometry.visual_odometry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.procedures.HomogenousMatrixLeastSquares</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.procedures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.ransac.RANSACDataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.ransac.RANSACEstimator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.ransac.RANSACModel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.optim.ransac</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.pubsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.systems</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.uid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.visualize.DrawFeatures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.visualize.DrawMatches</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.visualize.PyGameFrameWindow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyslam.visualize</span></code>", "Welcome to PySLAM!"], "terms": {"index": [10, 29, 32], "modul": [13, 18, 20, 23, 32, 39], "search": [], "page": 0, "The": [1, 2, 7, 8, 9, 10, 11, 12, 14, 15, 17, 29, 30, 31, 32, 33, 36, 37, 38, 39], "core": 1, "my": [], "exampl": [1, 2, 29, 32, 33], "project": 40, "class": 18, "exampleclass": [], "name": 2, "an": [1, 2, 4, 7, 8, 9, 11, 12, 14, 15, 17, 22, 23, 24, 29, 30, 31, 32, 33, 36, 37, 38], "docstr": [], "definit": [], "about_self": [], "return": [1, 2, 7, 9, 11, 14, 15, 17, 22, 23, 24, 29, 30, 31, 32, 33, 36, 37], "inform": [], "about": [], "instanc": [22, 23, 24, 30, 32, 33], "creat": [0, 30, 32], "from": [1, 2, 5, 6, 9, 10, 13, 14, 15, 18, 20, 23, 30, 32, 33, 37, 38], "about_m": [], "your_nam": [], "most": [1, 2], "import": [], "thing": 8, "person": [], "param": [], "A": [1, 2, 8, 10, 11, 12, 29, 30, 32, 33, 35, 38], "string": [], "thi": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 22, 23, 24, 29, 31, 32, 33, 37, 39, 40], "contain": [0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 19, 29, 31, 32, 37, 39], "auto": 0, "gener": [0, 1, 9, 14, 19, 29, 31, 32, 33, 40], "document": 0, "1": [0, 2, 7, 32], "pyslam": 0, "captur": [0, 2, 3, 5, 6, 21, 33, 38], "capturegroup": [], "capturemanag": [], "rawsensor": [], "sensorwrapp": [], "image_process": [0, 2, 21, 36, 37], "stereo": [], "stereodescriptormatch": [], "imag": [2, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 33, 36, 37, 38], "imagefeatur": [0, 10, 19, 20, 21, 36, 37], "normalizedimagefeatur": 24, "odometri": [0, 21], "visual_odometri": [0, 21, 23], "homographymatrix": [0, 21, 23, 25], "motionhypothesissourc": [], "optim": [0, 21], "procedur": [0, 14, 15, 21, 26], "homogenousmatrixleastsquar": [0, 21, 26, 28], "ransac": [0, 21, 26], "ransacdataset": [0, 21, 26, 30, 31, 32], "ransacmodel": [0, 21, 26, 30, 32], "sensor": [1, 2, 23, 33], "monocularuncalibratedcameracaptur": [], "uncalibratedfilecamerarawsensor": [], "system": [0, 21, 33, 40], "main": [], "uid": [0, 1, 2, 21], "sphinx": 0, "autoapi": 0, "sensorwrapperuid": [], "none": [1, 2, 5, 6, 9, 10, 11, 17, 29, 31, 32, 33, 35, 38], "base": [1, 2, 7, 8, 9, 12, 14, 15, 17, 18, 22, 23, 24, 29, 31, 32, 33], "abc": [1, 8, 14, 15, 22, 23, 31, 32], "repres": [1, 2, 10, 11, 12, 14, 15, 29, 31, 32, 35], "akin": [], "singl": [], "measur": [1, 2, 3, 33], "other": [1, 8, 10, 12, 14], "kind": [1, 3, 23, 31, 32, 33], "i": [1, 2, 8, 9, 10, 11, 12, 14, 17, 22, 23, 24, 29, 30, 31, 32, 33, 40], "abstract": [1, 8, 12, 14, 15, 22, 23, 24, 31, 32], "specif": 18, "type": [1, 8, 10, 13, 19, 29, 30, 31, 32, 33], "being": [], "subclass": [1, 8, 14, 15, 33], "here": [], "can": [1, 2, 3, 8, 9, 13, 14, 15, 18, 22, 23, 24, 31, 32, 33, 40], "have": [14, 17, 31, 32, 40], "extra": [], "properti": [1, 11, 35], "depth": [], "map": [], "listofcaptureuid": [], "group": [], "object": [1, 2, 10, 22, 23, 29, 32, 33, 36, 37], "togeth": 17, "just": [1, 14, 29, 32], "wrap": [1, 38], "around": [1, 38], "list": [9, 14, 15, 17, 29, 32], "stopev": [], "capturer": 1, "5": [29, 32], "respons": [9, 30, 32, 33], "manag": [1, 33], "all": [1, 2, 8, 9, 17, 23, 29, 30, 31, 32, 33, 36], "physic": 1, "camera": [1, 2, 5, 6, 23, 33], "attach": [], "e": [], "imagesensor": [], "ar": [1, 8, 9, 11, 17, 18, 19, 23, 29, 30, 31, 32, 33, 38], "regist": [], "also": [2, 23, 33, 39], "central": [], "lookup": [], "we": [1, 2, 7, 8, 9, 11, 13, 14, 17, 19, 23, 29, 30, 31, 32, 33, 37, 38], "extract": [6, 9, 13, 14, 15, 18, 20], "matric": [22, 23, 24], "etc": [30, 32], "__captureloop": 38, "intern": [1, 2, 9, 10, 11, 14, 17, 30, 32, 33, 38], "loop": [1, 2, 38], "run": [1, 5, 6, 9, 10, 30, 32, 33, 38], "expect": [1, 2, 14, 17, 29, 32, 38], "start": [1, 2, 33, 38], "new": [1, 29, 32, 33], "thread": [30, 32, 33, 38], "startcaptureloop": 1, "function": [1, 2, 11, 17, 29, 30, 32], "exit": [], "when": [1, 2, 23, 33], "stop": [1, 2, 38], "flag": [], "set": [1, 9, 14, 29, 30, 32, 33], "separ": [14, 17, 32], "process": [1, 33], "wrapper": 1, "implement": [1, 8, 12, 14, 15, 18, 32, 33, 37, 40], "raw": [], "deriv": [], "themselv": [], "activatesensor": [], "doe": [1, 30, 32, 33, 39], "ani": [1, 2, 22, 23, 24, 33, 39], "initi": [30, 32, 39], "tell": 32, "prepar": [1, 2], "call": [1, 2], "As": [23, 31, 32], "might": [1, 2], "opencv": [1, 2, 10, 11, 17, 37], "video": 38, "so": [8, 29, 32, 33, 40], "happen": [], "fast": [], "teardownsensor": [], "opposit": [], "startcaptur": [], "cleanup": [1, 2], "need": [1, 2, 8, 10, 14, 31, 32, 39], "done": [2, 17], "record": 1, "go": [31, 32, 38], "standbi": [], "state": [1, 2], "In": [], "context": [], "could": [1, 9, 22, 23, 24, 30, 32], "mean": 11, "frame": [1, 2, 5, 6, 23, 38], "put": [], "idl": [1, 2], "popul": [], "data": [8, 12, 23, 29, 30, 31, 32], "collect": 33, "str": [2, 35], "our": [3, 9, 29, 32], "deal": [], "get": [1, 2, 32, 33], "pipe": [], "inter": [1, 2, 32, 38], "commun": [], "relat": [1, 3, 9, 10, 39], "ha": [1, 11], "coupl": [], "high": [], "level": [], "support": [], "command": [], "should": [1, 2, 9, 11, 29, 32], "abl": [], "where": [32, 33], "time": [1, 2, 23], "entir": 32, "decid": [], "differ": [8, 38, 40], "allow": [1, 2, 23, 29, 30, 32, 33, 38], "more": 33, "accur": [], "take": [1, 2, 9, 14, 15, 30, 31, 32, 37], "seem": 33, "like": [19, 29, 32, 33], "pretti": 1, "fundament": [22, 23, 24], "do": [11, 14, 33], "wai": [8, 9, 33], "2": [7, 9, 10, 11, 23, 37], "case": [14, 22, 23, 24], "one": [10, 14, 30, 32, 33], "isn": [], "t": [1, 9, 14, 23, 29, 31, 32, 33, 40], "shouldn": [], "inerfer": [], "instead": [], "grab": [], "copi": [1, 11], "recent": [1, 2], "To": [], "queue": 33, "post": [], "you": [2, 9], "want": [2, 29, 32, 33], "simpli": [1, 2, 17, 33], "wait": [1, 33], "aren": [], "current": 9, "pull": 1, "__startcaptur": [], "activ": [1, 2], "true": 33, "acquir": [], "lock": [], "configur": [30, 32], "readi": [], "__endcaptur": [], "fals": 33, "clear": [], "tear": [], "down": [], "execut": [], "extern": [], "its": [30, 31, 32, 33], "own": [], "multi": [], "getcaptur": [1, 2], "safe": [], "non": 33, "intrus": [], "latest": [1, 2], "It": 9, "problem": [23, 32], "co": [], "oper": 33, "": [2, 8, 12, 17, 23, 29, 32, 33, 37], "make": [29, 32], "easi": [], "cvcolorconversioncod": [], "sourceimgmat": [], "cv2": [2, 7], "mat": [2, 7], "bwimgmat": [], "captureuid": [], "monocular": [2, 5, 6], "would": [1, 2, 33], "while": [14, 32, 33], "than": [], "help": [], "homogen": [9, 11], "pipelin": 33, "ideal": [], "same": [7, 9, 14, 17], "against": [9, 31, 32], "mono": [], "without": [11, 33], "too": [], "mani": [1, 32], "code": [1, 2, 30, 32, 33, 38], "tweak": [], "featuretyp": [], "enum": 7, "enumer": [], "defin": [7, 13, 18, 20, 23, 31, 32, 33], "orb": [0, 6, 13, 17, 19, 20], "inputimag": 9, "what": [2, 31, 32, 33], "featur": [6, 10, 14, 18, 19, 33, 36, 37, 40], "comput": [8, 9, 10, 12, 14, 15, 17, 29, 32], "detect": 33, "specifi": [29, 30, 31, 32], "store": [2, 9, 23], "them": [1, 2, 6, 9, 17, 37], "further": [], "__computeorbdescriptor": [], "descriptor": [0, 9, 10, 14, 17, 18, 19, 20, 21, 37], "normal": 9, "keypoint": [0, 9, 14, 15, 17, 19, 20, 21, 36], "suitabl": [], "variat": [], "dlt": [], "eight": [], "point": [9, 11, 23], "algorithm": 14, "thei": [7, 32, 33], "zero": [29, 32], "averag": [], "distanc": [8, 12], "origin": 23, "sqrt": [], "stereomatch": [], "simpl": [4, 11, 33], "dataclass": [], "found": [10, 32], "match": [10, 37], "between": [8, 10, 12, 23, 32, 37], "img": [], "img2": [], "imgoneidx": 10, "int": [2, 10, 17, 29, 30, 32], "imgtwoidx": 10, "stereodescriptorsmatch": [], "imgonefeatur": 37, "imgtwofeatur": 37, "determin": [2, 10, 30, 31, 32], "which": [1, 9, 11, 18, 29, 31, 32, 33], "indic": [1, 10, 29, 30, 31, 32, 33], "first": [9, 10, 29, 32, 33, 37], "second": [1, 2, 9, 10, 33], "us": [1, 2, 3, 8, 9, 10, 12, 17, 20, 23, 29, 30, 31, 32, 33, 37, 40], "flann": 10, "low": [], "ratio": [], "test": 4, "computematch": 10, "sub": [22, 23, 24, 29, 30, 32, 33], "estim": [22, 23, 24, 30, 31, 32], "motion": 23, "visual": [0, 21, 22, 23, 24], "homographi": [22, 23, 24], "vio": [22, 23, 24], "imu": [22, 23, 24], "preintegr": [22, 23, 24], "gettransl": [], "translat": [], "vector": 11, "timestep": [], "anoth": [8, 12, 29, 32], "scale": 11, "factor": [], "assum": [11, 29, 32], "known": 2, "parti": [], "agnost": [], "getrot": [], "3x3": 9, "rotat": [], "matrix": [2, 9, 11, 37], "chang": [], "pose": [22, 23, 24], "sourc": [1, 3], "destin": [], "involv": [29, 32], "some": [1, 2, 7, 19, 23, 31, 32, 33], "convent": [29, 32], "how": [1, 32], "onli": [8, 33], "restrict": 33, "imgonenormalizedfeatur": 24, "imgtwonormalizedfeatur": 24, "inmat": [9, 27, 28], "numpi": [7, 8, 9, 11, 12, 27, 28, 29, 30, 31, 32], "ndarrai": [7, 8, 9, 11, 12, 27, 28, 29, 30, 31, 32], "dataset": [1, 29, 30, 31, 32], "memori": [29, 32], "arrai": [7, 8, 9, 11, 12, 29, 30, 31, 32], "pass": [2, 29, 30, 32, 33], "assumpt": [14, 29, 32], "simplic": [29, 32, 40], "__len__": [29, 32], "getrandomsubsampl": [29, 32], "numofpoint": [29, 32], "vanilla": [29, 32], "scheme": [14, 29, 32], "random": [29, 30, 32], "uniform": [29, 32], "sampl": [29, 30, 32], "self": [29, 32], "less": [29, 32], "datapoint": [1, 29, 30, 32], "alongsid": [], "model": [30, 31, 32, 33], "wish": [31, 32], "logic": [1, 2, 7, 10, 19, 23, 32], "rid": 32, "lot": [20, 32], "boiler": 32, "plate": 32, "automat": 32, "parralel": [30, 32], "come": [32, 33], "after": [14, 31, 32], "observ": 32, "natur": 32, "iter": [30, 32, 33], "depend": 32, "much": 32, "possibl": 32, "below": 32, "pseudocod": 32, "hopefulli": 32, "provid": [2, 9, 32], "insight": 32, "why": 32, "denot": 32, "empti": 32, "inlier": [30, 31, 32], "u": [29, 32, 33], "had": 32, "n": 32, "pick": 32, "whole": 32, "size": [14, 17, 32], "fit": [30, 31, 32], "question": 32, "inlier_count": 32, "number": [1, 2, 11, 17, 29, 30, 31, 32, 33], "0": [7, 9, 32, 33], "For": [1, 2, 32, 33], "j": 32, "d": [30, 32], "error": 32, "jth": 32, "err": 32, "thresh": 32, "valu": 32, "discrimin": 32, "outlier": 32, "outlit": 32, "If": [2, 11, 32, 33], "increment": 32, "add": 32, "count": 32, "end": [14, 17, 32], "best": [30, 31, 32], "largest": 32, "option": [2, 30, 31, 32], "re": [7, 30, 31, 32], "datapoitn": 32, "uncalibratedmonocularfilecamerarawsensor": [], "camerafnam": [], "uncalibr": 2, "webcam": [], "laptop": [], "avail": 2, "file": [2, 5, 6, 39], "dev": 2, "video0": 2, "treat": 17, "calibr": [], "generateuid": 35, "api": 17, "refer": [1, 19, 33], "event": [], "sensorss": [], "perform": [1, 2, 40], "paramet": [1, 2, 7, 8, 9, 10, 11, 12, 14, 15, 17, 29, 30, 31, 32, 33, 36, 37, 38], "structur": [29, 32], "correspond": [9, 10, 11, 17, 18, 22, 23, 29, 32], "keep": [29, 31, 32], "track": [29, 31, 32], "especi": [29, 32], "onc": [29, 32], "findinlierindic": [31, 32], "given": [7, 9, 11, 14, 17, 29, 30, 31, 32, 33, 36], "root": [29, 31, 32], "step": [17, 31, 32, 33], "qualiti": [31, 32], "highest": [31, 32], "well": [31, 32], "select": [14, 31, 32], "deem": [], "ransacestim": [0, 21, 26, 32], "getsubsampl": [29, 32], "whose": [29, 32], "includ": [], "result": [7, 29, 32, 33], "numwork": [30, 32], "constructor": [30, 32], "pool": [30, 32], "worker": [30, 32], "instanti": [30, 32], "processpoolexecutor": [30, 32], "static": [30, 32, 35], "__getmodelandinli": [30, 32], "fulldataset": [30, 32], "subset": [30, 32], "modelt": [], "tupl": [9, 30, 32], "helper": [7, 30, 32, 33], "predictd": [], "full": [30, 32, 33], "were": [30, 32], "ty": [], "async": [30, 32], "modeltyp": [], "datapointsperiter": [30, 32], "refit": [30, 32], "bool": [30, 32, 33], "each": [30, 32, 33], "whether": [30, 32, 33], "retun": [30, 32], "futur": [], "evalu": [], "predict": [30, 32, 37], "capture_new": [], "everi": [], "framework": [1, 2, 3, 4], "work": [1, 7, 8, 19], "There": [], "stand": [], "move": [], "almost": [1, 2], "instantli": [1, 2], "concret": [], "boot": [], "alwai": 1, "begin": [], "immedi": [1, 2], "ransacmodelconfig": [], "config": [], "ransac_cr": [], "ransamodel": [], "method": [8, 12, 14, 15], "must": [2, 8, 12, 14, 15, 33], "anyon": [], "who": [], "still": [], "give": [], "leewai": [], "your": [], "read": [2, 38], "reccomend": [], "pop": [1, 2], "off": [1, 2], "request": [29, 32], "remot": [], "makeact": [1, 2], "capturefrequ": [1, 2], "ask": [1, 2], "setup": [1, 2], "frequenc": [1, 2], "save": [1, 2, 17], "buffer": [1, 2], "complet": [1, 2, 33], "capture_old": [], "uniqu": [1, 35], "identifi": [1, 35], "open": [], "remark": [], "learn": [], "leaveact": [1, 2], "out": [1, 2, 3], "turn": [1, 2], "timestamp": [1, 2], "datetim": [1, 2], "sensoruid": [], "wa": 1, "taken": 1, "timezon": 1, "utc": 1, "handl": [], "synchron": [], "requir": [14, 30, 32], "enabl": [], "effect": [], "both": [10, 14, 33, 37], "insid": [], "guarante": 17, "sensit": [], "sure": [], "yourself": [], "boilerpl": [], "those": [], "downstream": 33, "through": [], "sensor_wait_tim": [], "asynchron": [], "asynciter": [], "yield": [1, 2], "underli": 1, "await": [], "rate": 1, "captureloop": [], "asyncio": [], "task": 33, "aliv": [], "cancel": [], "easili": [33, 38], "send": [], "enclos": [], "unit": 1, "per": [1, 2], "color": [2, 7], "convers": [2, 11], "input": [7, 9], "output": 2, "correct": 2, "black": [], "white": [], "cv": 2, "color_bgr2grai": [], "obvious": [], "vari": 8, "sourcemat": [], "came": 1, "directli": [], "vision": [], "routin": [], "bw": [], "ignor": [], "encod": [], "measurementuid": [], "util": [3, 9, 18, 20, 33, 39], "pattern": 33, "show": [], "up": [], "commonli": [], "slam": [1, 23, 33, 40], "sens": [], "suppos": [], "pair": 10, "hypothes": [], "keyfram": [], "graph": [], "note": 40, "IN": [], "3": [1, 11], "reason": [], "abov": [], "seri": 33, "publish": [1, 33, 38], "subscrib": 33, "design": 33, "upon": [], "notifi": [], "handler": [], "basic": 10, "construct": 33, "quit": 11, "act": 33, "callabl": [30, 32], "messag": 33, "sent": [], "anyth": [], "over": [23, 33, 40], "listen": [1, 33, 38], "until": 1, "finish": [], "interfac": [1, 33], "long": [], "spawn": [], "pubsub": [0, 1, 21, 38], "getmeasur": [1, 2], "__internalcaptureloop": 1, "float": [1, 2, 8, 12, 33], "propog": 1, "appropri": 1, "amount": 1, "next": 1, "build": [9, 33], "pub": 33, "common": [3, 9, 33], "sinc": [17, 33], "usual": [23, 33], "subsequ": 33, "previou": 33, "cleanli": 33, "realli": [14, 33], "chose": 33, "messagequeu": [33, 38], "receiv": 33, "block": [1, 33], "timeout": 33, "indefini": 33, "limit": 33, "max": 33, "befor": 33, "noth": [2, 33], "otherwis": 33, "maintain": 33, "weak": 33, "refernc": 33, "soon": 33, "lose": 33, "last": 33, "strong": 33, "garbag": 33, "haven": 33, "yet": 33, "been": 33, "posetransformsourc": [0, 21, 23, 24], "transform": [22, 23, 24], "gettransform": [22, 23], "pose3d": [22, 23], "variou": [13, 23], "lidar": 23, "cloud": 23, "rel": 23, "relev": 23, "sai": 23, "concern": [23, 40], "robot": 23, "posit": 23, "orient": 23, "w": 23, "r": 23, "coordin": [9, 11, 14, 23], "interest": [19, 23], "3d": [11, 23], "csae": [], "2d": [9, 11, 23], "By": [19, 29, 32], "item": [29, 32], "slice": [29, 32], "4": [29, 32], "5th": [29, 32], "element": [9, 29, 32], "paramat": [9, 29, 30, 32], "idx": [29, 32], "These": [29, 32], "modelconstructor": [30, 32], "tha": [30, 32], "try": [17, 30, 32], "client": [1, 30, 32, 33, 38], "partial": [30, 32], "ranascmodel": [30, 32], "monocular_uncalibrated_camera": [], "monocularuncalibratedcamerameasur": 2, "monocularuncalibratedfilecamera": 2, "associ": [], "built": 40, "custom": [], "fname": 2, "opencvcolorcod": 2, "cvtcolor": 2, "measurementsourc": [1, 2], "demo": [0, 21], "monocular_captur": [0, 4, 21], "ro": 1, "topic": 1, "pre": 1, "whatev": 1, "referenc": 1, "apart": 1, "lightweight": 1, "special": 1, "intend": 1, "rest": 1, "alreadi": 2, "submodul": [], "arrang": 4, "part": [4, 33], "sourceuid": [1, 2], "global_lookup": 1, "weakref": 1, "weakvaluedictionari": 1, "pygameupdat": [], "msgqueue": 38, "pygam": [5, 6, 38], "window": 38, "blit": [], "onto": [36, 37], "made": [], "updat": [], "__init__": [33, 39], "expectd": 33, "proxi": 33, "multiprocess": 33, "pickl": 33, "neg": 33, "indefinit": 33, "accross": [10, 33, 37], "feature_descriptor": [0, 20, 21, 36, 37], "extractor": [0, 9, 19, 20, 21], "descriptorextractionschem": [], "descriptorarr": [8, 12], "beyond": 8, "identif": 8, "calcul": 8, "child": 8, "computedist": [8, 12], "coord": 11, "heterogen": [9, 11], "fro": [7, 11], "either": 11, "shape": 11, "getter": 11, "convert": [2, 7, 11], "makeheterogen": 11, "represent": 11, "storag": [2, 11], "makehomogen": 11, "asheterogen": 11, "dimens": 11, "ashomogen": 11, "seemingli": 14, "impli": 14, "exist": 14, "corner": 19, "region": 19, "form": 19, "patch": 19, "primit": 20, "keypointextractionschem": [], "ham": 12, "getdescriptor": [14, 17], "inimg": [7, 14, 15, 17], "inkeypoint": [14, 17], "nth": [14, 17], "describ": [14, 17], "getkeypoint": [15, 17], "descriptorextractor": [0, 9, 17, 18, 19, 20], "keypointextractor": [0, 9, 17, 18, 19, 20], "cv_pillow": [0, 2, 20, 21], "pygameframewindow": [0, 21, 39], "orb_detect_and_comput": [0, 16, 18, 19], "numpoint": 17, "detectandcomput": 17, "find": 17, "No": 17, "actual": 17, "howev": 17, "__comput": 17, "background": 1, "stopcaptureloop": 1, "pil": [2, 7, 9, 14, 15, 17, 36, 37, 38], "pillow": [2, 7, 36, 37], "pillowtargetcolor": 2, "pillowcolorformat": [2, 7], "afterward": 2, "format": [2, 7, 9], "default": 2, "target": 2, "l": [2, 7], "grayscal": [2, 7], "rgb": [2, 7], "arraytopillowimag": 7, "inarr": 7, "colorformat": 7, "under": 7, "hood": 7, "desir": 7, "pillowtoarrai": 7, "respect": 9, "previous": 9, "individu": 38, "startlistenloop": 38, "stoplistenloop": 38, "bookkeep": 39, "compon": 39, "end2end": [0, 18, 19, 20], "monocular_featur": [0, 4, 21], "drawfeatur": [0, 21, 39], "draw": [36, 37], "drawn": [36, 37], "imagepairfeaturematch": [0, 19, 20, 21, 37], "normalizekeypointmatrix": 9, "jax": 9, "appli": 9, "x": 9, "y": 9, "jnp": 9, "kepoint": 9, "did": 9, "invert": 9, "un": 9, "buildnormalizedkeypoint": 9, "normalizad": 9, "One": [10, 33], "two": 10, "imagepairmatch": [10, 37], "imagefeatureson": 10, "imagefeaturestwo": 10, "across": 10, "cost": [], "epipolar_model": [], "homographyerror": [], "epipolar": [], "common_captur": [0, 21], "uncalibratedmonocularcamera": [0, 3, 21], "box": 3, "machin": 5, "displai": [5, 6], "mainli": [], "four": [], "solut": [], "piec": 33, "standard": 33, "reactor": 33, "respond": 33, "incom": 33, "someth": 33, "intermedi": 33, "portion": 33, "v": 33, "Then": 33, "epipolarmodelcor": [], "homograpi": [], "drawmatch": [0, 21, 39], "drawscen": [], "among": [], "triangulatepoint": [], "p1": [], "p2": [], "pointon": [], "pointtwo": [], "triangul": [], "3x4": [], "tall": [], "column": [], "essenti": [], "fundamentalerror": [], "computeerror": [], "fundamentalmatrix": [], "propos": [], "ith": [], "total": [], "sum": [], "intrins": [], "inlierthresh": [], "With": [], "hypothesi": [], "albeit": [], "necessarili": [], "veri": [], "good": [], "broad": [], "atleast": [], "geometr": [], "look": [], "lower": [], "compar": [], "threshold": [], "order": [], "satisfi": [], "approxim": [], "power": [], "believ": [], "getfirstepipol": [], "epipol": [], "3x1": [], "getsecondepipol": [], "fundamentalsymetrictransfererror": [], "symetr": [], "transfer": [], "close": [], "analog": [], "slamv1": [], "11": [], "gold": [], "f": [], "zisserman": [], "book": [], "multipl": [], "view": [], "geometri": [], "quantiti": [], "homographysymetrictransfererror": [], "direct": [], "linear": [], "alorithm": [], "solv": [], "least": [], "potenti": [], "epipolarmodel": [], "getmodelandinli": [], "modelinst": [], "incoming_t": 33, "outgoing_t": 33, "openvc": 37, "drawstereomatch": 37, "imgon": 37, "imgtwo": 37, "pangolin": [], "scene": [], "pangolinscen": [], "width": [], "height": [], "visualis": [], "variabl": [], "shown": [], "screen": [], "whenev": [], "asset": [], "basicali": [], "pixel": [], "master": [], "quickstart": [], "sun": [], "feb": [], "26": [], "00": [], "10": [], "56": [], "2023": [], "adapt": [], "toctre": [], "toi": 40, "aim": 40, "fulli": 40, "librari": 40, "top": 40, "priorit": 40, "eas": 40, "develop": 40, "don": 40, "kei": 40}, "objects": {"": [[21, 0, 0, "-", "pyslam"]], "pyslam": [[1, 0, 0, "-", "capture"], [3, 0, 0, "-", "common_capture"], [4, 0, 0, "-", "demos"], [20, 0, 0, "-", "image_processing"], [23, 0, 0, "-", "odometry"], [26, 0, 0, "-", "optim"], [33, 0, 0, "-", "pubsub"], [34, 0, 0, "-", "systems"], [35, 0, 0, "-", "uid"], [39, 0, 0, "-", "visualize"]], "pyslam.capture": [[1, 1, 1, "", "GLOBAL_LOOKUP"], [1, 2, 1, "", "Measurement"], [1, 2, 1, "", "MeasurementSource"], [1, 2, 1, "", "Sensor"], [1, 1, 1, "", "T"]], "pyslam.capture.Measurement": [[1, 3, 1, "", "sourceUID"], [1, 3, 1, "", "timestamp"], [1, 3, 1, "", "uid"]], "pyslam.capture.Sensor": [[1, 4, 1, "", "__internalCaptureLoop"], [1, 4, 1, "", "getMeasurement"], [1, 4, 1, "", "leaveActive"], [1, 4, 1, "", "makeActive"], [1, 4, 1, "", "startCaptureLoop"], [1, 4, 1, "", "stopCaptureLoop"]], "pyslam.common_capture": [[2, 0, 0, "-", "UncalibratedMonocularCamera"]], "pyslam.common_capture.UncalibratedMonocularCamera": [[2, 2, 1, "", "MonocularUncalibratedCameraMeasurement"], [2, 2, 1, "", "MonocularUncalibratedFileCamera"]], "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera": [[2, 4, 1, "", "getMeasurement"], [2, 4, 1, "", "leaveActive"], [2, 4, 1, "", "makeActive"]], "pyslam.demos": [[5, 0, 0, "-", "monocular_capture"], [6, 0, 0, "-", "monocular_features"]], "pyslam.demos.monocular_capture": [[5, 5, 1, "", "run"]], "pyslam.demos.monocular_features": [[6, 5, 1, "", "run"]], "pyslam.image_processing": [[7, 0, 0, "-", "cv_pillow"], [19, 0, 0, "-", "feature_descriptors"]], "pyslam.image_processing.cv_pillow": [[7, 2, 1, "", "PillowColorFormat"], [7, 5, 1, "", "arrayToPillowImage"], [7, 5, 1, "", "pillowToArray"]], "pyslam.image_processing.cv_pillow.PillowColorFormat": [[7, 6, 1, "", "L"], [7, 6, 1, "", "RGB"]], "pyslam.image_processing.feature_descriptors": [[8, 0, 0, "-", "Descriptor"], [9, 0, 0, "-", "ImageFeatures"], [10, 0, 0, "-", "ImagePairFeatureMatches"], [11, 0, 0, "-", "Keypoint"], [13, 0, 0, "-", "descriptors"], [18, 0, 0, "-", "extractors"]], "pyslam.image_processing.feature_descriptors.Descriptor": [[8, 2, 1, "", "Descriptor"]], "pyslam.image_processing.feature_descriptors.Descriptor.Descriptor": [[8, 4, 1, "", "computeDistance"]], "pyslam.image_processing.feature_descriptors.ImageFeatures": [[9, 2, 1, "", "ImageFeatures"], [9, 1, 1, "", "T"], [9, 5, 1, "", "normalizeKeypointMatrix"]], "pyslam.image_processing.feature_descriptors.ImageFeatures.ImageFeatures": [[9, 4, 1, "", "buildNormalizedKeypoints"]], "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches": [[10, 2, 1, "", "ImagePairMatches"], [10, 2, 1, "", "Match"]], "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches.ImagePairMatches": [[10, 4, 1, "", "computeMatches"]], "pyslam.image_processing.feature_descriptors.Keypoint": [[11, 2, 1, "", "Keypoint"]], "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint": [[11, 4, 1, "", "asHeterogenous"], [11, 4, 1, "", "asHomogenous"], [11, 3, 1, "", "coords"], [11, 4, 1, "", "makeHeterogenous"], [11, 4, 1, "", "makeHomogenous"]], "pyslam.image_processing.feature_descriptors.descriptors": [[12, 0, 0, "-", "ORB"]], "pyslam.image_processing.feature_descriptors.descriptors.ORB": [[12, 2, 1, "", "ORB"]], "pyslam.image_processing.feature_descriptors.descriptors.ORB.ORB": [[12, 4, 1, "", "computeDistance"]], "pyslam.image_processing.feature_descriptors.extractors": [[14, 0, 0, "-", "DescriptorExtractor"], [15, 0, 0, "-", "KeypointExtractor"], [16, 0, 0, "-", "end2end"]], "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor": [[14, 2, 1, "", "DescriptorExtractor"], [14, 1, 1, "", "T"]], "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor.DescriptorExtractor": [[14, 4, 1, "", "getDescriptors"]], "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor": [[15, 2, 1, "", "KeypointExtractor"]], "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor.KeypointExtractor": [[15, 4, 1, "", "getKeypoints"]], "pyslam.image_processing.feature_descriptors.extractors.end2end": [[17, 0, 0, "-", "orb_detect_and_compute"]], "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute": [[17, 2, 1, "", "ORB_Detect_And_Compute"]], "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute": [[17, 4, 1, "", "__compute"], [17, 4, 1, "", "getDescriptors"], [17, 4, 1, "", "getKeypoints"]], "pyslam.odometry": [[23, 2, 1, "", "PoseTransformSource"], [22, 0, 0, "-", "PoseTransformSource"], [25, 0, 0, "-", "visual_odometry"]], "pyslam.odometry.PoseTransformSource": [[22, 2, 1, "", "PoseTransformSource"], [23, 4, 1, "", "getTransform"]], "pyslam.odometry.PoseTransformSource.PoseTransformSource": [[22, 4, 1, "", "getTransform"]], "pyslam.odometry.visual_odometry": [[24, 0, 0, "-", "HomographyMatrix"]], "pyslam.odometry.visual_odometry.HomographyMatrix": [[24, 2, 1, "", "HomographyMatrix"]], "pyslam.optim": [[28, 0, 0, "-", "procedures"], [32, 0, 0, "-", "ransac"]], "pyslam.optim.procedures": [[27, 0, 0, "-", "HomogenousMatrixLeastSquares"], [28, 5, 1, "", "homogenousMatrixLeastSquares"]], "pyslam.optim.procedures.HomogenousMatrixLeastSquares": [[27, 5, 1, "", "homogenousMatrixLeastSquares"]], "pyslam.optim.ransac": [[32, 2, 1, "", "RANSACDataset"], [29, 0, 0, "-", "RANSACDataset"], [32, 2, 1, "", "RANSACEstimator"], [30, 0, 0, "-", "RANSACEstimator"], [32, 2, 1, "", "RANSACModel"], [31, 0, 0, "-", "RANSACModel"]], "pyslam.optim.ransac.RANSACDataset": [[29, 2, 1, "", "RANSACDataset"], [29, 1, 1, "", "T"], [32, 4, 1, "", "__len__"], [32, 4, 1, "", "getRandomSubsample"], [32, 4, 1, "", "getSubsample"]], "pyslam.optim.ransac.RANSACDataset.RANSACDataset": [[29, 4, 1, "", "__len__"], [29, 4, 1, "", "getRandomSubsample"], [29, 4, 1, "", "getSubsample"]], "pyslam.optim.ransac.RANSACEstimator": [[30, 1, 1, "", "D"], [30, 2, 1, "", "RANSACEstimator"], [32, 4, 1, "", "__getModelAndInliers"], [32, 4, 1, "", "fit"]], "pyslam.optim.ransac.RANSACEstimator.RANSACEstimator": [[30, 4, 1, "", "__getModelAndInliers"], [30, 4, 1, "", "fit"]], "pyslam.optim.ransac.RANSACModel": [[31, 2, 1, "", "RANSACModel"], [31, 1, 1, "", "T"], [32, 4, 1, "", "findInlierIndices"], [32, 4, 1, "", "fit"]], "pyslam.optim.ransac.RANSACModel.RANSACModel": [[31, 4, 1, "", "findInlierIndices"], [31, 4, 1, "", "fit"]], "pyslam.pubsub": [[33, 1, 1, "", "INCOMING_T"], [33, 2, 1, "", "MessageQueue"], [33, 1, 1, "", "OUTGOING_T"], [33, 2, 1, "", "Publisher"]], "pyslam.pubsub.MessageQueue": [[33, 4, 1, "", "listen"], [33, 4, 1, "", "publish"]], "pyslam.pubsub.Publisher": [[33, 4, 1, "", "publish"], [33, 4, 1, "", "subscribe"]], "pyslam.uid": [[35, 2, 1, "", "UID"]], "pyslam.uid.UID": [[35, 4, 1, "", "generateUID"], [35, 3, 1, "", "uid"]], "pyslam.visualize": [[36, 0, 0, "-", "DrawFeatures"], [37, 0, 0, "-", "DrawMatches"], [38, 0, 0, "-", "PyGameFrameWindow"]], "pyslam.visualize.DrawFeatures": [[36, 5, 1, "", "drawFeatures"]], "pyslam.visualize.DrawMatches": [[37, 5, 1, "", "drawStereoMatches"]], "pyslam.visualize.PyGameFrameWindow": [[38, 2, 1, "", "PyGameFrameWindow"]], "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow": [[38, 4, 1, "", "__captureLoop"], [38, 4, 1, "", "startListenLoop"], [38, 4, 1, "", "stopListenLoop"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 40, "pyslam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "": [], "document": [], "indic": [], "tabl": [], "ur": [], "mom": [], "main": [], "py": [], "api": 0, "refer": 0, "captur": 1, "modul": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 22, 24, 27, 29, 30, 31, 33, 35, 36, 37, 38], "content": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "class": [1, 2, 7, 8, 9, 10, 11, 12, 14, 15, 17, 22, 23, 24, 29, 30, 31, 32, 33, 35, 38], "capturegroup": [], "capturemanag": [], "rawsensor": [], "sensorwrapp": [], "submodul": [3, 4, 13, 16, 18, 19, 20, 21, 23, 25, 28, 32, 39], "packag": [23, 28, 32], "image_process": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "imag": [], "imagefeatur": 9, "normalizedimagefeatur": [], "subpackag": [18, 19, 20, 21, 23, 26], "stereo": [], "stereodescriptormatch": [], "function": [5, 6, 7, 9, 27, 28, 36, 37], "odometri": [22, 23, 24, 25], "motionhypothesissourc": [], "visual_odometri": [24, 25], "homographymatrix": 24, "optim": [26, 27, 28, 29, 30, 31, 32], "procedur": [27, 28], "homogenousmatrixleastsquar": 27, "ransac": [29, 30, 31, 32], "ransacdataset": 29, "attribut": [1, 9, 14, 29, 30, 31, 33], "ransacmodel": 31, "sensor": [], "monocularuncalibratedcameracaptur": [], "uncalibratedfilecamerarawsensor": [], "system": 34, "uid": 35, "ransacestim": 30, "capture_new": [], "capture_old": [], "measur": [], "observ": [], "publish": [], "pubsub": 33, "messagequeu": [], "posetransformsourc": 22, "common": [], "monocular_uncalibrated_camera": [], "monocularuncalibratedcamerameasur": [], "monocularuncalibratedfilecamera": [], "measurementsourc": [], "demo": [4, 5, 6], "monocular_captur": 5, "feature_descriptor": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "descriptor": [8, 12, 13], "keypoint": 11, "extractor": [14, 15, 16, 17, 18], "descriptorextractionschem": [], "orb": 12, "keypointextractionschem": [], "orb_detect_and_comput": 17, "cv_pillow": 7, "descriptorextractor": 14, "keypointextractor": 15, "visual": [36, 37, 38, 39], "pygameframewindow": 38, "end2end": [16, 17], "monocular_featur": 6, "drawfeatur": 36, "imagepairfeaturematch": 10, "epipolar_model": [], "error": [], "homographyerror": [], "common_captur": [2, 3], "uncalibratedmonocularcamera": 2, "epipolarmodelcor": [], "fundament": [], "homograpi": [], "drawmatch": 37, "drawscen": []}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to PySLAM!": [[40, "welcome-to-pyslam"]], "API Reference": [[0, "api-reference"]], "pyslam.capture": [[1, "module-pyslam.capture"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"], [22, "module-contents"], [24, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [33, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"]], "Classes": [[1, "classes"], [2, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [17, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [35, "classes"], [38, "classes"]], "Attributes": [[1, "attributes"], [9, "attributes"], [14, "attributes"], [29, "attributes"], [30, "attributes"], [31, "attributes"], [33, "attributes"]], "pyslam.common_capture.UncalibratedMonocularCamera": [[2, "module-pyslam.common_capture.UncalibratedMonocularCamera"]], "pyslam.common_capture": [[3, "module-pyslam.common_capture"]], "Submodules": [[3, "submodules"], [4, "submodules"], [13, "submodules"], [16, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [23, "submodules"], [25, "submodules"], [28, "submodules"], [32, "submodules"], [39, "submodules"]], "pyslam.demos": [[4, "module-pyslam.demos"]], "pyslam.demos.monocular_capture": [[5, "module-pyslam.demos.monocular_capture"]], "Functions": [[5, "functions"], [6, "functions"], [7, "functions"], [9, "functions"], [27, "functions"], [28, "functions"], [36, "functions"], [37, "functions"]], "pyslam.demos.monocular_features": [[6, "module-pyslam.demos.monocular_features"]], "pyslam.image_processing.cv_pillow": [[7, "module-pyslam.image_processing.cv_pillow"]], "pyslam.image_processing.feature_descriptors.Descriptor": [[8, "module-pyslam.image_processing.feature_descriptors.Descriptor"]], "pyslam.image_processing.feature_descriptors.ImageFeatures": [[9, "module-pyslam.image_processing.feature_descriptors.ImageFeatures"]], "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches": [[10, "module-pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches"]], "pyslam.image_processing.feature_descriptors.Keypoint": [[11, "module-pyslam.image_processing.feature_descriptors.Keypoint"]], "pyslam.image_processing.feature_descriptors.descriptors.ORB": [[12, "module-pyslam.image_processing.feature_descriptors.descriptors.ORB"]], "pyslam.image_processing.feature_descriptors.descriptors": [[13, "module-pyslam.image_processing.feature_descriptors.descriptors"]], "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor": [[14, "module-pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor"]], "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor": [[15, "module-pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor"]], "pyslam.image_processing.feature_descriptors.extractors.end2end": [[16, "module-pyslam.image_processing.feature_descriptors.extractors.end2end"]], "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute": [[17, "module-pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute"]], "pyslam.image_processing.feature_descriptors.extractors": [[18, "module-pyslam.image_processing.feature_descriptors.extractors"]], "Subpackages": [[18, "subpackages"], [19, "subpackages"], [20, "subpackages"], [21, "subpackages"], [23, "subpackages"], [26, "subpackages"]], "pyslam.image_processing.feature_descriptors": [[19, "module-pyslam.image_processing.feature_descriptors"]], "pyslam.image_processing": [[20, "module-pyslam.image_processing"]], "pyslam": [[21, "module-pyslam"]], "pyslam.odometry.PoseTransformSource": [[22, "module-pyslam.odometry.PoseTransformSource"]], "pyslam.odometry": [[23, "module-pyslam.odometry"]], "Package Contents": [[23, "package-contents"], [28, "package-contents"], [32, "package-contents"]], "pyslam.odometry.visual_odometry.HomographyMatrix": [[24, "module-pyslam.odometry.visual_odometry.HomographyMatrix"]], "pyslam.odometry.visual_odometry": [[25, "module-pyslam.odometry.visual_odometry"]], "pyslam.optim": [[26, "module-pyslam.optim"]], "pyslam.optim.procedures.HomogenousMatrixLeastSquares": [[27, "module-pyslam.optim.procedures.HomogenousMatrixLeastSquares"]], "pyslam.optim.procedures": [[28, "module-pyslam.optim.procedures"]], "pyslam.optim.ransac.RANSACDataset": [[29, "module-pyslam.optim.ransac.RANSACDataset"]], "pyslam.optim.ransac.RANSACEstimator": [[30, "module-pyslam.optim.ransac.RANSACEstimator"]], "pyslam.optim.ransac.RANSACModel": [[31, "module-pyslam.optim.ransac.RANSACModel"]], "pyslam.optim.ransac": [[32, "module-pyslam.optim.ransac"]], "pyslam.pubsub": [[33, "module-pyslam.pubsub"]], "pyslam.systems": [[34, "module-pyslam.systems"]], "pyslam.uid": [[35, "module-pyslam.uid"]], "pyslam.visualize.DrawFeatures": [[36, "module-pyslam.visualize.DrawFeatures"]], "pyslam.visualize.DrawMatches": [[37, "module-pyslam.visualize.DrawMatches"]], "pyslam.visualize.PyGameFrameWindow": [[38, "module-pyslam.visualize.PyGameFrameWindow"]], "pyslam.visualize": [[39, "module-pyslam.visualize"]]}, "indexentries": {"global_lookup (in module pyslam.capture)": [[1, "pyslam.capture.GLOBAL_LOOKUP"]], "measurement (class in pyslam.capture)": [[1, "pyslam.capture.Measurement"]], "measurementsource (class in pyslam.capture)": [[1, "pyslam.capture.MeasurementSource"]], "sensor (class in pyslam.capture)": [[1, "pyslam.capture.Sensor"]], "t (in module pyslam.capture)": [[1, "pyslam.capture.T"]], "__internalcaptureloop() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.__internalCaptureLoop"]], "getmeasurement() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.getMeasurement"]], "leaveactive() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.leaveActive"]], "makeactive() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.makeActive"]], "module": [[1, "module-pyslam.capture"], [2, "module-pyslam.common_capture.UncalibratedMonocularCamera"], [3, "module-pyslam.common_capture"], [4, "module-pyslam.demos"], [5, "module-pyslam.demos.monocular_capture"], [6, "module-pyslam.demos.monocular_features"], [7, "module-pyslam.image_processing.cv_pillow"], [8, "module-pyslam.image_processing.feature_descriptors.Descriptor"], [9, "module-pyslam.image_processing.feature_descriptors.ImageFeatures"], [10, "module-pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches"], [11, "module-pyslam.image_processing.feature_descriptors.Keypoint"], [12, "module-pyslam.image_processing.feature_descriptors.descriptors.ORB"], [13, "module-pyslam.image_processing.feature_descriptors.descriptors"], [14, "module-pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor"], [15, "module-pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor"], [16, "module-pyslam.image_processing.feature_descriptors.extractors.end2end"], [17, "module-pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute"], [18, "module-pyslam.image_processing.feature_descriptors.extractors"], [19, "module-pyslam.image_processing.feature_descriptors"], [20, "module-pyslam.image_processing"], [21, "module-pyslam"], [22, "module-pyslam.odometry.PoseTransformSource"], [23, "module-pyslam.odometry"], [24, "module-pyslam.odometry.visual_odometry.HomographyMatrix"], [25, "module-pyslam.odometry.visual_odometry"], [26, "module-pyslam.optim"], [27, "module-pyslam.optim.procedures.HomogenousMatrixLeastSquares"], [28, "module-pyslam.optim.procedures"], [29, "module-pyslam.optim.ransac.RANSACDataset"], [30, "module-pyslam.optim.ransac.RANSACEstimator"], [31, "module-pyslam.optim.ransac.RANSACModel"], [32, "module-pyslam.optim.ransac"], [33, "module-pyslam.pubsub"], [34, "module-pyslam.systems"], [35, "module-pyslam.uid"], [36, "module-pyslam.visualize.DrawFeatures"], [37, "module-pyslam.visualize.DrawMatches"], [38, "module-pyslam.visualize.PyGameFrameWindow"], [39, "module-pyslam.visualize"]], "pyslam.capture": [[1, "module-pyslam.capture"]], "sourceuid (pyslam.capture.measurement property)": [[1, "pyslam.capture.Measurement.sourceUID"]], "startcaptureloop() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.startCaptureLoop"]], "stopcaptureloop() (pyslam.capture.sensor method)": [[1, "pyslam.capture.Sensor.stopCaptureLoop"]], "timestamp (pyslam.capture.measurement property)": [[1, "pyslam.capture.Measurement.timestamp"]], "uid (pyslam.capture.measurement property)": [[1, "pyslam.capture.Measurement.uid"]], "monocularuncalibratedcamerameasurement (class in pyslam.common_capture.uncalibratedmonocularcamera)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedCameraMeasurement"]], "monocularuncalibratedfilecamera (class in pyslam.common_capture.uncalibratedmonocularcamera)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera"]], "getmeasurement() (pyslam.common_capture.uncalibratedmonocularcamera.monocularuncalibratedfilecamera method)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera.getMeasurement"]], "leaveactive() (pyslam.common_capture.uncalibratedmonocularcamera.monocularuncalibratedfilecamera method)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera.leaveActive"]], "makeactive() (pyslam.common_capture.uncalibratedmonocularcamera.monocularuncalibratedfilecamera method)": [[2, "pyslam.common_capture.UncalibratedMonocularCamera.MonocularUncalibratedFileCamera.makeActive"]], "pyslam.common_capture.uncalibratedmonocularcamera": [[2, "module-pyslam.common_capture.UncalibratedMonocularCamera"]], "pyslam.common_capture": [[3, "module-pyslam.common_capture"]], "pyslam.demos": [[4, "module-pyslam.demos"]], "pyslam.demos.monocular_capture": [[5, "module-pyslam.demos.monocular_capture"]], "run() (in module pyslam.demos.monocular_capture)": [[5, "pyslam.demos.monocular_capture.run"]], "pyslam.demos.monocular_features": [[6, "module-pyslam.demos.monocular_features"]], "run() (in module pyslam.demos.monocular_features)": [[6, "pyslam.demos.monocular_features.run"]], "l (pyslam.image_processing.cv_pillow.pillowcolorformat attribute)": [[7, "pyslam.image_processing.cv_pillow.PillowColorFormat.L"]], "pillowcolorformat (class in pyslam.image_processing.cv_pillow)": [[7, "pyslam.image_processing.cv_pillow.PillowColorFormat"]], "rgb (pyslam.image_processing.cv_pillow.pillowcolorformat attribute)": [[7, "pyslam.image_processing.cv_pillow.PillowColorFormat.RGB"]], "arraytopillowimage() (in module pyslam.image_processing.cv_pillow)": [[7, "pyslam.image_processing.cv_pillow.arrayToPillowImage"]], "pillowtoarray() (in module pyslam.image_processing.cv_pillow)": [[7, "pyslam.image_processing.cv_pillow.pillowToArray"]], "pyslam.image_processing.cv_pillow": [[7, "module-pyslam.image_processing.cv_pillow"]], "descriptor (class in pyslam.image_processing.feature_descriptors.descriptor)": [[8, "pyslam.image_processing.feature_descriptors.Descriptor.Descriptor"]], "computedistance() (pyslam.image_processing.feature_descriptors.descriptor.descriptor method)": [[8, "pyslam.image_processing.feature_descriptors.Descriptor.Descriptor.computeDistance"]], "pyslam.image_processing.feature_descriptors.descriptor": [[8, "module-pyslam.image_processing.feature_descriptors.Descriptor"]], "imagefeatures (class in pyslam.image_processing.feature_descriptors.imagefeatures)": [[9, "pyslam.image_processing.feature_descriptors.ImageFeatures.ImageFeatures"]], "t (in module pyslam.image_processing.feature_descriptors.imagefeatures)": [[9, "pyslam.image_processing.feature_descriptors.ImageFeatures.T"]], "buildnormalizedkeypoints() (pyslam.image_processing.feature_descriptors.imagefeatures.imagefeatures method)": [[9, "pyslam.image_processing.feature_descriptors.ImageFeatures.ImageFeatures.buildNormalizedKeypoints"]], "normalizekeypointmatrix() (in module pyslam.image_processing.feature_descriptors.imagefeatures)": [[9, "pyslam.image_processing.feature_descriptors.ImageFeatures.normalizeKeypointMatrix"]], "pyslam.image_processing.feature_descriptors.imagefeatures": [[9, "module-pyslam.image_processing.feature_descriptors.ImageFeatures"]], "imagepairmatches (class in pyslam.image_processing.feature_descriptors.imagepairfeaturematches)": [[10, "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches.ImagePairMatches"]], "match (class in pyslam.image_processing.feature_descriptors.imagepairfeaturematches)": [[10, "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches.Match"]], "computematches() (pyslam.image_processing.feature_descriptors.imagepairfeaturematches.imagepairmatches method)": [[10, "pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches.ImagePairMatches.computeMatches"]], "pyslam.image_processing.feature_descriptors.imagepairfeaturematches": [[10, "module-pyslam.image_processing.feature_descriptors.ImagePairFeatureMatches"]], "keypoint (class in pyslam.image_processing.feature_descriptors.keypoint)": [[11, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint"]], "asheterogenous() (pyslam.image_processing.feature_descriptors.keypoint.keypoint method)": [[11, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.asHeterogenous"]], "ashomogenous() (pyslam.image_processing.feature_descriptors.keypoint.keypoint method)": [[11, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.asHomogenous"]], "coords (pyslam.image_processing.feature_descriptors.keypoint.keypoint property)": [[11, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.coords"]], "makeheterogenous() (pyslam.image_processing.feature_descriptors.keypoint.keypoint method)": [[11, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.makeHeterogenous"]], "makehomogenous() (pyslam.image_processing.feature_descriptors.keypoint.keypoint method)": [[11, "pyslam.image_processing.feature_descriptors.Keypoint.Keypoint.makeHomogenous"]], "pyslam.image_processing.feature_descriptors.keypoint": [[11, "module-pyslam.image_processing.feature_descriptors.Keypoint"]], "orb (class in pyslam.image_processing.feature_descriptors.descriptors.orb)": [[12, "pyslam.image_processing.feature_descriptors.descriptors.ORB.ORB"]], "computedistance() (pyslam.image_processing.feature_descriptors.descriptors.orb.orb method)": [[12, "pyslam.image_processing.feature_descriptors.descriptors.ORB.ORB.computeDistance"]], "pyslam.image_processing.feature_descriptors.descriptors.orb": [[12, "module-pyslam.image_processing.feature_descriptors.descriptors.ORB"]], "pyslam.image_processing.feature_descriptors.descriptors": [[13, "module-pyslam.image_processing.feature_descriptors.descriptors"]], "descriptorextractor (class in pyslam.image_processing.feature_descriptors.extractors.descriptorextractor)": [[14, "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor.DescriptorExtractor"]], "t (in module pyslam.image_processing.feature_descriptors.extractors.descriptorextractor)": [[14, "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor.T"]], "getdescriptors() (pyslam.image_processing.feature_descriptors.extractors.descriptorextractor.descriptorextractor method)": [[14, "pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor.DescriptorExtractor.getDescriptors"]], "pyslam.image_processing.feature_descriptors.extractors.descriptorextractor": [[14, "module-pyslam.image_processing.feature_descriptors.extractors.DescriptorExtractor"]], "keypointextractor (class in pyslam.image_processing.feature_descriptors.extractors.keypointextractor)": [[15, "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor.KeypointExtractor"]], "getkeypoints() (pyslam.image_processing.feature_descriptors.extractors.keypointextractor.keypointextractor method)": [[15, "pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor.KeypointExtractor.getKeypoints"]], "pyslam.image_processing.feature_descriptors.extractors.keypointextractor": [[15, "module-pyslam.image_processing.feature_descriptors.extractors.KeypointExtractor"]], "pyslam.image_processing.feature_descriptors.extractors.end2end": [[16, "module-pyslam.image_processing.feature_descriptors.extractors.end2end"]], "orb_detect_and_compute (class in pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute)": [[17, "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute"]], "__compute() (pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.orb_detect_and_compute method)": [[17, "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute.__compute"]], "getdescriptors() (pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.orb_detect_and_compute method)": [[17, "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute.getDescriptors"]], "getkeypoints() (pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.orb_detect_and_compute method)": [[17, "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute.ORB_Detect_And_Compute.getKeypoints"]], "pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute": [[17, "module-pyslam.image_processing.feature_descriptors.extractors.end2end.orb_detect_and_compute"]], "pyslam.image_processing.feature_descriptors.extractors": [[18, "module-pyslam.image_processing.feature_descriptors.extractors"]], "pyslam.image_processing.feature_descriptors": [[19, "module-pyslam.image_processing.feature_descriptors"]], "pyslam.image_processing": [[20, "module-pyslam.image_processing"]], "pyslam": [[21, "module-pyslam"]], "posetransformsource (class in pyslam.odometry.posetransformsource)": [[22, "pyslam.odometry.PoseTransformSource.PoseTransformSource"]], "gettransform() (pyslam.odometry.posetransformsource.posetransformsource method)": [[22, "pyslam.odometry.PoseTransformSource.PoseTransformSource.getTransform"]], "pyslam.odometry.posetransformsource": [[22, "module-pyslam.odometry.PoseTransformSource"]], "posetransformsource (class in pyslam.odometry)": [[23, "pyslam.odometry.PoseTransformSource"]], "gettransform() (pyslam.odometry.posetransformsource method)": [[23, "pyslam.odometry.PoseTransformSource.getTransform"]], "pyslam.odometry": [[23, "module-pyslam.odometry"]], "homographymatrix (class in pyslam.odometry.visual_odometry.homographymatrix)": [[24, "pyslam.odometry.visual_odometry.HomographyMatrix.HomographyMatrix"]], "pyslam.odometry.visual_odometry.homographymatrix": [[24, "module-pyslam.odometry.visual_odometry.HomographyMatrix"]], "pyslam.odometry.visual_odometry": [[25, "module-pyslam.odometry.visual_odometry"]], "pyslam.optim": [[26, "module-pyslam.optim"]], "homogenousmatrixleastsquares() (in module pyslam.optim.procedures.homogenousmatrixleastsquares)": [[27, "pyslam.optim.procedures.HomogenousMatrixLeastSquares.homogenousMatrixLeastSquares"]], "pyslam.optim.procedures.homogenousmatrixleastsquares": [[27, "module-pyslam.optim.procedures.HomogenousMatrixLeastSquares"]], "homogenousmatrixleastsquares() (in module pyslam.optim.procedures)": [[28, "pyslam.optim.procedures.homogenousMatrixLeastSquares"]], "pyslam.optim.procedures": [[28, "module-pyslam.optim.procedures"]], "ransacdataset (class in pyslam.optim.ransac.ransacdataset)": [[29, "pyslam.optim.ransac.RANSACDataset.RANSACDataset"]], "t (in module pyslam.optim.ransac.ransacdataset)": [[29, "pyslam.optim.ransac.RANSACDataset.T"]], "__len__() (pyslam.optim.ransac.ransacdataset.ransacdataset method)": [[29, "pyslam.optim.ransac.RANSACDataset.RANSACDataset.__len__"]], "getrandomsubsample() (pyslam.optim.ransac.ransacdataset.ransacdataset method)": [[29, "pyslam.optim.ransac.RANSACDataset.RANSACDataset.getRandomSubsample"]], "getsubsample() (pyslam.optim.ransac.ransacdataset.ransacdataset method)": [[29, "pyslam.optim.ransac.RANSACDataset.RANSACDataset.getSubsample"]], "pyslam.optim.ransac.ransacdataset": [[29, "module-pyslam.optim.ransac.RANSACDataset"]], "d (in module pyslam.optim.ransac.ransacestimator)": [[30, "pyslam.optim.ransac.RANSACEstimator.D"]], "ransacestimator (class in pyslam.optim.ransac.ransacestimator)": [[30, "pyslam.optim.ransac.RANSACEstimator.RANSACEstimator"]], "__getmodelandinliers() (pyslam.optim.ransac.ransacestimator.ransacestimator static method)": [[30, "pyslam.optim.ransac.RANSACEstimator.RANSACEstimator.__getModelAndInliers"]], "fit() (pyslam.optim.ransac.ransacestimator.ransacestimator method)": [[30, "pyslam.optim.ransac.RANSACEstimator.RANSACEstimator.fit"]], "pyslam.optim.ransac.ransacestimator": [[30, "module-pyslam.optim.ransac.RANSACEstimator"]], "ransacmodel (class in pyslam.optim.ransac.ransacmodel)": [[31, "pyslam.optim.ransac.RANSACModel.RANSACModel"]], "t (in module pyslam.optim.ransac.ransacmodel)": [[31, "pyslam.optim.ransac.RANSACModel.T"]], "findinlierindices() (pyslam.optim.ransac.ransacmodel.ransacmodel method)": [[31, "pyslam.optim.ransac.RANSACModel.RANSACModel.findInlierIndices"]], "fit() (pyslam.optim.ransac.ransacmodel.ransacmodel method)": [[31, "pyslam.optim.ransac.RANSACModel.RANSACModel.fit"]], "pyslam.optim.ransac.ransacmodel": [[31, "module-pyslam.optim.ransac.RANSACModel"]], "ransacdataset (class in pyslam.optim.ransac)": [[32, "pyslam.optim.ransac.RANSACDataset"]], "ransacestimator (class in pyslam.optim.ransac)": [[32, "pyslam.optim.ransac.RANSACEstimator"]], "ransacmodel (class in pyslam.optim.ransac)": [[32, "pyslam.optim.ransac.RANSACModel"]], "__getmodelandinliers() (pyslam.optim.ransac.ransacestimator static method)": [[32, "pyslam.optim.ransac.RANSACEstimator.__getModelAndInliers"]], "__len__() (pyslam.optim.ransac.ransacdataset method)": [[32, "pyslam.optim.ransac.RANSACDataset.__len__"]], "findinlierindices() (pyslam.optim.ransac.ransacmodel method)": [[32, "pyslam.optim.ransac.RANSACModel.findInlierIndices"]], "fit() (pyslam.optim.ransac.ransacestimator method)": [[32, "pyslam.optim.ransac.RANSACEstimator.fit"]], "fit() (pyslam.optim.ransac.ransacmodel method)": [[32, "pyslam.optim.ransac.RANSACModel.fit"]], "getrandomsubsample() (pyslam.optim.ransac.ransacdataset method)": [[32, "pyslam.optim.ransac.RANSACDataset.getRandomSubsample"]], "getsubsample() (pyslam.optim.ransac.ransacdataset method)": [[32, "pyslam.optim.ransac.RANSACDataset.getSubsample"]], "pyslam.optim.ransac": [[32, "module-pyslam.optim.ransac"]], "incoming_t (in module pyslam.pubsub)": [[33, "pyslam.pubsub.INCOMING_T"]], "messagequeue (class in pyslam.pubsub)": [[33, "pyslam.pubsub.MessageQueue"]], "outgoing_t (in module pyslam.pubsub)": [[33, "pyslam.pubsub.OUTGOING_T"]], "publisher (class in pyslam.pubsub)": [[33, "pyslam.pubsub.Publisher"]], "listen() (pyslam.pubsub.messagequeue method)": [[33, "pyslam.pubsub.MessageQueue.listen"]], "publish() (pyslam.pubsub.messagequeue method)": [[33, "pyslam.pubsub.MessageQueue.publish"]], "publish() (pyslam.pubsub.publisher method)": [[33, "pyslam.pubsub.Publisher.publish"]], "pyslam.pubsub": [[33, "module-pyslam.pubsub"]], "subscribe() (pyslam.pubsub.publisher method)": [[33, "pyslam.pubsub.Publisher.subscribe"]], "pyslam.systems": [[34, "module-pyslam.systems"]], "uid (class in pyslam.uid)": [[35, "pyslam.uid.UID"]], "generateuid() (pyslam.uid.uid static method)": [[35, "pyslam.uid.UID.generateUID"]], "pyslam.uid": [[35, "module-pyslam.uid"]], "uid (pyslam.uid.uid property)": [[35, "pyslam.uid.UID.uid"]], "drawfeatures() (in module pyslam.visualize.drawfeatures)": [[36, "pyslam.visualize.DrawFeatures.drawFeatures"]], "pyslam.visualize.drawfeatures": [[36, "module-pyslam.visualize.DrawFeatures"]], "drawstereomatches() (in module pyslam.visualize.drawmatches)": [[37, "pyslam.visualize.DrawMatches.drawStereoMatches"]], "pyslam.visualize.drawmatches": [[37, "module-pyslam.visualize.DrawMatches"]], "pygameframewindow (class in pyslam.visualize.pygameframewindow)": [[38, "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow"]], "__captureloop() (pyslam.visualize.pygameframewindow.pygameframewindow method)": [[38, "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow.__captureLoop"]], "pyslam.visualize.pygameframewindow": [[38, "module-pyslam.visualize.PyGameFrameWindow"]], "startlistenloop() (pyslam.visualize.pygameframewindow.pygameframewindow method)": [[38, "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow.startListenLoop"]], "stoplistenloop() (pyslam.visualize.pygameframewindow.pygameframewindow method)": [[38, "pyslam.visualize.PyGameFrameWindow.PyGameFrameWindow.stopListenLoop"]], "pyslam.visualize": [[39, "module-pyslam.visualize"]]}})